;
;       SHOWCHR (Antiga Rotina de Leitura de Tecla)
;
        .Z80
;
IF1
.PRINTX .
.PRINTX +-------------------------------------+
.PRINTX |                                     |
.PRINTX |            FIG FORTH CPM            |
.PRINTX |                                     |
.PRINTX +-------------------------------------+
.PRINTX .
.PRINTX Compilando ... Passo 1.
ELSE
.PRINTX .              Passo 2.
ENDIF
;
BDOS EQU 0005H
;
	.PHASE	0100H
;
ENTRY:	NOP
	JP START
	NOP
	JP GOWARM
;
	dw ENTRY+1	; ENDERECO INICIAL DO PROGRAMA
	dw 0E00H
UPDIC:
	dw CPAGE	; ULTIMA PALAVRA DO DICIONARIO
	dw 0008H
	dw 0B7A8H
;
; ESTA TABELA E' TODA TRANSFERIDA PARA O ENDERECO INDICADO EM "PTPP"
;
PPISTK:
	dw 0B708H	; PONTEIRO POSICAO INICIAL DO STACK
	dw 0B7A8H
	dw 0B708H
	dw 001FH
	dw 0000H
	dw KBO
	dw KBO
	dw FLOATING
	dw 0000H
	dw 0B250H
PTPP:
	dw 0B7A8H	; PONTEIRO TRANSFERENCIA PILHA DE PARAMETROS
PPCONT:
	dw 0B7A0H	; PONTEIRO PILHA DE CONTAGEM
;
; PONTO DE RETORNO DE TODA FUNCAO FORTH EM L.M.; SALVA NA PILHA OS CONTEUDOS DE
; DE E HL, OBTEM O ENDERECO DO PROXIMO COMANDO A SER EXECUTADO, LOCALIZA O
; COMANDO E O EXECUTA, VOLTANDO A EXECUTAR ESTA ROTINA
;
SVDEHL:	PUSH DE
SVHL:	PUSH HL
ENDLM:	LD A,(BC)
	INC BC
	LD L,A
	LD A,(BC)
	INC BC
	LD H,A
EXECLM:	LD E,(HL)
	INC HL
	LD D,(HL)
	EX DE,HL
	JP (HL)
;
CLIT:
	db 83H
	dc 'LIT'
	dw 0
LIT:
	dw $+2
	LD A,(BC)
	INC BC
	LD L,A
	LD A,(BC)
	INC BC
	LD H,A
	JP SVHL
;
CEXECUTE:
	db 87H
	dc 'EXECUTE'
	dw CLIT
EXECUTE:
	dw $+2
	POP HL
	JP EXECLM
;
CBRANCH:
	db 86H
	dc 'BRANCH'
	dw CEXECUTE
BRANCH:
	dw $+2
	LD H,B
	LD L,C
	LD E,(HL)
	INC HL
	LD D,(HL)
	DEC HL
	ADD HL,DE
	LD C,L
	LD B,H
	JP ENDLM
;
C0BRANCH:
	db 87H
	dc '0BRANCH'
	dw CBRANCH
BRANCH0:
	dw $+2
	POP HL
	LD A,L
	OR H
	JP Z,BRANCH+2
	INC BC
	INC BC
	JP ENDLM
;
CDOLOOP:
	db 86H
	dc '(LOOP)'
	dw C0BRANCH
DOLOOP:
	dw $+2
	LD DE,0001H
DOLOP1:	LD HL,(PPCONT)
	LD A,(HL)
	ADD A,E
	LD (HL),A
	LD E,A
	INC HL
	LD A,(HL)
	ADC A,D
	LD (HL),A
	INC HL
	INC D
	DEC D
	LD D,A
	JP M,DOLOP2
	LD A,E
	SUB (HL)
	LD A,D
	INC HL
	SBC A,(HL)
	JP DOLOP3
DOLOP2:	LD A,(HL)
	SUB E
	INC HL
	LD A,(HL)
	SBC A,D
DOLOP3:	JP M,BRANCH+2
	INC HL
	LD (PPCONT),HL
	INC BC
	INC BC
	JP ENDLM
;
CDOSTEP:
	db 87H
	dc '(+LOOP)'
	dw CDOLOOP
DOSTEP:
	dw $+2
	POP DE
	JP DOLOP1
;
CDODO:
	db 84H
	dc '(DO)'
	dw CDOSTEP
DODO:
	dw $+2
	LD HL,(PPCONT)
	DEC HL
	DEC HL
	DEC HL
	DEC HL
	LD (PPCONT),HL
	POP DE
	LD (HL),E
	INC HL
	LD (HL),D
	POP DE
	INC HL
	LD (HL),E
	INC HL
	LD (HL),D
	JP ENDLM
;
CI:
	db 81H
	dc 'I'
	dw CDODO
PEEKI:
	dw $+2
	LD HL,(PPCONT)
	LD E,(HL)
	INC HL
	LD D,(HL)
	PUSH DE
	JP ENDLM
;
CDIGIT:
	db 85H
	dc 'DIGIT'
	dw CI
DIGIT:
	dw $+2
	POP HL
	POP DE
	LD A,E
	SUB '0'
	JP M,DIGIT2
	CP 0AH
	JP M,DIGIT1
	SUB 07H
	CP 0AH
	JP M,DIGIT2
DIGIT1:	CP L
	JP P,DIGIT2
	LD E,A
	LD HL,0001H
	JP SVDEHL
DIGIT2:	LD L,H
	JP SVHL
;
L022B:
	db 86H
	dc '(FIND)'
	dw CDIGIT
DOFIND:
	dw $+2
	POP DE
DOFND1:	POP HL
	PUSH HL
	LD A,(DE)
	XOR (HL)
	AND '?'
	JP NZ,DOFND5
DOFND2:	INC HL
	INC DE
	LD A,(DE)
	XOR (HL)
	ADD A,A
	JP NZ,DOFND4
	JP NC,DOFND2
	LD HL,0005H
	ADD HL,DE
	EX (SP),HL
DOFND3:	DEC DE
	LD A,(DE)
	OR A
	JP P,DOFND3
	LD E,A
	LD D,00H
	LD HL,0001H
	JP SVDEHL
DOFND4:	JP C,DOFND6
DOFND5:	INC DE
	LD A,(DE)
	OR A
	JP P,DOFND5
DOFND6:	INC DE
	EX DE,HL
	LD E,(HL)
	INC HL
	LD D,(HL)
	LD A,D
	OR E
	JP NZ,DOFND1
	POP HL
	LD HL,0000H
	JP SVHL
;
CENCLOSE:
	db 87H
	dc 'ENCLOSE'
	dw L022B
ENCLOSE:
	dw $+2
	EXX
	POP DE
	POP HL
	PUSH HL
	LD A,E
	LD D,A
	LD BC,0FFFFH
	DEC HL
ENCLO1:	INC HL
	INC BC
	CP (HL)
	JP Z,ENCLO1
	PUSH BC
	LD D,A
	LD A,(HL)
	AND A
	JP NZ,ENCLO2
	INC BC
	PUSH BC
	DEC BC
	PUSH BC
	JP ENCLO4
ENCLO2:	LD A,D
	INC HL
	INC BC
	CP (HL)
	JP Z,ENCLO3
	LD A,(HL)
	AND A
	JP NZ,ENCLO2
	PUSH BC
	PUSH BC
	JP ENCLO4
ENCLO3:	PUSH BC
	INC BC
	PUSH BC
ENCLO4:	EXX
	JP ENDLM
;
CEMIT:
	db 84H
	dc 'EMIT'
	dw CENCLOSE
EMIT:
	dw EXECF
	dw PUTCH,ONE,CONOUT,ADDMEM
	dw ENDF
;
CKEY:
	db 83H
	dc 'KEY'
	dw CEMIT
KEY:
	dw $+2
	JP GETCH
;
CINTERMINAL:
	db 89H
	dc '?TERMINAL'
	dw CKEY
INTERMINAL:
	dw $+2
	LD HL,0000H
	JP SAVECHR
;
CCR:
	db 82H
	dc 'CR'
	dw CINTERMINAL
CR:
	dw $+2
	JP CRLF
;
CCMOVE:
	db 85H
	dc 'CMOVE'
	dw CCR
CMOVE:
	dw $+2
	LD L,C
	LD H,B
	POP BC
	POP DE
	EX (SP),HL
	JP CMOVE2
CMOVE1:	LD A,(HL)
	INC HL
	LD (DE),A
	INC DE
	DEC BC
CMOVE2:	LD A,B
	OR C
	JP NZ,CMOVE1
	POP BC
	JP ENDLM
;
CUTIMES:
	db 82H
	dc 'U*'
	dw CCMOVE
UTIMES:
	dw $+2
	POP DE
	POP HL
	PUSH BC
	LD B,H
	LD A,L
	CALL UTIME1
	PUSH HL
	LD H,A
	LD A,B
	LD B,H
	CALL UTIME1
	POP DE
	LD C,D
	ADD HL,BC
	ADC A,00H
	LD D,L
	LD L,H
	LD H,A
	POP BC
	PUSH DE
	JP SVHL
UTIME1:	LD HL,0000H
	LD C,08H
UTIME2:	ADD HL,HL
	RLA
	JP NC,UTIME3
	ADD HL,DE
	ADC A,00H
UTIME3:	DEC C
	JP NZ,UTIME2
	RET
;
CUDIV:
	db 82H
	dc 'U/'
	dw CUTIMES
UDIV:
	dw $+2
	LD HL,0004H
	ADD HL,SP
	LD E,(HL)
	LD (HL),C
	INC HL
	LD D,(HL)
	LD (HL),B
	POP BC
	POP HL
	LD A,L
	SUB C
	LD A,H
	SBC A,B
	JP C,UDIV1
	LD HL,0FFFFH
	LD DE,0FFFFH
	JP UDIV6
UDIV1:	LD A,10H
UDIV2:	ADD HL,HL
	RLA
	EX DE,HL
	ADD HL,HL
	JP NC,UDIV3
	INC DE
	AND A
UDIV3:	EX DE,HL
	RRA
	PUSH AF
	JP NC,UDIV4
	LD A,L
	SUB C
	LD L,A
	LD A,H
	SBC A,B
	LD H,A
	JP UDIV5
UDIV4:	LD A,L
	SUB C
	LD L,A
	LD A,H
	SBC A,B
	LD H,A
	JP NC,UDIV5
	ADD HL,BC
	DEC DE
UDIV5:	INC DE
	POP AF
	DEC A
	JP NZ,UDIV2
UDIV6:	POP BC
	PUSH HL
	PUSH DE
	JP ENDLM
;
CAND:
	db 83H
	dc 'AND'
	dw CUDIV
AND:
	dw $+2
	POP DE
	POP HL
	LD A,E
	AND L
	LD L,A
	LD A,D
	AND H
	LD H,A
	JP SVHL
;
COR:
	db 82H
	dc 'OR'
	dw CAND
OR:
	dw $+2
	POP DE
	POP HL
	LD A,E
	OR L
	LD L,A
	LD A,D
	OR H
	LD H,A
	JP SVHL
;
CXOR:
	db 83H
	dc 'XOR'
	dw COR
XOR:
	dw $+2
	POP DE
	POP HL
	LD A,E
	XOR L
	LD L,A
	LD A,D
	XOR H
	LD H,A
	JP SVHL
;
CPEEKSP:
	db 83H
	dc 'SP@'
	dw CXOR
PEEKSP:
	dw $+2
	LD HL,0000H
	ADD HL,SP
	JP SVHL
;
CPOKESP:
	db 83H
	dc 'SP!'
	dw CPEEKSP
POKESP:
	dw $+2
	LD HL,(PTPP)
	LD DE,0006H
	ADD HL,DE
	LD E,(HL)
	INC HL
	LD D,(HL)
	EX DE,HL
	LD SP,HL
	JP ENDLM
;
CPEEKRP:
	db 83H
	dc 'RP@'
	dw CPOKESP
	dw $+2
	LD HL,(PPCONT)
	JP SVHL
;
CPOKERP:
	db 83H
	dc 'RP!'
	dw CPEEKRP
POKERP:
	dw $+2
	LD HL,(PTPP)
	LD DE,0008H
	ADD HL,DE
	LD E,(HL)
	INC HL
	LD D,(HL)
	EX DE,HL
	LD (PPCONT),HL
	JP ENDLM
;
CENDF:
	db 82H
	dc ';S'
	dw CPOKERP
ENDF:
	dw $+2
	LD HL,(PPCONT)
	LD C,(HL)
	INC HL
	LD B,(HL)
	INC HL
	LD (PPCONT),HL
	JP ENDLM
;
CLEAVE:
	db 85H
	dc 'LEAVE'
	dw CENDF
LEAVE:
	dw $+2
	LD HL,(PPCONT)
	LD E,(HL)
	INC HL
	LD D,(HL)
	INC HL
	LD (HL),E
	INC HL
	LD (HL),D
	JP ENDLM
;
CPUSHRP:
	db 82H
	dc '>R'
	dw CLEAVE
PUSHRP:
	dw $+2
	POP DE
	LD HL,(PPCONT)
	DEC HL
	DEC HL
	LD (PPCONT),HL
	LD (HL),E
	INC HL
	LD (HL),D
	JP ENDLM
;
CPOPRP:
	db 82H
	dc 'R>'
	dw CPUSHRP
POPRP:
	dw $+2
	LD HL,(PPCONT)
	LD E,(HL)
	INC HL
	LD D,(HL)
	INC HL
	LD (PPCONT),HL
	PUSH DE
	JP ENDLM
;
CPEEKR:
	db 81H
	dc 'R'
	dw CPOPRP
PEEKR:
	dw PEEKI+2
;
CEQUAL0:
	db 82H
	dc '0='
	dw CPEEKR
EQUAL0:
	dw $+2
	POP HL
	LD A,L
	OR H
	LD HL,0000H
	JP NZ,EQUL0E
	INC HL
EQUL0E:	JP SVHL
;
CLESS0:
	db 82H
	dc '0<'
	dw CEQUAL0
LESS0:
	dw $+2
	POP HL
	ADD HL,HL
	LD HL,0000H
	JP NC,LESS0E
	INC HL
LESS0E:	JP SVHL
;
CPLUS:
	db 81H
	dc '+'
	dw CLESS0
PLUS:
	dw $+2
	POP DE
	POP HL
	ADD HL,DE
	JP SVHL
;
CDPLUS:
	db 82H
	dc 'D+'
	dw CPLUS
DPLUS:
	dw $+2
	LD HL,0006H
	ADD HL,SP
	LD E,(HL)
	LD (HL),C
	INC HL
	LD D,(HL)
	LD (HL),B
	POP BC
	POP HL
	ADD HL,DE
	EX DE,HL
	POP HL
	LD A,L
	ADC A,C
	LD L,A
	LD A,H
	ADC A,B
	LD H,A
	POP BC
	PUSH DE
	JP SVHL
;
CMINUS:
	db 85H
	dc 'MINUS'
	dw CDPLUS
MINUS:
	dw $+2
	POP HL
	LD A,L
	CPL
	LD L,A
	LD A,H
	CPL
	LD H,A
	INC HL
	JP SVHL
;
CDMINUS:
	db 86H
	dc 'DMINUS'
	dw CMINUS
DMINUS:
	dw $+2
	POP HL
	POP DE
	SUB A
	SUB E
	LD E,A
	LD A,00H
	SBC A,D
	LD D,A
	LD A,00H
	SBC A,L
	LD L,A
	LD A,00H
	SBC A,H
	LD H,A
	PUSH DE
	JP SVHL
;
COVER:
	db 84H
	dc 'OVER'
	dw CDMINUS
OVER:
	dw $+2
	POP DE
	POP HL
	PUSH HL
	JP SVDEHL
;
CDROP:
	db 84H
	dc 'DROP'
	dw COVER
DROP:
	dw $+2
	POP HL
	JP ENDLM
;
CSWAP:
	db 84H
	dc 'SWAP'
	dw CDROP
SWAP:
	dw $+2
	POP HL
	EX (SP),HL
	JP SVHL
;
CDUP:
	db 83H
	dc 'DUP'
	dw CSWAP
DUP:
	dw $+2
	POP HL
	PUSH HL
	JP SVHL
;
C2DUP:
	db 84H
	dc '2DUP'
	dw CDUP
DUP2:
	dw $+2
	POP HL
	POP DE
	PUSH DE
	PUSH HL
	JP SVDEHL
;
CADDMEM:
	db 82H
	dc '+!'
	dw C2DUP
ADDMEM:
	dw $+2
	POP HL
	POP DE
	LD A,(HL)
	ADD A,E
	LD (HL),A
	INC HL
	LD A,(HL)
	ADC A,D
	LD (HL),A
	JP ENDLM
;
CTOGGLE:
	db 86H
	dc 'TOGGLE'
	dw CADDMEM
TOGGLE:
	dw $+2
	POP DE
	POP HL
	LD A,(HL)
	XOR E
	LD (HL),A
	JP ENDLM
;
CPEEK16:
	db 81H
	dc '@'
	dw CTOGGLE
PEEK16:
	dw $+2
	POP HL
	LD E,(HL)
	INC HL
	LD D,(HL)
	PUSH DE
	JP ENDLM
;
CPEEK8:
	db 82H
	dc 'C@'
	dw CPEEK16
PEEK8:
	dw $+2
	POP HL
	LD L,(HL)
	LD H,00H
	JP SVHL
;
CPEEK32:
	db 82H
	dc '2@'
	dw CPEEK8
PEEK32:
	dw $+2
	POP HL
	LD DE,0002H
	ADD HL,DE
	LD E,(HL)
	INC HL
	LD D,(HL)
	PUSH DE
	LD DE,0FFFDH
	ADD HL,DE
	LD E,(HL)
	INC HL
	LD D,(HL)
	PUSH DE
	JP ENDLM
;
CPOKE16:
	db 81H
	dc '!'
	dw CPEEK32
POKE16:
	dw $+2
	POP HL
	POP DE
	LD (HL),E
	INC HL
	LD (HL),D
	JP ENDLM
;
CPOKE8:
	db 82H
	dc 'C!'
	dw CPOKE16
POKE8:
	dw $+2
	POP HL
	POP DE
	LD (HL),E
	JP ENDLM
;
CPOKE32:
	db 82H
	dc '2!'
	dw CPOKE8
	dw $+2
	POP HL
	POP DE
	LD (HL),E
	INC HL
	LD (HL),D
	INC HL
	POP DE
	LD (HL),E
	INC HL
	LD (HL),D
	JP ENDLM
;
L05DB:
	db 0C1H
	dc ':'
	dw CPOKE32
	dw EXECF
	dw INEXEC,POKECSP,CURRENT
	dw PEEK16,CONTEXT,POKE16
	dw CREATE,ENDDEF,INILM
EXECF:	LD HL,(PPCONT)
	DEC HL
	LD (HL),B
	DEC HL
	LD (HL),C
	LD (PPCONT),HL
	INC DE
	LD C,E
	LD B,D
	JP ENDLM
;
L0603:
	db 0C1H
	dc ';'
	dw L05DB
	dw EXECF
	dw INCSP,COMPILE,ENDF
	dw SMUDGE,INIDEF
	dw ENDF
;
CNOOP:
	db 84H
	dc 'NOOP'
	dw L0603
NOOP:
	dw EXECF
	dw ENDF
;
CCONST:
	db 88H
	dc 'CONSTANT'
	dw CNOOP
CONSTANT:
	dw EXECF
	dw CREATE,SMUDGE,POKED16
	dw INILM
CONST:	INC DE
	EX DE,HL
	LD E,(HL)
	INC HL
	LD D,(HL)
	PUSH DE
	JP ENDLM
;
CVAR:
	db 88H
	dc 'VARIABLE'
	dw CCONST
VARIABLE:
	dw EXECF
	dw CONSTANT,INILM
VAR:	INC DE
	PUSH DE
	JP ENDLM
;
CUSER:
	db 84H
	dc 'USER'
	dw CVAR
	dw EXECF
	dw CONSTANT,INILM
USER:	INC DE
	EX DE,HL
	LD E,(HL)
	LD D,00H
	LD HL,(PTPP)
	ADD HL,DE
	JP SVHL
;
C0:
	db 81H
	dc '0'
	dw CUSER
ZERO:
	dw CONST
	dw 0000H
;
C1:
	db 81H
	dc '1'
	dw C0
ONE:
	dw CONST
	dw 0001H
;
C2:
	db 81H
	dc '2'
	dw C1
TWO:
	dw CONST
	dw 0002H
;
C3:
	db 81H
	dc '3'
	dw C2
THREE:
	dw CONST
	dw 0003H
;
CBL:
	db 82H
	dc 'BL'
	dw C3
BL:
	dw CONST
	dw 0020H
;
CCL:
	db 83H
	dc 'C/L'
	dw CBL
CL:
	dw CONST
	dw 0040H
;
CFIRST:
	db 85H
	dc 'FIRST'
	dw CCL
FIRST:
	dw CONST
	dw 0B7E8H
;
CLIMIT:
	db 85H
	dc 'LIMIT'
	dw CFIRST
LIMIT:
	dw CONST
	dw 0D000H
;
CBBUF:
	db 85H
	dc 'B/BUF'
	dw CLIMIT
BBUF:
	dw CONST
	dw 0400H
;
CBSCR:
	db 85H
	dc 'B/SCR'
	dw CBBUF
BSCR:
	dw CONST
	dw 0001H
;
CADORIGIN:
	db 87H
	dc '+ORIGIN'
	dw CBSCR
ADORIGIN:
	dw EXECF
	dw LIT,ENTRY,PLUS
	dw ENDF
;
CS0:
	db 82H
	dc 'S0'
	dw CADORIGIN
S0:
	dw USER
	dw 0006H
;
CR0:
	db 82H
	dc 'R0'
	dw CS0
	dw USER
	dw 0008H
;
CTIB:
	db 83H
	dc 'TIB'
	dw CR0
TIB:
	dw USER
	dw 000AH
;
CWIDTH:
	db 85H
	dc 'WIDTH'
	dw CTIB
WIDTH:
	dw USER
	dw 000CH
;
CWARNING:
	db 87H
	dc 'WARNING'
	dw CWIDTH
WARNING:
	dw USER
	dw 000EH
;
CFENCE:
	db 85H
	dc 'FENCE'
	dw CWARNING
FENCE:
	dw USER
	dw 0010H
;
CDP:
	db 82H
	dc 'DP'
	dw CFENCE
DP:
	dw USER
	dw 0012H
;
CVOCLINK:
	db 88H
	dc 'VOC-LINK'
	dw CDP
VOCLINK:
	dw USER
	dw 0014H
;
CBLK:
	db 83H
	dc 'BLK'
	dw CVOCLINK
BLK:
	dw USER
	dw 0016H
;
CIN:
	db 82H
	dc 'IN'
	dw CBLK
CONIN:
	dw USER
	dw 0018H
;
COUT:
	db 83H
	dc 'OUT'
	dw CIN
CONOUT:
	dw USER
	dw 001AH
;
CSCR:
	db 83H
	dc 'SCR'
	dw COUT
SCR:
	dw USER
	dw 001CH
;
COFFSET:
	db 86H
	dc 'OFFSET'
	dw CSCR
OFFSET:
	dw USER
	dw 001EH
;
CCONTEXT:
	db 87H
	dc 'CONTEXT'
	dw COFFSET
CONTEXT:
	dw USER
	dw 0020H
;
CCURRENT:
	db 87H
	dc 'CURRENT'
	dw CCONTEXT
CURRENT:
	dw USER
	dw 0022H
;
CSTATE:
	db 85H
	dc 'STATE'
	dw CCURRENT
STATE:
	dw USER
	dw 0024H
;
CBASE:
	db 84H
	dc 'BASE'
	dw CSTATE
BASE:
	dw USER
	dw 0026H
;
CDPL:
	db 83H
	dc 'DPL'
	dw CBASE
DPL:
	dw USER
	dw 0028H
;
CFLD:
	db 83H
	dc 'FLD'
	dw CDPL
	dw USER
	dw 002AH
;
CCSP:
	db 83H
	dc 'CSP'
	dw CFLD
CSP:
	dw USER
	dw 002CH
;
CRNUM:
	db 82H
	dc 'R#'
	dw CCSP
RNUM:
	dw USER
	dw 002EH
;
CHLD:
	db 83H
	dc 'HLD'
	dw CRNUM
HLD:
	dw USER
	dw 0030H
;
CPLUS1:
	db 82H
	dc '1+'
	dw CHLD
PLUS1:
	dw EXECF
	dw ONE,PLUS
	dw ENDF
;
CPLUS2:
	db 82H
	dc '2+'
	dw CPLUS1
PLUS2:
	dw EXECF
	dw TWO,PLUS
	dw ENDF
;
CHERE:
	db 84H
	dc 'HERE'
	dw CPLUS2
HERE:
	dw EXECF
	dw DP,PEEK16
	dw ENDF
;
CALLOT:
	db 85H
	dc 'ALLOT'
	dw CHERE
ALLOT:
	dw EXECF
	dw DP,ADDMEM
	dw ENDF
;
CPOKED16:
	db 81H
	dc ','
	dw CALLOT
POKED16:
	dw EXECF
	dw HERE,POKE16,TWO,ALLOT
	dw ENDF
;
CPOKED8:
	db 82H
	dc 'C,'
	dw CPOKED16
POKED8:
	dw EXECF
	dw HERE,POKE8,ONE,ALLOT
	dw ENDF
;
SUBTRCT:	LD A,L
	SUB E
	LD L,A
	LD A,H
	SBC A,D
	LD H,A
	RET
;
CSUBTRACT:
	db 81H
	dc '-'
	dw CPOKED8
SUBTRACT:
	dw $+2
	POP DE
	POP HL
	CALL SUBTRCT
	JP SVHL
;
CEQUAL:
	db 81H
	dc '='
	dw CSUBTRACT
EQUAL:
	dw EXECF
	dw SUBTRACT,EQUAL0
	dw ENDF
;
CLESSER:
	db 81H
	dc '<'
	dw CEQUAL
LESSER:
	dw $+2
	POP DE
	POP HL
	LD A,D
	XOR H
	JP M,LESSR1
	CALL SUBTRCT
LESSR1:	INC H
	DEC H
	JP M,LESSR2
	LD HL,0000H
	JP SVHL
LESSR2:	LD HL,0001H
	JP SVHL
;
CULESSER:
	db 82H
	dc 'U<'
	dw CLESSER
ULESSER:
	dw EXECF
	dw DUP2,XOR,LESS0,BRANCH0,0CH
	dw DROP,LESS0,EQUAL0,BRANCH,6
	dw SUBTRACT,LESS0
	dw ENDF
;
CGREATER:
	db 81H
	dc '>'
	dw CULESSER
GREATER:
	dw EXECF
	dw SWAP,LESSER
	dw ENDF
;
CROT:
	db 83H
	dc 'ROT'
	dw CGREATER
ROT:
	dw $+2
	POP DE
	POP HL
	EX (SP),HL
	JP SVDEHL
;
CSPACE:
	db 85H
	dc 'SPACE'
	dw CROT
SPACE:
	dw EXECF
	dw BL,EMIT
	dw ENDF
;
CDUPNZ:
	db 84H
	dc '-DUP'
	dw CSPACE
DUPNZ:
	dw EXECF
	dw DUP,BRANCH0,4,DUP
	dw ENDF
;
CTRAVERSE:
	db 88H
	dc 'TRAVERSE'
	dw CDUPNZ
TRAVERSE:
	dw EXECF
	dw SWAP,OVER,PLUS
	dw LIT,7FH
	dw OVER,PEEK8,LESSER
	dw BRANCH0,0FFF0H
	dw SWAP,DROP
	dw ENDF
;
CLATEST:
	db 86H
	dc 'LATEST'
	dw CTRAVERSE
LATEST:
	dw EXECF
	dw CURRENT,PEEK16,PEEK16
	dw ENDF
;
CLFA:
	db 83H
	dc 'LFA'
	dw CLATEST
LFA:
	dw EXECF
	dw LIT,4,SUBTRACT
	dw ENDF
;
CCFA:
	db 83H
	dc 'CFA'
	dw CLFA
CFA:
	dw EXECF
	dw TWO,SUBTRACT
	dw ENDF
;
CNFA:
	db 83H
	dc 'NFA'
	dw CCFA
NFA:
	dw EXECF
	dw LIT,5,SUBTRACT
	dw LIT,-1,TRAVERSE
	dw ENDF
;
CPFA:
	db 83H
	dc 'PFA'
	dw CNFA
PFA:
	dw EXECF
	dw ONE,TRAVERSE,LIT,5,PLUS
	dw ENDF
;
CPOKECSP:
	db 84H
	dc '!CSP'
	dw CPFA
POKECSP:
	dw EXECF
	dw PEEKSP,CSP,POKE16
	dw ENDF
;
CISERROR:
	db 86H
	dc '?ERROR'
	dw CPOKECSP
ISERROR:
	dw EXECF
	dw SWAP,BRANCH0,8,ERROR
	dw BRANCH,4,DROP
	dw ENDF
;
CINCOMP:
	db 85H
	dc '?COMP'
	dw CISERROR
INCOMP:
	dw EXECF
	dw STATE,PEEK16,EQUAL0
	dw LIT,11H,ISERROR
	dw ENDF
;
CINEXEC:
	db 85H
	dc '?EXEC'
	dw CINCOMP
INEXEC:
	dw EXECF
	dw STATE,PEEK16
	dw LIT,12H,ISERROR
	dw ENDF
;
CINPAIRS:
	db 86H
	dc '?PAIRS'
	dw CINEXEC
INPAIRS:
	dw EXECF
	dw SUBTRACT
	dw LIT,13H,ISERROR
	dw ENDF
;
CINCSP:
	db 84H
	dc '?CSP'
	dw CINPAIRS
INCSP:
	dw EXECF
	dw PEEKSP,CSP,PEEK16
	dw SUBTRACT,LIT,14H,ISERROR
	dw ENDF
;
CISLOADING:
	db 88H
	dc '?LOADING'
	dw CINCSP
ISLOADING:
	dw EXECF
	dw BLK,PEEK16,EQUAL0
	dw LIT,16H,ISERROR
	dw ENDF
;
CCOMPILE:
	db 87H
	dc 'COMPILE'
	dw CISLOADING
COMPILE:
	dw EXECF
	dw INCOMP,POPRP,DUP
	dw PLUS2,PUSHRP
	dw PEEK16,POKED16
	dw ENDF
;
CINIDEF:
	db 0C1H
	dc '['
	dw CCOMPILE
INIDEF:
	dw EXECF
	dw ZERO,STATE,POKE16
	dw ENDF
;
CENDDEF:
	db 81H
	dc ']'
	dw CINIDEF
ENDDEF:
	dw EXECF
	dw LIT,0C0H,STATE,POKE16
	dw ENDF
;
CSMUDGE:
	db 86H
	dc 'SMUDGE'
	dw CENDDEF
SMUDGE:
	dw EXECF
	dw LATEST,LIT,20H,TOGGLE
	dw ENDF
;
CHEX:
	db 83H
	dc 'HEX'
	dw CSMUDGE
HEX:
	dw EXECF
	dw LIT,10H,BASE,POKE16
	dw ENDF
;
CDECIMAL:
	db 87H
	dc 'DECIMAL'
	dw CHEX
DECIMAL:
	dw EXECF
	dw LIT,0AH,BASE,POKE16
	dw ENDF
;
CINILM:
	db 87H
	dc '(;CODE)'
	dw CDECIMAL
INILM:
	dw EXECF
	dw POPRP,LATEST,PFA
	dw CFA,POKE16
	dw ENDF
;
CDOCODE:
	db 0C5H
	dc ';CODE'
	dw CINILM
	dw EXECF
	dw INCSP,COMPILE,INILM
	dw INIDEF,NOOP
	dw ENDF
;
CBUILDS:
	db 87H
	dc '<BUILDS'
	dw CDOCODE
BUILDS:
	dw EXECF
	dw ZERO,CONSTANT
	dw ENDF
;
CDOES:
	db 85H
	dc 'DOES>'
	dw CBUILDS
DOES:
	dw EXECF
	dw POPRP,LATEST,PFA
	dw POKE16,INILM
ATIVATE:
	LD HL,(PPCONT)
	DEC HL
	LD (HL),B
	DEC HL
	LD (HL),C
	LD (PPCONT),HL
	INC DE
	EX DE,HL
	LD C,(HL)
	INC HL
	LD B,(HL)
	INC HL
	JP SVHL
;
CCOUNT:
	db 85H
	dc 'COUNT'
	dw CDOES
COUNT:
	dw EXECF
	dw DUP,PLUS1,SWAP,PEEK8
	dw ENDF
;
CTYPE:
	db 84H
	dc 'TYPE'
	dw CCOUNT
TYPE:
	dw EXECF
	dw DUPNZ,BRANCH0,18H
	dw OVER,PLUS,SWAP,DODO
	dw PEEKI,PEEK8,EMIT
	dw DOLOOP,0FFF8H,BRANCH,4,DROP
	dw ENDF
;
CMTRAILING:
	db 89H
	dc '-TRAILING'
	dw CTYPE
MTRAILING:
	dw EXECF
	dw DUP,ZERO,DODO,OVER
	dw OVER,PLUS,ONE,SUBTRACT
	dw PEEK8,BL,SUBTRACT,BRANCH0,8
	dw LEAVE,BRANCH,6,ONE
	dw SUBTRACT,DOLOOP,0FFE0H
	dw ENDF
;
CPRINT:
	db 84H
	dc '(.")'
	dw CMTRAILING
PRINT:
	dw EXECF
	dw PEEKR,COUNT,DUP
	dw PLUS1,POPRP
	dw PLUS,PUSHRP,TYPE
	dw ENDF
;
CPRINTNUM:
	db 0C2H
	dc '."'
	dw CPRINT
	dw EXECF
	dw LIT,22H,STATE,PEEK16
	dw BRANCH0,14H,COMPILE,PRINT
	dw WORD,HERE,PEEK8,PLUS1
	dw ALLOT,BRANCH,0AH
	dw WORD,HERE,COUNT,TYPE
	dw ENDF
;
CEXPECT:
	db 86H
	dc 'EXPECT'
	dw CPRINTNUM
EXPECT:
	dw EXECF
	dw OVER,PLUS,OVER,DODO,KEY
	dw DUP,LIT,0EH,ADORIGIN,PEEK16
	dw EQUAL,BRANCH0,34H,DROP,DUP
	dw PEEKI,EQUAL,DUP,POPRP,TWO
	dw SUBTRACT,PLUS,PUSHRP,BRANCH0,0AH
	dw LIT,7,BRANCH,10H
	dw LIT,8,EMIT,BL,EMIT
	dw LIT,8,BRANCH,28H,DUP
	dw LIT,0DH,EQUAL,BRANCH0,0EH,LEAVE
	dw DROP,BL,ZERO,BRANCH,4
	dw DUP,PEEKI,POKE8,ZERO,PEEKI
	dw PLUS1,POKE16,EMIT,DOLOOP,0FF92H
	dw DROP
	dw ENDF
;
CQUERY:
	db 85H
	dc 'QUERY'
	dw CEXPECT
QUERY:
	dw EXECF
	dw TIB,PEEK16,LIT,50H,EXPECT
	dw ZERO,CONIN,POKE16
	dw ENDF
;
CNULL:
	db 0C1H
	db 80H
	dw CQUERY
	dw EXECF
	dw BLK,PEEK16,BRANCH0,2AH,ONE
	dw BLK,ADDMEM,ZERO,CONIN,POKE16
	dw BLK,PEEK16,BSCR,ONE,SUBTRACT
	dw AND,EQUAL0,BRANCH0,8,INEXEC
	dw POPRP,DROP,BRANCH,6,POPRP
	dw DROP
	dw ENDF
;
CFILL:
	db 84H
	dc 'FILL'
	dw CNULL
FILL:
	dw $+2
	LD L,C
	LD H,B
	POP DE
	POP BC
	EX (SP),HL
	EX DE,HL
FILL1:	LD A,B
	OR C
	JP Z,FILL2
	LD A,L
	LD (DE),A
	INC DE
	DEC BC
	JP FILL1
FILL2:	POP BC
	JP ENDLM
;
CERASE:
	db 85H
	dc 'ERASE'
	dw CFILL
ERASE:
	dw EXECF
	dw ZERO,FILL
	dw ENDF
;
CBLANKS:
	db 86H
	dc 'BLANKS'
	dw CERASE
BLANKS:
	dw EXECF
	dw BL,FILL
	dw ENDF
;
CHOLD:
	db 84H
	dc 'HOLD'
	dw CBLANKS
HOLD:
	dw EXECF
	dw LIT,-1,HLD,ADDMEM,HLD
	dw PEEK16,POKE8
	dw ENDF
;
CPAD:
	db 83H
	dc 'PAD'
	dw CHOLD
PAD:
	dw EXECF
	dw HERE,LIT,44H,PLUS
	dw ENDF
;
CWORD:
	db 84H
	dc 'WORD'
	dw CPAD
WORD:
	dw EXECF
	dw BLK,PEEK16,BRANCH0,0CH,BLK
	dw PEEK16,BLOCK,BRANCH,6,TIB
	dw PEEK16,CONIN,PEEK16,PLUS,SWAP
	dw ENCLOSE,HERE,LIT,22H,BLANKS
	dw CONIN,ADDMEM,OVER,SUBTRACT,PUSHRP
	dw PEEKR,HERE,POKE8,PLUS,HERE
	dw PLUS1,POPRP,CMOVE
	dw ENDF
;
CDONUMBER:
	db 88H
	dc '(NUMBER)'
	dw CWORD
DONUMBER:
	dw EXECF
	dw PLUS1,DUP,PUSHRP,PEEK8,BASE
	dw PEEK16,DIGIT,BRANCH0,2CH,SWAP
	dw BASE,PEEK16,UTIMES,DROP,ROT
	dw BASE,PEEK16,UTIMES,DPLUS,DPL
	dw PEEK16,PLUS1,BRANCH0,8,ONE
	dw DPL,ADDMEM,POPRP,BRANCH,0FFC6H
	dw POPRP
	dw ENDF
;
CNUMBER:
	db 86H
	dc 'NUMBER'
	dw CDONUMBER
NUMBER:
	dw EXECF
	dw ZERO,ZERO,ROT,DUP,PLUS1
	dw PEEK8,LIT,2DH,EQUAL,DUP
	dw PUSHRP,PLUS,LIT,-1,DPL
	dw POKE16,DONUMBER,DUP,PEEK8,BL
	dw SUBTRACT,BRANCH0,16H,DUP,PEEK8
	dw LIT,2EH,SUBTRACT,ZERO,ISERROR
	dw ZERO,BRANCH,0FFDCH,DROP,POPRP
	dw BRANCH0,4,DMINUS
	dw ENDF
;
CEXISTS:
	db 85H
	dc '-FIND'
	dw CNUMBER
EXISTS:
	dw EXECF
	dw BL,WORD,HERE,COUNT,OVER
	dw PLUS,SWAP,DODO,PEEKI,PEEK8
	dw LIT,7FH,GREATER,ZERO,ISERROR
	dw DOLOOP,0FFF0H,HERE,CONTEXT,PEEK16
	dw PEEK16,DOFIND,DUP,EQUAL0,BRANCH0,0AH,DROP,HERE,LATEST,DOFIND
	dw ENDF
;
CDOABORT:
	db 87H
	dc '(ABORT)'
	dw CEXISTS
DOABORT:
	dw EXECF
	dw ABORT
	dw ENDF
;
CERROR:
	db 85H
	dc 'ERROR'
	dw CDOABORT
ERROR:
	dw EXECF
	dw WARNING,PEEK16,LESS0,BRANCH0,4
	dw DOABORT,HERE,COUNT,TYPE,PRINT
	db 02H,'? '
	dw MESSAGE,POKESP,BLK,PEEK16,DUPNZ
	dw BRANCH0,8,CONIN,PEEK16,SWAP
	dw QUIT
;
CID:
	db 83H
	dc 'ID.'
	dw CERROR
ID:
	dw EXECF
	dw PAD,LIT,20H,LIT,5FH
	dw FILL,DUP,PFA,LFA,OVER
	dw SUBTRACT,PAD,SWAP,CMOVE,PAD
	dw COUNT,LIT,1FH,AND,DUP2
	dw PLUS,ONE,SUBTRACT,DUP,PEEK8
	dw LIT,7FH,AND,SWAP,POKE8
	dw TYPE,SPACE
	dw ENDF
;
CCREATE:
	db 86H
	dc 'CREATE'
	dw CID
CREATE:
	dw EXECF
	dw EXISTS,BRANCH0,10H,DROP,NFA
	dw ID,LIT,4,MESSAGE,SPACE
	dw HERE,DUP,PEEK8,WIDTH,PEEK16
	dw MIN,PLUS1,ALLOT,DUP
	dw LIT,0A0H,TOGGLE,HERE,ONE,SUBTRACT
	dw LIT,80H,TOGGLE,LATEST,POKED16
	dw CURRENT,PEEK16,POKE16,HERE,PLUS2
	dw POKED16
	dw ENDF
;
CCANCOMPILE:
	db 0C9H
	dc '[COMPILE]'
	dw CCREATE
	dw EXECF
	dw EXISTS,EQUAL0,ZERO,ISERROR,DROP
	dw CFA,POKED16
	dw ENDF
;
CLITERAL:
	db 0C7H
	dc 'LITERAL'
	dw CCANCOMPILE
LITERAL:
	dw EXECF
	dw STATE,PEEK16,BRANCH0,8,COMPILE
	dw LIT,POKED16
	dw ENDF
;
CDLITERAL:
	db 0C8H
	dc 'DLITERAL'
	dw CLITERAL
DLITERAL:
	dw EXECF
	dw STATE,PEEK16,BRANCH0,8,SWAP
	dw LITERAL,LITERAL
	dw ENDF
;
CINSTACK:
	db 86H
	dc '?STACK'
	dw CDLITERAL
INSTACK:
	dw EXECF
	dw PEEKSP,S0,PEEK16,SWAP,ULESSER
	dw ONE,ISERROR,PEEKSP,HERE
	dw LIT,80H,PLUS,ULESSER,LIT,7
	dw ISERROR
	dw ENDF
;
CINTERPRET:
	db 89H
	dc 'INTERPRET'
	dw CINSTACK
	dw EXECF
	dw EXISTS,BRANCH0,1EH,STATE,PEEK16
	dw LESSER,BRANCH0,0AH,CFA,POKED16
	dw BRANCH,6,CFA,EXECUTE,INSTACK
	dw BRANCH,1CH,HERE,NUMBER,DPL
	dw PEEK16,PLUS1,BRANCH0,8,DLITERAL
	dw BRANCH,6,DROP,LITERAL,INSTACK
	dw BRANCH,0FFC2H
;
CIMMEDIATE:
	db 89H
	dc 'IMMEDIATE'
	dw CINTERPRET
	dw EXECF
	dw LATEST,LIT,40H,TOGGLE
	dw ENDF
;
CVOCABULARY:
	db 8AH
	dc 'VOCABULARY'
	dw CIMMEDIATE
	dw EXECF
	dw BUILDS,LIT,0A081H,POKED16,CURRENT
	dw PEEK16,CFA,POKED16,HERE,VOCLINK,PEEK16
	dw POKED16,VOCLINK,POKE16,DOES
VOCABULARY:
	dw PLUS2,CONTEXT,POKE16
	dw ENDF
;
CFORTH:
	db 0C5H
	dc 'FORTH'
	dw CVOCABULARY
FORTH:
	dw ATIVATE
	dw VOCABULARY
;
OUTDIC:
	dw 0A081H       ; SAIDA DO DICIONARIO CORRENTE
LASTMAIN:
	dw CPAGE
VEDITOR:
	dw 0000H
;
CDEFINITIONS:
	db 8BH
	dc 'DEFINITIONS'
	dw CFORTH
DEFINITIONS:
	dw EXECF
	dw CONTEXT,PEEK16,CURRENT,POKE16
	dw ENDF
;
CPARENTHESIS:
	db 0C1H
	dc '('
	dw CDEFINITIONS
	dw EXECF
	dw LIT,29H,WORD
	dw ENDF
;
CQUIT:
	db 84H
	dc 'QUIT'
	dw CPARENTHESIS
QUIT:
	dw EXECF
	dw ZERO,BLK,POKE16,INIDEF,POKERP
	dw CR,QUERY,FINTERPRET,STATE,PEEK16
	dw EQUAL0,BRANCH0,7,PRINT
	db 02H,'OK'
	dw BRANCH,0FFE7H
;
CABORT:
	db 85H
	dc 'ABORT'
	dw CQUIT
ABORT:
	dw EXECF
	dw POKESP,DECIMAL,INSTACK,CR,CPU
	dw PRINT
	db 0DH,'FIG-FORTH 1.1'
	dw FORTH,DEFINITIONS,QUIT
;
GOWARM:	LD BC,PWARM
	JP ENDLM
;
PWARM:
	dw WARM
;
CWARM:
	db 84H
	dc 'WARM'
	dw CABORT
WARM:
	dw EXECF
	dw EMPTYBUFFERS,ABORT
;
START:	LD BC,PCOLD
	LD HL,(PPISTK)
	LD SP,HL
	LD A,(0002H)
	LD (GETCH1+2),A  ; AJUSTA A CHAMADA DA ROTINA DE LER TECLA
	LD (PUTCH1+2),A  ; AJUSTA A CHAMADA DA ROTINA DE EXIBIR CARACTER
	JP ENDLM
;
PCOLD:
	dw COLD
;
CCOLD:
	db 84H
	dc 'COLD'
	dw CWARM
COLD:
	dw EXECF
	dw EMPTYBUFFERS,ZERO,DENSITY,POKE16,FIRST
	dw USE,POKE16,FIRST,PREV,POKE16
	dw DR0,LIT,0,LIT,TOPRN
	dw POKE16,LIT,PPISTK,LIT,PTPP
	dw PEEK16,LIT,6,PLUS
	dw LIT,10H,CMOVE,LIT,UPDIC,PEEK16
	dw LIT,LASTMAIN,POKE16,ABORT
;
CS_D:
	db 84H
	dc 'S->D'
	dw CCOLD
S_D:
	dw $+2
	POP DE
	LD HL,0000H
	LD A,D
	AND 80H
	JP Z,S_D1
	DEC HL
S_D1:	JP SVDEHL
;
CSUBCOND:
	db 82H
	dc '+-'
	dw CS_D
SUBCOND:
	dw EXECF
	dw LESS0,BRANCH0,4,MINUS
	dw ENDF
;
CDSUBCOND:
	db 83H
	dc 'D+-'
	dw CSUBCOND
DSUBCOND:
	dw EXECF
	dw LESS0,BRANCH0,4,DMINUS
	dw ENDF
;
CABS:
	db 83H
	dc 'ABS'
	dw CDSUBCOND
ABS:
	dw EXECF
	dw DUP,SUBCOND
	dw ENDF
;
CDABS:
	db 84H
	dc 'DABS'
	dw CABS
DABS:
	dw EXECF
	dw DUP,DSUBCOND
	dw ENDF
;
CMIN:
	db 83H
	dc 'MIN'
	dw CDABS
MIN:
	dw EXECF
	dw DUP2,GREATER,BRANCH0,4,SWAP
	dw DROP
	dw ENDF
;
CMAX:
	db 83H
	dc 'MAX'
	dw CMIN
MAX:
	dw EXECF
	dw DUP2,LESSER,BRANCH0,4,SWAP
	dw DROP
	dw ENDF
;
CMTIMES:
	db 82H
	dc 'M*'
	dw CMAX
MTIMES:
	dw EXECF
	dw DUP2,XOR,PUSHRP,ABS,SWAP
	dw ABS,UTIMES,POPRP,DSUBCOND
	dw ENDF
;
CMDIV:
	db 82H
	dc 'M/'
	dw CMTIMES
MDIV:
	dw EXECF
	dw OVER,PUSHRP,PUSHRP,DABS,PEEKR
	dw ABS,UDIV,POPRP,PEEKR,XOR
	dw SUBCOND,SWAP,POPRP,SUBCOND,SWAP
	dw ENDF
;
CMULTIPLIC:
	db 81H
	dc '*'
	dw CMDIV
MULTIPLIC:
	dw EXECF
	dw MTIMES,DROP
	dw ENDF
;
CDIVMOD:
	db 84H
	dc '/MOD'
	dw CMULTIPLIC
DIVMOD:
	dw EXECF
	dw PUSHRP,S_D,POPRP,MDIV
	dw ENDF
;
CDIVIDE:
	db 81H
	dc '/'
	dw CDIVMOD
DIVIDE:
	dw EXECF
	dw DIVMOD,SWAP,DROP
	dw ENDF
;
CMOD:
	db 83H
	dc 'MOD'
	dw CDIVIDE
MOD:
	dw EXECF
	dw DIVMOD,DROP
	dw ENDF
;
CTDMOD:
	db 85H
	dc '*/MOD'
	dw CMOD
TDMOD:
	dw EXECF
	dw PUSHRP,MTIMES,POPRP,MDIV
	dw ENDF
;
CTIMESDIV:
	db 82H
	dc '*/'
	dw CTDMOD
	dw EXECF
	dw TDMOD,SWAP,DROP
	dw ENDF
;
CMEMDIVMOD:
	db 85H
	dc 'M/MOD'
	dw CTIMESDIV
MEMDIVMOD:
	dw EXECF
	dw PUSHRP,ZERO,PEEKR,UDIV,POPRP
	dw SWAP,PUSHRP,UDIV,POPRP
	dw ENDF
;
CLINE1:
	db 86H
	dc '(LINE)'
	dw CMEMDIVMOD
LINE1:
	dw EXECF
	dw PUSHRP,LIT,40H,BBUF,TDMOD
	dw POPRP,BSCR,MULTIPLIC,PLUS,BLOCK
	dw PLUS,LIT,40H
	dw ENDF
;
CPRTLINE:
	db 85H
	dc '.LINE'
	dw CLINE1
PRTLINE:
	dw EXECF
	dw LINE1,MTRAILING,TYPE
	dw ENDF
;
CMESSAGE:
	db 87H
	dc 'MESSAGE'
	dw CPRTLINE
MESSAGE:
	dw EXECF
	dw WARNING,PEEK16,BRANCH0,1EH,DUPNZ
	dw BRANCH0,14H,LIT,4,OFFSET
	dw PEEK16,BSCR,DIVIDE,SUBTRACT,PRTLINE
	dw SPACE,BRANCH,0DH,PRINT
	db 06H,'MSG # '
	dw IMPNUM
	dw ENDF
;
CINP:
	db 82H
	dc 'P@'
	dw CMESSAGE
	dw $+2
	POP DE
	LD HL,INP+1
	LD (HL),E
INP:	IN A,(00H)
	LD L,A
	LD H,00H
	JP SVHL
;
COUTP:
	db 82H
	dc 'P!'
	dw CINP
	dw $+2
	POP DE
	LD HL,OUTP+1
	LD (HL),E
	POP HL
	LD A,L
OUTP:	OUT (00H),A
	JP ENDLM
;
CDRIVE:
	db 85H
	dc 'DRIVE'
	dw COUTP
DRIVE:
	dw VAR
	dw 0000H
;
CSEC:
	db 83H
	dc 'SEC'
	dw CDRIVE
SEC:
	dw VAR
	dw 000BH
;
CTRACK:
	db 85H
	dc 'TRACK'
	dw CSEC
TRACK:
	dw VAR
	dw 0027H
;
CUSE:
	db 83H
	dc 'USE'
	dw CTRACK
USE:
	dw VAR
	dw 0B7E8H
;
CPREV:
	db 84H
	dc 'PREV'
	dw CUSE
PREV:
	dw VAR
	dw 0B7E8H
;
CSECBLK:
	db 87H
	dc 'SEC/BLK'
	dw CPREV
SECBLK:
	dw CONST
	dw 0008H
;
CNUMBUFF:
	db 85H
	dc '#BUFF'
	dw CSECBLK
NUMBUFF:
	dw CONST
	dw 0006H
;
CDENSITY:
	db 87H
	dc 'DENSITY'
	dw CNUMBUFF
DENSITY:
	dw VAR
	dw 0000H
;
CDISKERROR:
	db 8AH
	dc 'DISK-ERROR'
	dw CDENSITY
DISKERROR:
	dw VAR
	dw 0000H
;
CADDBUF:
	db 84H
	dc '+BUF'
	dw CDISKERROR
ADDBUF:
	dw EXECF
	dw LIT,0404H,PLUS,DUP,LIMIT
	dw EQUAL,BRANCH0,6,DROP,FIRST
	dw DUP,PREV,PEEK16,SUBTRACT
	dw ENDF
;
CUPDATE:
	db 86H
	dc 'UPDATE'
	dw CADDBUF
UPDATE:
	dw EXECF
	dw PREV,PEEK16,PEEK16,LIT,8000H
	dw OR,PREV,PEEK16,POKE16
	dw ENDF
;
CEMPTYBUFFERS:
	db 8DH
	dc 'EMPTY-BUFFERS'
	dw CUPDATE
EMPTYBUFFERS:
	dw EXECF
	dw FIRST,LIMIT,OVER,SUBTRACT,ERASE
	dw ENDF
;
CDR0:
	db 83H
	dc 'DR0'
	dw CEMPTYBUFFERS
DR0:
	dw EXECF
	dw ZERO,OFFSET,POKE16
	dw ENDF
;
CDR1:
	db 83H
	dc 'DR1'
	dw CDR0
	dw EXECF
	dw DENSITY,PEEK16,BRANCH0,0AH
	dw LIT,EXECUTE+2,BRANCH,6
	dw LIT,EXECUTE+2
	dw OFFSET,POKE16
	dw ENDF
;
CBUFFER:
	db 86H
	dc 'BUFFER'
	dw CDR1
BUFFER:
	dw EXECF
	dw USE,PEEK16,DUP,PUSHRP,ADDBUF
	dw BRANCH0,0FFFCH,USE,POKE16,PEEKR
	dw PEEK16,LESS0,BRANCH0,14H,PEEKR
	dw PLUS2,PEEKR,PEEK16,LIT,7FFFH
	dw AND,ZERO,RWF,PEEKR,POKE16
	dw PEEKR,PREV,POKE16,POPRP,PLUS2
	dw ENDF
;
CBLOCK:
	db 85H
	dc 'BLOCK'
	dw CBUFFER
BLOCK:
	dw EXECF
	dw OFFSET,PEEK16,PLUS,PUSHRP,PREV
	dw PEEK16,DUP,PEEK16,PEEKR,SUBTRACT
	dw DUP,PLUS,BRANCH0,34H,ADDBUF
	dw EQUAL0,BRANCH0,14H,DROP,PEEKR
	dw BUFFER,DUP,PEEKR,ONE,RWF
	dw TWO,SUBTRACT,DUP,PEEK16,PEEKR
	dw SUBTRACT,DUP,PLUS,EQUAL0,BRANCH0,0FFD6H,DUP,PREV,POKE16,POPRP
	dw DROP,PLUS2
	dw ENDF
;
CALLBDOS:
	LD HL,(0001H)
	ADD HL,DE
	JP (HL)
;
CSETIO:
	db 86H
	dc 'SET-IO'
	dw CBLOCK
SETIO:
	dw $+2
	PUSH BC
	LD HL,(USE+2)
	LD B,H
	LD C,L
	LD DE,0021H
	CALL CALLBDOS
	LD HL,(SEC+2)
	LD C,L
	LD DE,001EH
	CALL CALLBDOS
	LD HL,(TRACK+2)
	LD B,H
	LD C,L
	LD DE,001BH
	CALL CALLBDOS
	POP BC
	JP ENDLM
;
CSETDRIVE:
	db 89H
	dc 'SET-DRIVE'
	dw CSETIO
SETDRIVE:
	dw $+2
	PUSH BC
	LD A,(DRIVE+2)
	LD C,A
	LD DE,0018H
	CALL CALLBDOS
	POP BC
	JP ENDLM
;
CTSCALC:
	db 87H
	dc 'T&SCALC'
	dw CSETDRIVE
TSCALC:
	dw EXECF
	dw DENSITY,PEEK16,BRANCH0,36H
	dw LIT,0320H,DIVMOD,LIT,2,MIN
	dw DUP,DRIVE,PEEK16,EQUAL,BRANCH0,8,DROP,BRANCH,8,DRIVE
	dw POKE16,SETDRIVE,LIT,14H,DIVMOD
	dw TRACK,POKE16,SEC,POKE16,ENDF
	dw LIT,0320H,DIVMOD,LIT,2
	dw MIN,DUP,DRIVE,PEEK16,EQUAL
	dw BRANCH0,8,DROP,BRANCH,8
	dw DRIVE,POKE16,SETDRIVE,LIT,14H
	dw DIVMOD,TRACK,POKE16,SEC,POKE16
	dw ENDF
;
CSECREAD:
	db 88H
	dc 'SEC-READ'
	dw CTSCALC
SECREAD:
	dw $+2
	PUSH BC
	LD DE,0024H
	CALL CALLBDOS
	LD (DISKERROR+2),A
	POP BC
	JP ENDLM
;
CSECWRITE:
	db 89H
	dc 'SEC-WRITE'
	dw CSECREAD
SECWRITE:
	dw $+2
	PUSH BC
	LD DE,0027H
	CALL CALLBDOS
	LD (DISKERROR+2),A
	POP BC
	JP ENDLM
;
CRW:
	db 83H
	dc 'R/W'
	dw CSECWRITE
RW:
	dw EXECF
	dw USE,PEEK16,PUSHRP,SWAP,ONE
	dw SUBTRACT,SECBLK,MULTIPLIC,ROT,USE
	dw POKE16,SECBLK,ZERO,DODO,OVER
	dw OVER,TSCALC,SETIO,BRANCH0,8
	dw SECREAD,BRANCH,4,SECWRITE,PLUS1
	dw LIT,80H,USE,ADDMEM,DOLOOP
	dw 0FFE0H,DROP,DROP,POPRP,USE
	dw POKE16
	dw ENDF
;
CFLUSH:
	db 85H
	dc 'FLUSH'
	dw CRW
FLUSH:
	dw EXECF
	dw NUMBUFF,PLUS1,ZERO,DODO,ZERO
	dw BUFFER,DROP,DOLOOP,0FFF8H
	dw ENDF
;
CLOAD1:
	db 84H
	dc 'LOAD'
	dw CFLUSH
LOAD:
	dw EXECF
	dw BLK,PEEK16,PUSHRP,CONIN,PEEK16
	dw PUSHRP,ZERO,CONIN,POKE16,BSCR
	dw MULTIPLIC,BLK,POKE16,FINTERPRET,POPRP
	dw CONIN,POKE16,POPRP,BLK,POKE16
	dw ENDF
;
CPOKECHR:
	db 0C3H
	dc '-->'
	dw CLOAD1
	dw EXECF
	dw ISLOADING,ZERO,CONIN,POKE16,BSCR
	dw BLK,PEEK16,OVER,MOD,SUBTRACT
	dw BLK,ADDMEM
	dw ENDF
;
TOPRN:	db 00H
TOSCR:	db 00H
;
CHRSCR:	LD E,0FFH
PUTGET:	LD C,06H
	CALL BDOS
	RET
;
CHRPRN:	LD C,05H
	CALL BDOS
	RET
;
SHOWCHR:
	LD A,(TOSCR)
	OR A
	PUSH DE
	CALL Z,PUTGET
	POP DE
	LD A,(TOPRN)
	OR A
	CALL NZ,CHRPRN
	RET
;
SAVECHR:
	PUSH BC
	CALL CHRSCR
	LD L,A
	LD H,00H
	POP BC
	JP SVHL
;
GETCH:	PUSH BC
GETCH1:	CALL 0009H
	LD L,A
	CP 10H
	JR NZ,GETCH2
	LD DE,TOPRN
	LD A,(DE)
	XOR 01H
	LD (DE),A
	LD L,20H
GETCH2:	LD H,00H
	POP BC
	JP SVHL
;
PUTCH:
	dw $+2
	POP DE
	PUSH BC
	LD C,E
PUTCH1:	CALL 000CH
	POP BC
	JP ENDLM
;
	XOR 01H
	LD (HL),A
	LD L,E
	LD H,00H
	JP SVHL
;
	dw $+2
	POP HL
	PUSH BC
	LD C,L
	CALL 1695H
	POP BC
	JP 012CH
;
CRLF:	PUSH BC
	LD E,0DH
	NOP
	CALL SHOWCHR
	LD E,0AH
	NOP
	CALL SHOWCHR
	POP BC
	JP ENDLM
;
CCOMPBUFF:
	db 0C1H
	db 0A7H		; '
	dw CPOKECHR
SEARCH:
	dw EXECF
	dw EXISTS,EQUAL0,ZERO,ISERROR,DROP
	dw LITERAL
	dw ENDF
;
CFORGET:
	db 86H
	dc 'FORGET'
	dw CCOMPBUFF
	dw EXECF
	dw CURRENT,PEEK16,CONTEXT,PEEK16,SUBTRACT
	dw LIT,18H,ISERROR,SEARCH,DUP
	dw FENCE,PEEK16,LESSER,LIT,15H
	dw ISERROR,DUP,NFA,DP,POKE16
	dw LFA,PEEK16,CONTEXT,PEEK16,POKE16
	dw ENDF
;
CBACK:
	db 84H
	dc 'BACK'
	dw CFORGET
BACK:
	dw EXECF
	dw HERE,SUBTRACT,POKED16
	dw ENDF
;
CBEGIN:
	db 0C5H
	dc 'BEGIN'
	dw CBACK
	dw EXECF
	dw INCOMP,HERE,ONE
	dw ENDF
;
CENDIF:
	db 0C5H
	dc 'ENDIF'
	dw CBEGIN
ENDIF_:
	dw EXECF
	dw INCOMP,TWO,INPAIRS,HERE,OVER
	dw SUBTRACT,SWAP,POKE16
	dw ENDF
;
CTHEN:
	db 0C4H
	dc 'THEN'
	dw CENDIF
	dw EXECF
	dw ENDIF_
	dw ENDF
;
CDO:
	db 0C2H
	dc 'DO'
	dw CTHEN
	dw EXECF
	dw COMPILE,DODO,HERE,THREE
	dw ENDF
;
CLOOP:
	db 0C4H
	dc 'LOOP'
	dw CDO
	dw EXECF
	dw THREE,INPAIRS,COMPILE,DOLOOP,BACK
	dw ENDF
;
CSTEP:
	db 0C5H
	dc '+LOOP'
	dw CLOOP
	dw EXECF
	dw THREE,INPAIRS,COMPILE,DOSTEP,BACK
	dw ENDF
;
CUNTIL:
	db 0C5H
	dc 'UNTIL'
	dw CSTEP
UNTIL:
	dw EXECF
	dw ONE,INPAIRS,COMPILE,BRANCH0,BACK
	dw ENDF
;
CEND:
	db 0C3H
	dc 'END'
	dw CUNTIL
	dw EXECF
	dw UNTIL
	dw ENDF
;
CAGAIN:
	db 0C5H
	dc 'AGAIN'
	dw CEND
AGAIN:
	dw EXECF
	dw ONE,INPAIRS,COMPILE,BRANCH,BACK
	dw ENDF
;
CREPEAT:
	db 0C6H
	dc 'REPEAT'
	dw CAGAIN
	dw EXECF
	dw PUSHRP,PUSHRP,AGAIN,POPRP,POPRP
	dw TWO,SUBTRACT,ENDIF_
	dw ENDF
;
CIF:
	db 0C2H
	dc 'IF'
	dw CREPEAT
IF_:
	dw EXECF
	dw COMPILE,BRANCH0,HERE,ZERO,POKED16
	dw TWO
	dw ENDF
;
CELSE:
	db 0C4H
	dc 'ELSE'
	dw CIF
	dw EXECF
	dw TWO,INPAIRS,COMPILE,BRANCH,HERE
	dw ZERO,POKED16,SWAP,TWO,ENDIF_
	dw TWO
	dw ENDF
;
CWHILE:
	db 0C5H
	dc 'WHILE'
	dw CELSE
	dw EXECF
	dw IF_,PLUS2
	dw ENDF
;
CSPACES:
	db 86H
	dc 'SPACES'
	dw CWHILE
SPACES:
	dw EXECF
	dw ZERO,MAX,DUPNZ,BRANCH0,0CH
	dw ZERO,DODO,SPACE,DOLOOP,0FFFCH
	dw ENDF
;
CININUM:
	db 82H
	dc '<#'
	dw CSPACES
ININUM:
	dw EXECF
	dw PAD,HLD,POKE16
	dw ENDF
;
CENDNUM:
	db 82H
	dc '#>'
	dw CININUM
ENDNUM:
	dw EXECF
	dw DROP,DROP,HLD,PEEK16,PAD
	dw OVER,SUBTRACT
	dw ENDF
;
CSIGN:
	db 84H
	dc 'SIGN'
	dw CENDNUM
SIGN:
	dw EXECF
	dw ROT,LESS0,BRANCH0,8
	dw LIT,2DH,HOLD
	dw ENDF
;
CGENNUM:
	db 81H
	dc '#'
	dw CSIGN
GENNUM:
	dw EXECF
	dw BASE,PEEK16,MEMDIVMOD,ROT
	dw LIT,9,OVER,LESSER,BRANCH0,8
	dw LIT,7,PLUS,LIT,30H
	dw PLUS,HOLD
	dw ENDF
;
CNUM_S:
	db 82H
	dc '#S'
	dw CGENNUM
NUM_S:
	dw EXECF
	dw GENNUM,OVER,OVER,OR,EQUAL0
	dw BRANCH0,0FFF4H
	dw ENDF
;
CIMPDR:
	db 83H
	dc 'D.R'
	dw CNUM_S
IMPDR:
	dw EXECF
	dw PUSHRP,SWAP,OVER,DABS,ININUM
	dw NUM_S,SIGN,ENDNUM,POPRP,OVER
	dw SUBTRACT,SPACES,TYPE
	dw ENDF
;
CIMPR:
	db 82H
	dc '.R'
	dw CIMPDR
IMPR:
	dw EXECF
	dw PUSHRP,S_D,POPRP,IMPDR
	dw ENDF
;
CIMPD:
	db 82H
	dc 'D.'
	dw CIMPR
IMPD:
	dw EXECF
	dw ZERO,IMPDR,SPACE
	dw ENDF
;
CIMPNUM:
	db 81H
	dc '.'
	dw CIMPD
IMPNUM:
	dw EXECF
	dw S_D,IMPD
	dw ENDF
;
CIMPMEM:
	db 81H
	dc '?'
	dw CIMPNUM
	dw EXECF
	dw PEEK16,IMPNUM
	dw ENDF
;
CIMPDNUM:
	db 82H
	dc 'U.'
	dw CIMPMEM
	dw EXECF
	dw ZERO,IMPD
	dw ENDF
;
CVLIST:
	db 85H
	dc 'VLIST'
	dw CIMPDNUM
	dw EXECF
	dw LIT,80H,CONOUT,POKE16,CONTEXT
	dw PEEK16,PEEK16,CONOUT,PEEK16,CL
	dw GREATER,BRANCH0,0AH,CR,ZERO
	dw CONOUT,POKE16,DUP,ID,SPACE
	dw SPACE,PFA,LFA,PEEK16,DUP
	dw EQUAL0,INTERMINAL,OR,BRANCH0,0FFD4H
	dw DROP
	dw ENDF
;
CBYE:
	db 83H
	dc 'BYE'
	dw CVLIST
	dw $+2
	JP 0000H
;
CLISTSCR:
	db 84H
	dc 'LIST'
	dw CBYE
LISTSCR:
	dw EXECF
	dw ONE,MAX,DECIMAL,CR,DUP
	dw SCR,POKE16,PRINT
	db 06H,'SCR # '
	dw IMPNUM,LIT,10H,ZERO,DODO
	dw CR,PEEKI,LIT,3,IMPR
	dw SPACE,PEEKI,SCR,PEEK16,PRTLINE
	dw INTERMINAL,BRANCH0,4,LEAVE,DOLOOP
	dw 0FFE2H,CR
	dw ENDF
;
CINDEX:
	db 85H
	dc 'INDEX'
	dw CLISTSCR
	dw EXECF
	dw LIT,1AH,EMIT,CR,PLUS1
	dw SWAP,DODO,CR,PEEKI
	dw LIT,3,IMPR,SPACE,ZERO,PEEKI
	dw PRTLINE,INTERMINAL,BRANCH0,4,LEAVE
	dw DOLOOP,0FFE4H
	dw ENDF
;
CTRIAD:
	db 85H
	dc 'TRIAD'
	dw CINDEX
	dw EXECF
	dw LIT,1AH,EMIT,THREE,MAX
	dw LIT,3,DIVIDE,LIT,3
	dw MULTIPLIC,LIT,3,OVER,PLUS
	dw SWAP,DODO,CR,PEEKI,LISTSCR
	dw INTERMINAL,BRANCH0,4,LEAVE,DOLOOP
	dw 0FFF0H,CR,LIT,0FH,MESSAGE
	dw CR
	dw ENDF
;
CCPU:
	db 84H
	dc '.CPU'
	dw CTRIAD
CPU:
	dw EXECF
	dw BASE,PEEK16,LIT,24H,BASE
	dw POKE16,LIT,22H,ADORIGIN,PEEK32
	dw IMPD,BASE,POKE16
	dw ENDF
;
CMATCH:
	db 85H
	dc 'MATCH'
	dw CCPU
MATCH:
	dw $+2
	POP DE
	PUSH DE
	EXX
	POP BC
	POP DE
	EXX
	POP HL
	EXX
	POP HL
	PUSH HL
	EXX
MATCH1:	PUSH HL
	AND A
	SBC HL,DE
	POP HL
	JP C,MATCH5
	EXX
	PUSH BC
	PUSH DE
	PUSH HL
MATCH2:	LD A,(DE)
	CP (HL)
	JP NZ,MATCH3
	INC DE
	INC HL
	DEC BC
	LD A,B
	OR C
	JP NZ,MATCH2
	JP MATCH4
MATCH3:	POP HL
	POP DE
	POP BC
	INC HL
	EXX
	DEC HL
	JP MATCH1
MATCH4:	POP HL
	POP DE
	POP BC
	POP DE
	AND A
	SBC HL,DE
	ADD HL,BC
	LD DE,0001H
	PUSH DE
	PUSH HL
	EXX
	JP ENDLM
MATCH5:	PUSH HL
	EXX
	POP DE
	ADD HL,DE
	POP DE
	AND A
	SBC HL,DE
	LD DE,0000H
	PUSH DE
	PUSH HL
	EXX
	JP ENDLM
;
CXDOSFUNC:
	db 88H
	dc 'XDOSFUNC'
	dw CMATCH
XDOSFUNC:
	dw VAR
	dw 0022H
;
CXDOSPARAM:
	db 89H
	dc 'XDOSPARAM'
	dw CXDOSFUNC
XDOSPARAM:
	dw VAR
	dw 005CH
	dw 5800H
;
CXDOSCALL:
	db 88H
	dc 'XDOSCALL'
	dw CXDOSPARAM
XDOSCALL:
	dw $+2
	PUSH BC
	LD HL,(XDOSFUNC+2)
	LD C,L
	LD HL,(XDOSPARAM+2)
	LD D,H
	LD E,L
	CALL BDOS
	LD (XDOSPARAM+4),HL
	LD H,00H
	LD L,A
	LD (XDOSPARAM+2),HL
	POP BC
	JP ENDLM
;
CTASK:
	db 84H
	dc 'TASK'
	dw CXDOSCALL
	dw EXECF
	dw ENDF
;
CINDECIMAL:
	db 88H
	dc '?DECIMAL'
	dw CTASK
INDECIMAL:
	dw EXECF
	dw BASE,PEEK16,LIT,0AH,SUBTRACT
	dw BRANCH0,1EH,CR,PRINT
	db 11H,'Use decimal base '
	dw DECIMAL,POKESP,QUIT
	dw ENDF
;
CLIST2:
	db 84H
	dc 'LIST'
	dw CINDECIMAL
LIST2:
	dw EXECF
	dw INDECIMAL,LISTSCR
	dw ENDF
;
CLOAD2:
	db 84H
	dc 'LOAD'
	dw CLIST2
	dw EXECF
	dw INDECIMAL,LOAD
	dw ENDF
;
CRESETDISC:
	db 89H
	dc 'RESETDISC'
	dw CLOAD2
RESETDISC:
	dw CONST
	dw 000DH
;
CSELECTDISC:
	db 8AH
	dc 'SELECTDISC'
	dw CRESETDISC
SELECTDISC:
	dw CONST
	dw 000EH
;
COPENFILE:
	db 88H
	dc 'OPENFILE'
	dw CSELECTDISC
OPENFILE:
	dw CONST
	dw 000FH
;
CCLOSEFILE:
	db 89H
	dc 'CLOSEFILE'
	dw COPENFILE
CLOSEFILE:
	dw CONST
	dw 0010H
;
CSEARCHFIRST:
	db 8BH
	dc 'SEARCHFIRST'
	dw CCLOSEFILE
SEARCHFIRST:
	dw CONST
	dw 0011H
;
CSEARCHNEXT:
	db 8AH
	dc 'SEARCHNEXT'
	dw CSEARCHFIRST
SEARCHNEXT:
	dw CONST
	dw 0012H
;
CDELETEFILE:
	db 8AH
	dc 'DELETEFILE'
	dw CSEARCHNEXT
DELETEFILE:
	dw CONST
	dw 0013H
;
CREADSEQ:
	db 87H
	dc 'READSEQ'
	dw CDELETEFILE
READSEQ:
	dw CONST
	dw 0014H
;
CWRITESEQ:
	db 88H
	dc 'WRITESEQ'
	dw CREADSEQ
WRITESEQ:
	dw CONST
	dw 0015H
;
CMAKEFILE:
	db 88H
	dc 'MAKEFILE'
	dw CWRITESEQ
MAKEFILE:
	dw CONST
	dw 0016H
;
CRENAMEFILE:
	db 8AH
	dc 'RENAMEFILE'
	dw CMAKEFILE
RENAMEFILE:
	dw CONST
	dw 0017H
;
CLOGIN:
	db 85H
	dc 'LOGIN'
	dw CRENAMEFILE
	dw CONST
	dw 0018H
;
CCURRENTDISC:
	db 8BH
	dc 'CURRENTDISC'
	dw CLOGIN
CURRENTDISC:
	dw CONST
	dw 0019H
;
CSETDMA:
	db 86H
	dc 'SETDMA'
	dw CCURRENTDISC
	dw CONST
	dw 001AH
;
CREADRAN:
	db 87H
	dc 'READRAN'
	dw CSETDMA
READRAN:
	dw CONST
	dw 0021H
;
CWRITERAN:
	db 88H
	dc 'WRITERAN'
	dw CREADRAN
WRITERAN:
	dw CONST
	dw 0022H
;
CFILESIZE:
	db 88H
	dc 'FILESIZE'
	dw CWRITERAN
FILESIZE:
	dw CONST
	dw 0023H
;
CFCB:
	db 83H
	dc 'FCB'
	dw CFILESIZE
FCB:
	dw VAR
	dw 005CH
;
CDRIVECODE:
	db 89H
	dc 'DRIVECODE'
	dw CFCB
DRIVECODE:
	dw EXECF
	dw FCB,PEEK16,ZERO,PLUS
	dw ENDF
;
CFILENAME:
	db 88H
	dc 'FILENAME'
	dw CDRIVECODE
FILENAME:
	dw EXECF
	dw FCB,PEEK16,ONE,PLUS
	dw ENDF
;
CFILETYPE:
	db 88H
	dc 'FILETYPE'
	dw CFILENAME
FILETYPE:
	dw EXECF
	dw FCB,PEEK16,LIT,9,PLUS
	dw ENDF
;
CEXTENT:
	db 86H
	dc 'EXTENT'
	dw CFILETYPE
EXTENT:
	dw EXECF
	dw FCB,PEEK16,LIT,0CH,PLUS
	dw ENDF
;
CS1:
	db 82H
	dc 'S1'
	dw CEXTENT
	dw EXECF
	dw FCB,PEEK16,LIT,0DH,PLUS
	dw ENDF
;
CS2:
	db 82H
	dc 'S2'
	dw CS1
S2:
	dw EXECF
	dw FCB,PEEK16,LIT,0EH,PLUS
	dw ENDF
;
CRECORDCOUNT:
	db 8BH
	dc 'RECORDCOUNT'
	dw CS2
	dw EXECF
	dw FCB,PEEK16,LIT,0FH,PLUS
	dw ENDF
;
CCURRENTREC:
	db 8AH
	dc 'CURRENTREC'
	dw CRECORDCOUNT
CURRENTREC:
	dw EXECF
	dw FCB,PEEK16,LIT,20H,PLUS
	dw ENDF
;
CRANREC:
	db 86H
	dc 'RANREC'
	dw CCURRENTREC
RANREC:
	dw EXECF
	dw FCB,PEEK16,LIT,21H,PLUS
	dw ENDF
;
CRANOVF:
	db 86H
	dc 'RANOVF'
	dw CRANREC
RANOVF:
	dw EXECF
	dw FCB,PEEK16,LIT,23H,PLUS
	dw ENDF
;
CLOGA:
	db 84H
	dc 'LOGA'
	dw CRANOVF
LOGA:
	dw EXECF
	dw RESETDISC,XDOSFUNC,POKE16,XDOSCALL
	dw ENDF
;
CLOGB:
	db 84H
	dc 'LOGB'
	dw CLOGA
	dw EXECF
	dw LOGA,ONE,XDOSPARAM,POKE16,SELECTDISC
	dw XDOSFUNC,POKE16,XDOSCALL
	dw ENDF
;
CTEXT:
	db 84H
	dc 'TEXT'
	dw CLOGB
TEXT:
	dw EXECF
	dw HERE,CL,PLUS1,BLANKS,WORD
	dw HERE,PAD,CL,PLUS1,CMOVE
	dw ENDF
;
CSETFCB:
	db 86H
	dc 'SETFCB'
	dw CTEXT
SETFCB:
	dw EXECF
	dw ZERO,DRIVECODE,POKE8,FILENAME
	dw LIT,0BH,BLANKS,BL,TEXT,PAD
	dw PLUS1,PEEK8,BRANCH0,0E2H,PAD
	dw PLUS1,PUSHRP,PEEKR,PLUS1,PEEK8
	dw LIT,3AH,EQUAL,BRANCH0,1EH
	dw PEEKR,PEEK8,LIT,40H,SUBTRACT
	dw ONE,MAX,TWO,MIN,DRIVECODE
	dw POKE8,POPRP,PLUS2,PUSHRP,PEEKR
	dw DUP,PEEK8,DUP,BL,EQUAL
	dw SWAP,LIT,2EH,EQUAL,OR
	dw EQUAL0,BRANCH0,8,PLUS1,BRANCH,0FFE2H
	dw POPRP,OVER,PUSHRP,SWAP
	dw OVER,SUBTRACT,FILENAME,SWAP
	dw LIT,8,MIN,CMOVE,POPRP,PLUS1
	dw PUSHRP,PEEKR,DUP,PEEK8,DUP
	dw BL,EQUAL,SWAP,LIT,2EH
	dw EQUAL,OR,EQUAL0,BRANCH0,8
	dw PLUS1,BRANCH,0FFE2H,POPRP,OVER
	dw PUSHRP,SWAP,OVER,SUBTRACT,FILETYPE
	dw SWAP,THREE,MIN,CMOVE,FILENAME
	dw PEEK8,LIT,2AH,EQUAL,BRANCH0,0EH
	dw FILENAME,LIT,8,LIT,3FH,FILL,FILETYPE
	dw PEEK8,LIT,2AH,EQUAL,BRANCH0,0CH
	dw FILETYPE,THREE,LIT,3FH,FILL,POPRP
	dw DROP
	dw ENDF
;
COPENF:
	db 85H
	dc 'OPENF'
	dw CSETFCB
OPENF:
	dw EXECF
	dw ZERO,CURRENTREC,POKE8,ZERO,EXTENT
	dw POKE8,ZERO,S2,POKE8,FCB
	dw PEEK16,XDOSPARAM,POKE16,OPENFILE,XDOSFUNC
	dw POKE16,XDOSCALL
	dw ENDF
;
CCLOSEF:
	db 86H
	dc 'CLOSEF'
	dw COPENF
CLOSEF:
	dw EXECF
	dw FCB,PEEK16,XDOSPARAM,POKE16,CLOSEFILE
	dw XDOSFUNC,POKE16,XDOSCALL
	dw ENDF
;
CMAKEF:
	db 85H
	dc 'MAKEF'
	dw CCLOSEF
MAKEF:
	dw EXECF
	dw ZERO,CURRENTREC,POKE8,ZERO,EXTENT
	dw POKE8,ZERO,S2,POKE8,FCB
	dw PEEK16,XDOSPARAM,POKE16,MAKEFILE,XDOSFUNC
	dw POKE16,XDOSCALL
	dw ENDF
;
CDELETEF:
	db 87H
	dc 'DELETEF'
	dw CMAKEF
DELETEF:
	dw EXECF
	dw FCB,PEEK16,XDOSPARAM,POKE16,DELETEFILE
	dw XDOSFUNC,POKE16,XDOSCALL
	dw ENDF
;
CSENDDMA:
	db 87H
	dc 'SENDDMA'
	dw CDELETEF
SENDDMA:
	dw EXECF
	dw XDOSPARAM,POKE16,LIT,1AH,XDOSFUNC
	dw POKE16,XDOSCALL
	dw ENDF
;
CVMFCB:
	db 85H
	dc 'VMFCB'
	dw CSENDDMA
VMFCB:
	dw VAR
	dw 1FD3H
;
CVMF1:
	db 84H
	dc 'VMF1'
	dw CVMFCB
VMF1:	dw VAR
	dw 00,00,00,00,00,00,00,00,00,00
	dw 00,00,00,00,00,00,00,00,00,00
;
CVMF2:
	db 84H
	dc 'VMF2'
	dw CVMF1
VMF2:	dw VAR
	dw 00,00,00,00,00,00,00,00,00,00
	dw 00,00,00,00,00,00,00,00,00,00
;
CVMF3:
	db 84H
	dc 'VMF3'
	dw CVMF2
VMF3:
	dw VAR
	dw 00,00,00,00,00,00,00,00,00,00
	dw 00,00,00,00,00,00,00,00,00,00
;
CSIZE:
	db 84H
	dc 'SIZE'
	dw CVMF3
SIZE:
	dw EXECF
	dw VMFCB,PEEK16,FCB,POKE16,FCB
	dw PEEK16,LIT,24H,PLUS
	dw ENDF
;
COPENFLAG:
	db 88H
	dc 'OPENFLAG'
	dw CSIZE
OPENFLAG:
	dw EXECF
	dw VMFCB,PEEK16,FCB,POKE16,FCB
	dw PEEK16,LIT,26H,PLUS
	dw ENDF
;
CRECORDREAD:
	db 8BH
	dc 'RECORD-READ'
	dw COPENFLAG
RECORDREAD:
	dw EXECF
	dw RANREC,POKE16,ZERO,RANOVF,POKE8
	dw FCB,PEEK16,XDOSPARAM,POKE16,READRAN
	dw XDOSFUNC,POKE16,XDOSCALL,XDOSPARAM,PEEK8
	dw DISKERROR,POKE16
	dw ENDF
;
CRECORDWRITE:
	db 8CH
	dc 'RECORD-WRITE'
	dw CRECORDREAD
RECORDWRITE:
	dw EXECF
	dw RANREC,POKE16,ZERO,RANOVF,POKE8
	dw FCB,PEEK16,XDOSPARAM,POKE16,WRITERAN
	dw XDOSFUNC,POKE16,XDOSCALL,XDOSPARAM,PEEK8
	dw DISKERROR,POKE16
	dw ENDF
;
CDOOPEN:
	db 86H
	dc '(OPEN)'
	dw CRECORDWRITE
DOOPEN:
	dw EXECF
	dw VMFCB,PEEK16,FCB,POKE16,CR
	dw PRINT
	db 1FH,'Name of file for block storage '
	dw QUERY,SETFCB,FILENAME,PEEK8,BL
	dw EQUAL,BRANCH0,6,POKESP,QUIT
	dw VMF1,PLUS1,LIT,0BH,VMF2
	dw PLUS1,LIT,0BH,MATCH,DROP
	dw BRANCH0,1EH,CR,PRINT
	db 13H,'Duplicate filename '
	dw POKESP,QUIT,OPENF,XDOSPARAM,PEEK8
	dw LIT,0FFH,EQUAL,BRANCH0,55H
	dw CR,PRINT
	db 09H,'New file '
	dw MAKEF,XDOSPARAM,PEEK8,LIT,0FFH
	dw EQUAL,BRANCH0,27H,CR,PRINT
	db 18H,'No more directory space '
	dw POKESP,QUIT,BRANCH,0EH,ZERO
	dw SIZE,POKE16,ONE,OPENFLAG,POKE16
	dw BRANCH,40H,FILESIZE,XDOSFUNC,POKE16
	dw FCB,PEEK16,XDOSPARAM,POKE16,XDOSCALL
	dw RANREC,PEEK16,SECBLK,DIVIDE,SIZE
	dw POKE16,ONE,OPENFLAG,POKE16,BASE
	dw PEEK16,DECIMAL,CR,SIZE,PEEK16
	dw IMPNUM,PRINT
	db 07H,'Blocks '
	dw BASE,POKE16
	dw ENDF
;
COPEN:
	db 84H
	dc 'OPEN'
	dw CDOOPEN
	dw EXECF
	dw VMF1,VMFCB,POKE16,VMFCB,PEEK16
	dw FCB,POKE16,OPENFLAG,PEEK16,EQUAL0
	dw BRANCH0,8,DOOPEN,BRANCH,22H
	dw PRINT
	db 0DH,'Current file '
	dw FILENAME,LIT,8,TYPE,SPACE
	dw FILETYPE,THREE,TYPE
	dw ENDF
;
CDOCLOSE:
	db 87H
	dc '(CLOSE)'
	dw COPEN
DOCLOSE:
	dw EXECF
	dw VMFCB,PEEK16,FCB,POKE16,OPENFLAG
	dw PEEK16,BRANCH0,32H,CLOSEF,XDOSPARAM
	dw PEEK8,LIT,0FFH,EQUAL,BRANCH0,18H,PRINT
	db 0FH,'File not found '
	dw BRANCH,0CH,FCB,PEEK16
	dw LIT,28H,ERASE
	dw ENDF
;
CCLOSE:
	db 85H
	dc 'CLOSE'
	dw CDOCLOSE
	dw EXECF
	dw VMF1,VMFCB,POKE16,DOCLOSE,VMF2
	dw VMFCB,POKE16,DOCLOSE,VMF1,VMFCB
	dw POKE16,EMPTYBUFFERS
	dw ENDF
;
CALLOCATE:
	db 88H
	dc 'ALLOCATE'
	dw CCLOSE
ALLOCATE:
	dw EXECF
	dw LIT,80H,LIT,80H,BLANKS
	dw LIT,80H,SENDDMA,SWAP,SECBLK
	dw MULTIPLIC,SWAP,ONE,SUBTRACT,SECBLK
	dw MULTIPLIC,DODO,PEEKI,RECORDWRITE,DOLOOP
	dw 0FFFAH,CLOSEF,XDOSPARAM,PEEK8
	dw LIT,0FFH,EQUAL,PUSHRP,OPENF,XDOSPARAM
	dw PEEK8,LIT,0FFH,EQUAL,POPRP
	dw OR,BRANCH0,21H,CR,PRINT
	db 1AH,'Cannot increase file size '
	dw ENDF
;
CSIZECHECK:
	db 89H
	dc 'SIZECHECK'
	dw CALLOCATE
SIZECHECK:
	dw EXECF
	dw DUP,SIZE,PEEK16,GREATER,BRANCH0,14H,DUP,SIZE,PEEK16,PLUS1
	dw ALLOCATE,SIZE,POKE16,BRANCH,4
	dw DROP
	dw ENDF
;
CFRW:
	db 84H
	dc 'FR/W'
	dw CSIZECHECK
FRW:
	dw EXECF
	dw VMFCB,PEEK16,FCB,POKE16,OPENFLAG
	dw PEEK16,BRANCH0,56H,USE,PEEK16
	dw PUSHRP,SWAP,DUP,SIZECHECK,ONE
	dw SUBTRACT,SECBLK,MULTIPLIC,ROT,USE
	dw POKE16,SECBLK,ZERO,DODO,USE
	dw PEEK16,SENDDMA,OVER,BRANCH0,0AH
	dw DUP,RECORDREAD,BRANCH,6,DUP
	dw RECORDWRITE,PLUS1,LIT,80H,USE
	dw ADDMEM,DOLOOP,0FFDCH,DROP,DROP
	dw POPRP,USE,POKE16,BRANCH,1EH
	dw CR,PRINT
	db 13H,'No block file open '
	dw POKESP,QUIT
	dw ENDF
;
CDRW:
	db 84H
	dc 'DR/W'
	dw CFRW
	dw EXECF
	dw RW
	dw ENDF
;
CRWF:
	db 83H
	dc 'R/W'
	dw CDRW
RWF:
	dw EXECF
	dw FRW
	dw ENDF
;
CCASE:
	db 0C4H
	dc 'CASE'
	dw CRWF
	dw EXECF
	dw LIT,5
	dw ENDF
;
COF:
	db 0C2H
	dc 'OF'
	dw CCASE
	dw EXECF
	dw COMPILE,BRANCH0,HERE,ZERO,POKED16
	dw LIT,6
	dw ENDF
;
CBREAK:
	db 0C5H
	dc 'BREAK'
	dw COF
	dw EXECF
	dw LIT,6,INPAIRS,COMPILE,BRANCH,HERE,ZERO,POKED16,SWAP,TWO
	dw ENDIF_,LIT,6
	dw ENDF
;
CENDCASE:
	db 0C7H
	dc 'ENDCASE'
	dw CBREAK
	dw EXECF
	dw INCOMP,DUP,LIT,6,EQUAL
	dw BRANCH0,0CH,DROP,TWO,ENDIF_
	dw BRANCH,0FFECH,LIT,5,INPAIRS
	dw ENDF
;
CSBUFFER:
	db 87H
	dc 'SBUFFER'
	dw CENDCASE
SBUFFER:
	dw EXECF
	dw USE,PEEK16,DUP,PUSHRP,ADDBUF
	dw BRANCH0,0FFFCH,USE,POKE16,PEEKR
	dw PEEK16,LESS0,BRANCH0,14H,PEEKR
	dw PLUS2,PEEKR,PEEK16,LIT,7FFFH
	dw AND,ZERO,RWF,PEEKR,PEEK16
	dw LIT,7FFFH,AND,PEEKR,POKE16
	dw PEEKR,PREV,POKE16,POPRP,DROP
	dw ENDF
;
CSFLUSH:
	db 86H
	dc 'SFLUSH'
	dw CSBUFFER
	dw EXECF
	dw NUMBUFF,PLUS1,ZERO,DODO,SBUFFER
	dw DOLOOP,0FFFCH
	dw ENDF
;
CLINE2:
	db 84H
	dc 'LINE'
	dw CSFLUSH
LINE2:
	dw EXECF
	dw DUP,LIT,0FFF0H,AND
	dw LIT,17H,ISERROR,SCR,PEEK16,LINE1
	dw DROP
	dw ENDF
;
CEDITOR:
	db 0C6H
	dc 'EDITOR'
	dw CLINE2
EDITOR:
	dw ATIVATE
	dw VOCABULARY
	dw 0A081H
	dw L63BF
PVEDITOR:
	dw VEDITOR
;
CWHERE:
	db 85H
	dc 'WHERE'
	dw CEDITOR
	dw EXECF
	dw DUP,BSCR,DIVIDE,DUP,SCR
	dw POKE16,PRINT
	db 06H,'SCR # '
	dw DECIMAL,IMPNUM,SWAP,CL,DIVMOD
	dw CL,MULTIPLIC,ROT,BLOCK,PLUS
	dw CR,CL,TYPE,CR,HERE
	dw PEEK8,SUBTRACT,SPACES,LIT,5EH
	dw EMIT,EDITOR,QUIT
	dw ENDF
;
CNUMLOCATE:
	db 87H
	dc '#LOCATE'
	dw OUTDIC
NUMLOCATE:
	dw EXECF
	dw RNUM,PEEK16,CL,DIVMOD
	dw ENDF
;
CNUMLEAD:
	db 85H
	dc '#LEAD'
	dw CNUMLOCATE
NUMLEAD:
	dw EXECF
	dw NUMLOCATE,LINE2,SWAP
	dw ENDF
;
CNUMLAG:
	db 84H
	dc '#LAG'
	dw CNUMLEAD
NUMLAG:
	dw EXECF
	dw NUMLEAD,DUP,PUSHRP,PLUS,CL
	dw POPRP,SUBTRACT
	dw ENDF
;
CMMOVE:
	db 85H
	dc '-MOVE'
	dw CNUMLAG
MMOVE:
	dw EXECF
	dw LINE2,CL,CMOVE,UPDATE
	dw ENDF
;
CH:
	db 81H
	dc 'H'
	dw CMMOVE
HH:
	dw EXECF
	dw LINE2,PAD,PLUS1,CL,DUP
	dw PAD,POKE8,CMOVE
	dw ENDF
;
CE:
	db 81H
	dc 'E'
	dw CH
EE:
	dw EXECF
	dw LINE2,CL,BLANKS,UPDATE
	dw ENDF
;
CS:
	db 81H
	dc 'S'
	dw CE
SS:
	dw EXECF
	dw DUP,ONE,SUBTRACT,LIT,0EH
	dw DODO,PEEKI,LINE2,PEEKI,PLUS1
	dw MMOVE,LIT,-1,DOSTEP,0FFF0H
	dw EE
	dw ENDF
;
CD:
	db 81H
	dc 'D'
	dw CS
DD:
	dw EXECF
	dw DUP,HH,LIT,0FH,DUP
	dw ROT,DODO,PEEKI,PLUS1
	dw LIT,0FH,MIN,LINE2,PEEKI,MMOVE
	dw DOLOOP,0FFEEH,EE
	dw ENDF
;
CM:
	db 81H
	dc 'M'
	dw CD
MM:
	dw EXECF
	dw RNUM,ADDMEM,CR,SPACE,NUMLEAD
	dw TYPE,LIT,5EH,EMIT,NUMLAG
	dw TYPE,NUMLOCATE,IMPNUM,DROP
	dw ENDF
;
CT:
	db 81H
	dc 'T'
	dw CM
	dw EXECF
	dw DUP,CL,MULTIPLIC,RNUM,POKE16
	dw HH,ZERO,MM
	dw ENDF
;
L26A6:
	db 81H
	dc 'L'
	dw CT
	dw EXECF
	dw SCR,PEEK16,LIST2,ZERO,MM
	dw ENDF
;
L26B8:
	db 81H
	dc 'R'
	dw L26A6
_RR1:
	dw EXECF
	dw PAD,PLUS1,SWAP,MMOVE
	dw ENDF
;
L26C8:
	db 81H
	dc 'P'
	dw L26B8
	dw EXECF
	dw ONE,TEXT,PAD,PLUS1,PEEK8
	dw BRANCH0,4,_RR1
	dw ENDF
;
L26E0:
	db 81H
	dc 'I'
	dw L26C8
	dw EXECF
	dw DUP,SS,_RR1
	dw ENDF
;
L26EE:
	db 83H
	dc 'TOP'
	dw L26E0
TOP:
	dw EXECF
	dw ZERO,RNUM,POKE16
	dw ENDF
;
L26FE:
	db 85H
	dc 'CLEAR'
	dw L26EE
CLEAR:
	dw EXECF
	dw SCR,POKE16,LIT,10H,ZERO
	dw DODO,PEEKI,EE,DOLOOP,0FFFAH
	dw ENDF
;
L271E:
	db 84H
	dc 'COPY'
	dw L26FE
	dw EXECF
	dw BSCR,MULTIPLIC,OFFSET,PEEK16,PLUS
	dw SWAP,BSCR,MULTIPLIC,BSCR,OVER
	dw PLUS,SWAP,DODO,DUP,PEEKI
	dw BLOCK,TWO,SUBTRACT,POKE16,PLUS1
	dw UPDATE,DOLOOP,0FFEEH,DROP,FLUSH
	dw ENDF
;
L275B:
	db 85H
	dc '1LINE'
	dw L271E
ONELINE:
	dw EXECF
	dw NUMLAG,PAD,COUNT,MATCH,RNUM
	dw ADDMEM
	dw ENDF
;
L2773:
	db 84H
	dc 'FIND'
	dw L275B
FIND2:
	dw EXECF
	dw LIT,3FFH,RNUM,PEEK16,LESSER
	dw BRANCH0,12H,TOP,PAD,HERE
	dw CL,PLUS1,CMOVE,ZERO,ERROR
	dw ONELINE,BRANCH0,0FFDEH
	dw ENDF
;
L27A2:
	db 86H
	dc 'DELETE'
	dw L2773
DELETE:
	dw EXECF
	dw PUSHRP,NUMLAG,PLUS,PEEKR,SUBTRACT
	dw NUMLAG,PEEKR,MINUS,RNUM,ADDMEM
	dw NUMLEAD,PLUS,SWAP,CMOVE,POPRP
	dw BLANKS,UPDATE
	dw ENDF
;
L27D1:
	db 81H
	dc 'N'
	dw L27A2
_NN:
	dw EXECF
	dw FIND2,ZERO,MM
	dw ENDF
;
L27DF:
	db 81H
	dc 'F'
	dw L27D1
	dw EXECF
	dw ONE,TEXT,_NN
	dw ENDF
;
L27ED:
	db 81H
	dc 'B'
	dw L27DF
	dw EXECF
	dw PAD,PEEK8,MINUS,MM
	dw ENDF
;
L27FD:
	db 81H
	dc 'X'
	dw L27ED
	dw EXECF
	dw ONE,TEXT,FIND2,PAD,PEEK8
	dw DELETE,ZERO,MM
	dw ENDF
;
L2815:
	db 84H
	dc 'TILL'
	dw L27FD
	dw EXECF
	dw NUMLEAD,PLUS,ONE,TEXT,ONELINE
	dw EQUAL0,ZERO,ISERROR,NUMLEAD,PLUS
	dw SWAP,SUBTRACT,DELETE,ZERO,MM
	dw ENDF
;
L283E:
	db 81H
	dc 'C'
	dw L2815
	dw EXECF
	dw ONE,TEXT,PAD,PLUS1,PEEK8
	dw BRANCH0,34H,PAD,COUNT,NUMLAG
	dw ROT,OVER,MIN,PUSHRP,PEEKR
	dw RNUM,ADDMEM,PEEKR,SUBTRACT,PUSHRP
	dw DUP,HERE,PEEKR,CMOVE,HERE
	dw NUMLEAD,PLUS,POPRP,CMOVE,POPRP
	dw CMOVE,UPDATE,ZERO,MM
	dw ENDF
;
L288A:
	db 85H
	dc 'KLEFT'
	dw L283E
KLEFT:
	dw VAR
	dw 001DH
;
L2896:
	db 86H
	dc 'KRIGHT'
	dw L288A
KRIGHT:
	dw VAR
	dw 001CH
;
L28A3:
	db 83H
	dc 'KUP'
	dw L2896
KUP:
	dw VAR
	dw 001EH
;
L28AD:
	db 85H
	dc 'KDOWN'
	dw L28A3
KDOWN:
	dw VAR
	dw 001FH
;
L28B9:
	db 84H
	dc 'KTAB'
	dw L28AD
KTAB:
	dw VAR
	dw 0009H
;
L28C4:
	db 85H
	dc 'KQUIT'
	dw L28B9
KQUIT:
	dw VAR
	dw 0011H
;
L28D0:
	db 83H
	dc 'KBS'
	dw L28C4
KBS:
	dw VAR
	dw 0008H
;
L28DA:
	db 84H
	dc 'KCLS'
	dw L28D0
KCLS:
	dw VAR
	dw 000BH
;
L28E5:
	db 84H
	dc 'KINS'
	dw L28DA
KINS:
	dw VAR
	dw 0012H
;
L28F0:
	db 84H
	dc 'KDEL'
	dw L28E5
KDEL:
	dw VAR
	dw 007FH
;
L28FB:
	db 85H
	dc 'KINSL'
	dw L28F0
KINSL:
	dw VAR
	dw 0017H
;
L2907:
	db 85H
	dc 'KDELL'
	dw L28FB
KDELL:
	dw VAR
	dw 0013H
;
L2913:
	db 85H
	dc 'KNSCR'
	dw L2907
KNSCR:
	dw VAR
	dw 000EH
;
L291F:
	db 85H
	dc 'KLSCR'
	dw L2913
KLSCR:
	dw VAR
	dw 000CH
;
L292B:
	db 88H
	dc 'TABVALUE'
	dw L291F
TABVALUE:
	dw VAR
	dw 0008H
;
L293A:
	db 89H
	dc '2VARIABLE'
	dw L292B
	dw EXECF
	dw VARIABLE,POKED16
	dw ENDF
;
L294E:
	db 85H
	dc 'SLEFT'
	dw L293A
	dw VAR
	dw 001BH,0044H
;
L295C:
	db 84H
	dc 'SCLS'
	dw L294E
SCLS:
	dw VAR
	dw 001BH,0045H
;
L2969:
	db 84H
	dc 'SINS'
	dw L295C
SINS:
	dw VAR
	dw 0000H,0000H
;
L2976:
	db 84H
	dc 'SDEL'
	dw L2969
SDEL:
	dw VAR
	dw 0000H,0000H
;
L2983:
	db 83H
	dc 'STC'
	dw L2976
STC1:
	dw EXECF
	dw DUP,SCRHALF,PEEK16,BRANCH0,0CH
	dw LIT,5,LESSER,BRANCH,8
	dw LIT,0AH,GREATER,BRANCH0,0CH
	dw SCRHALF,ONE,TOGGLE,HOME,SHOW1
	dw SCRHALF,PEEK16,BRANCH0,8
	dw LIT,5,SUBTRACT,STC2
	dw ENDF
;
	dw 2020H
;
L29C7:
	db 83H
	dc 'CLS'
	dw L2983
CLS:
	dw EXECF
	dw SCLS,PEEK32,EMIT,EMIT
	dw ENDF
;
L29D9:
	db 84H
	dc 'HOME'
	dw L29C7
HOME:
	dw EXECF
	dw LIT,0EH,EMIT,ENDF,NOOP
	dw NOOP
;
L29EE:
	db 84H
	dc 'SHOW'
	dw L29D9
SHOW1:
	dw EXECF
	dw SHOWSCR
	dw ENDF
;
L29FB:
	db 87H
	dc 'SCRHALF'
	dw L29EE
SCRHALF:
	dw VAR
	dw 0000H
;
L2A09:
	db 82H
	dc 'IH'
	dw L29FB
IH:
	dw EXECF
	dw ZERO,SCRHALF,POKE16,HOME
	dw ENDF
;
	dw 0000H,0000H,0000H,0000H
	dw 0000H,0000H,0000H,0000H
;
L2A2A:
	db 84H
	dc 'INIT'
	dw L2A09
INIT:
	dw EXECF
	dw ZERO,RNUM,POKE16,CLS,IH
	dw SHOW1,VMFCB,PEEK16,FCB,POKE16
	dw LIT,0EH,LIT,-1,STC1
	dw NOOP,NOOP,NOOP,NOOP,NOOP
	dw NOOP,NOOP,NOOP,FILENAME
	dw LIT,8,TYPE,SPACE,FILETYPE,THREE
	dw TYPE,SPACE,SIZE,PEEK16,IMPNUM
	dw PRINT
	db 07H,'Blocks '
	dw ENDF
;
L2A85:
	db 85H
	dc 'INCR#'
	dw L2A2A
INCRNUM:
	dw EXECF
	dw RNUM,PEEK16,PLUS,LIT,3FFH
	dw MIN,ZERO,MAX,RNUM,POKE16
	dw ENDF
;
L2AA5:
	db 84H
	dc 'CHAR'
	dw L2A85
CHAR:
	dw EXECF
	dw DUP,NUMLAG,DROP,POKE8,ONE
	dw INCRNUM,UPDATE
	dw ENDF
;
L2ABE:
	db 84H
	dc 'ECHO'
	dw L2AA5
ECHO:
	dw EXECF
	dw DUP,EMIT
	dw ENDF
;
L2ACD:
	db 85H
	dc 'CHDEL'
	dw L2ABE
CHDEL:
	dw EXECF
	dw NUMLAG,DUP,ONE,SUBTRACT,BRANCH0,12H,PUSHRP,DUP,PLUS1,SWAP
	dw POPRP,CMOVE,BRANCH,6,DROP
	dw DROP,BL,NUMLEAD,DROP,CL
	dw PLUS,ONE,SUBTRACT,POKE8,SDEL
	dw PEEK32,DUP2,OR,BRANCH0,0AH
	dw EMIT,EMIT,BRANCH,0AH,DROP
	dw DROP,NUMLAG,TYPE2,UPDATE
	dw ENDF
;
L2B27:
	db 85H
	dc 'CHINS'
	dw L2ACD
CHINS:
	dw EXECF
	dw NUMLEAD,DROP,CL,ONE,SUBTRACT
	dw PLUS,PEEK8,BL,EQUAL,BRANCH0,50H,NUMLAG,DUP,ONE,SUBTRACT
	dw BRANCH0,1CH,HERE,SWAP,CMOVE
	dw HERE,NUMLAG,PUSHRP,PLUS1,POPRP
	dw ONE,SUBTRACT,CMOVE,BRANCH,6
	dw DROP,DROP,BL,NUMLAG,DROP
	dw POKE8,SINS,PEEK32,DUP2,OR
	dw BRANCH0,0AH,EMIT,EMIT,BRANCH,0AH,DROP,DROP,NUMLAG,TYPE2
	dw UPDATE
	dw ENDF
;
L2B99:
	db 83H
	dc 'TAB'
	dw L2B27
TAB:
	dw EXECF
	dw RNUM,PEEK16,LIT,40H,MOD
	dw TABVALUE,PEEK16,PUSHRP,PEEKR,MOD
	dw PEEKR,SWAP,SUBTRACT,INCRNUM,RNUM
	dw PEEK16,LIT,40H,MOD,POPRP
	dw LESSER,BRANCH0,10H,RNUM,PEEK16
	dw LIT,3C0H,AND,RNUM,POKE16
	dw ENDF
;
L2BDF:
	db 87H
	dc 'NEXTSCR'
	dw L2B99
NEXTSCR:
	dw EXECF
	dw SCR,PEEK16,PLUS1,SCR,POKE16
	dw INIT
	dw ENDF
;
L2BF9:
	db 87H
	dc 'LASTSCR'
	dw L2BDF
LASTSCR:
	dw EXECF
	dw SCR,PEEK16,ONE,SUBTRACT,ONE
	dw MAX,SCR,POKE16,INIT
	dw ENDF
;
L2C19:
	db 82H
	dc 'BS'
	dw L2BF9
BS:
	dw EXECF
	dw LIT,-1,INCRNUM,NUMLOCATE,STC1
	dw BL,CHAR,EMIT,LIT,-1
	dw INCRNUM
	dw ENDF
;
L2C38:
	db 87H
	dc 'CONTROL'
	dw L2C19
CONTROL:
	dw EXECF
	dw PUSHRP,PEEKR,LIT,0DH,EQUAL
	dw BRANCH0,18H,RNUM,PEEK16,CL
	dw PLUS,LIT,3C0H,AND,RNUM
	dw POKE16,BRANCH,110H,PEEKR,KUP
	dw PEEK16,EQUAL,BRANCH0,0CH
	dw LIT,0FFE0H,INCRNUM,BRANCH,0FAH,PEEKR
	dw KDOWN,PEEK16,EQUAL,BRANCH0,0CH
	dw LIT,20H,INCRNUM,BRANCH,0E4H
	dw PEEKR,KRIGHT,PEEK16,EQUAL,BRANCH0,0AH,ONE,INCRNUM,BRANCH,0D0H
	dw PEEKR,KLEFT,PEEK16,EQUAL,BRANCH0,0CH,LIT,-1,INCRNUM,BRANCH,0BAH,PEEKR,KTAB,PEEK16,EQUAL
	dw BRANCH0,8,TAB,BRANCH,0A8H
	dw PEEKR,KNSCR,PEEK16,EQUAL,BRANCH0,8,NEXTSCR,BRANCH,96H,PEEKR
	dw KLSCR,PEEK16,EQUAL,BRANCH0,8
	dw LASTSCR,BRANCH,84H,PEEKR,KDELL
	dw PEEK16,EQUAL,BRANCH0,10H,NUMLOCATE
	dw DD,DROP,HOME,SHOW1,BRANCH,6AH,PEEKR,KINSL,PEEK16,EQUAL
	dw BRANCH0,10H,NUMLOCATE,SS,DROP
	dw HOME,SHOW1,BRANCH,50H,PEEKR
	dw KCLS,PEEK16,EQUAL,BRANCH0,0EH
	dw SCR,PEEK16,CLEAR,INIT,BRANCH,38H,PEEKR,KBS,PEEK16,EQUAL
	dw BRANCH0,8,BS,BRANCH,26H
	dw PEEKR,KDEL,PEEK16,EQUAL,BRANCH0,8,CHDEL,BRANCH,14H,PEEKR
	dw KINS,PEEK16,EQUAL,BRANCH0,8
	dw CHINS,BRANCH,2,POPRP
	dw ENDF
;
L2D7A:
	db 84H
	dc 'EDIT'
	dw L2C38
EDIT1:
	dw EXECF
	dw INDECIMAL,SCR,POKE16,VMF1,DUP
	dw VMFCB,POKE16,FCB,POKE16,OPENFLAG
	dw PEEK16,EQUAL0,BRANCH0,10H,DOOPEN
	dw LIT,5000H,ZERO,DODO,DOLOOP
	dw 0FFFEH,INIT,NUMLOCATE,STC1,KEY
	dw DUP,LIT,1BH,EQUAL,BRANCH0,0CH,DROP,KEY,CONTROL,BRANCH,22H,DUP,LIT,1FH,GREATER
	dw OVER,LIT,7FH,LESSER,AND
	dw BRANCH0,0AH,CHAR,ECHO,BRANCH,4,CONTROL,KQUIT,PEEK16,EQUAL
	dw BRANCH0,0FFBCH,NOOP,NOOP,NOOP
	dw CLS,PRINT
	db 05H,'QUIT '
	dw QUIT
	dw ENDF
;
L2E09:
	db 84H
	dc 'EDIT'
	dw CWHERE
	dw EXECF
	dw EDITOR,EDIT1
	dw ENDF
;
L2E18:
	db 85H
	dc 'FCOPY'
	dw L2E09
	dw EXECF
	dw VMF1,VMFCB,POKE16,VMFCB,PEEK16
	dw FCB,POKE16,OPENFLAG,PEEK16,EQUAL0
	dw BRANCH0,1CH,PRINT
	db 13H,'No block file open '
	dw POKESP,QUIT,VMF2,DUP,VMFCB
	dw POKE16,FCB,POKE16,OPENFLAG,PEEK16
	dw EQUAL0,BRANCH0,20H,PRINT
	db 19H,'Specify destination file '
	dw DOOPEN,VMF1,VMFCB,POKE16,SWAP
	dw BLOCK,TWO,SUBTRACT,POKE16,UPDATE
	dw VMF2,VMFCB,POKE16,FLUSH,VMF1
	dw VMFCB,POKE16
	dw ENDF
;
L2EAA:
	db 87H
	dc '(FILES)'
	dw L2E18
FILES_:
	dw EXECF
	dw EXTENT,LIT,4,ERASE,SEARCHNEXT
	dw XDOSFUNC,POKE16,PAD,XDOSPARAM,POKE16
	dw XDOSCALL,XDOSPARAM,PEEK8,DUP
	dw LIT,0FFH,SUBTRACT,BRANCH0,0046H
	dw LIT,20H,MULTIPLIC,PAD,PLUS,DUP
	dw ONE,PLUS,LIT,8,TYPE
	dw SPACE,LIT,9,PLUS,THREE
	dw TYPE,SPACE,LIT,5,SPACES
	dw CONOUT,PEEK16,LIT,30H,GREATER
	dw BRANCH0,0AH,CR,ZERO,CONOUT
	dw POKE16,BRANCH,0FFA0H,DROP
	dw ENDF
;
L2F24:
	db 85H
	dc 'FILES'
	dw L2EAA
	dw EXECF
	dw VMF3,FCB,POKE16,SETFCB,FILENAME
	dw PEEK8,BL,EQUAL,BRANCH0,0EH
	dw FILENAME,LIT,0BH,LIT,3FH
	dw FILL,PAD,SENDDMA,EXTENT
	dw LIT,4,ERASE,SEARCHFIRST,XDOSFUNC,POKE16
	dw FCB,PEEK16,XDOSPARAM,POKE16,XDOSCALL
	dw XDOSPARAM,PEEK8,DUP,LIT,0FFH
	dw EQUAL,BRANCH0,13H,DROP,PRINT
	db 08H,'No file '
	dw BRANCH,38H,LIT,20H,MULTIPLIC
	dw PAD,PLUS,CR,CR,ZERO
	dw CONOUT,POKE16,DUP,ONE,PLUS
	dw LIT,8,TYPE,SPACE
	dw LIT,9,PLUS,THREE,TYPE,SPACE
	dw LIT,5,SPACES,FILES_,QUIT
	dw ENDF
;
L2FC5:
	db 88H
	dc 'MATCHAFN'
	dw L2F24
MATCHAFN:
	dw EXECF
	dw PAD,LIT,0CH,CMOVE,PAD
	dw LIT,10H,PLUS,LIT,0CH
	dw CMOVE,PAD,PLUS1,DUP
	dw LIT,0CH,PLUS,SWAP,DODO,PEEKI
	dw PEEK8,LIT,3FH,EQUAL,PEEKI
	dw LIT,10H,PLUS,PEEK8,EQUAL0
	dw EQUAL0,AND,BRANCH0,10H
	dw LIT,3FH,PEEKI,LIT,10H,PLUS
	dw POKE8,DOLOOP,0FFD2H,PAD
	dw LIT,10H,PLUS,DUP,LIT,0CH
	dw PLUS,SWAP,DODO,PEEKI,PEEK8
	dw LIT,3FH,EQUAL,PEEKI
	dw LIT,10H,SUBTRACT,PEEK8,EQUAL0,EQUAL0
	dw AND,BRANCH0,10H,LIT,3FH
	dw PEEKI,LIT,10H,SUBTRACT,POKE8
	dw DOLOOP,0FFD2H,PAD,PLUS1
	dw LIT,0BH,PAD,LIT,11H,PLUS
	dw LIT,0BH,MATCH,DROP,EQUAL0
	dw BRANCH0,8,ZERO,BRANCH,0066H
	dw PAD,PEEK8,PAD,LIT,10H
	dw PLUS,PEEK8,DUP2,EQUAL,BRANCH0,0CH,DROP,DROP,ONE,BRANCH,0046H,DUP,EQUAL0,BRANCH0,18H
	dw DROP,CURRENTDISC,XDOSFUNC,POKE16,XDOSCALL
	dw XDOSPARAM,PEEK8,PLUS1,EQUAL,BRANCH,28H,OVER,EQUAL0,BRANCH0,1AH
	dw SWAP,DROP,CURRENTDISC,XDOSFUNC,POKE16
	dw XDOSCALL,XDOSPARAM,PEEK8,PLUS1,EQUAL
	dw BRANCH,8,DROP,DROP,ZERO
	dw ENDF
;
L30F6:
	db 84H
	dc 'KILL'
	dw L2FC5
	dw EXECF
	dw VMF3,FCB,POKE16,SETFCB,FILENAME
	dw PEEK8,BL,EQUAL,BRANCH0,6
	dw POKESP,QUIT,VMF3,VMF1,MATCHAFN
	dw VMF3,VMF2,MATCHAFN,OR,BRANCH0,2EH,PRINT
	db 21H,'Cannot erase current block files '
	dw POKESP,QUIT,BRANCH,24H,DELETEF
	dw XDOSPARAM,PEEK8,LIT,0FFH,EQUAL
	dw BRANCH0,14H,PRINT
	db 0FH,'File not found '
	dw ENDF
;
L3179:
	db 83H
	dc 'REN'
	dw L30F6
	dw EXECF
	dw VMF3,FCB,POKE16,SETFCB,FILENAME
	dw PEEK8,BL,EQUAL,BRANCH0,6
	dw POKESP,QUIT,OPENF,XDOSPARAM,PEEK8
	dw LIT,0FFH,SUBTRACT,BRANCH0,1CH
	dw PRINT
	db 13H,'Duplicate filename '
	dw POKESP,QUIT,DRIVECODE,FCB,PEEK16
	dw LIT,10H,PLUS,LIT,0CH
	dw CMOVE,SETFCB,FILENAME,PEEK8,BL
	dw EQUAL,BRANCH0,6,POKESP,QUIT
	dw FCB,PEEK16,LIT,10H,PLUS
	dw PEEK8,DRIVECODE,POKE8,VMF3,VMF1
	dw MATCHAFN,VMF3,VMF2,MATCHAFN,OR
	dw BRANCH0,002FH,PRINT
	db 22H,'Cannot rename current block files '
	dw POKESP,QUIT,BRANCH,32H,RENAMEFILE
	dw XDOSFUNC,POKE16,FCB,PEEK16,XDOSPARAM
	dw POKE16,XDOSCALL,XDOSPARAM,PEEK8
	dw LIT,0FFH,EQUAL,BRANCH0,14H,PRINT
	db 0FH,'File not found '
	dw ENDF
;
L3268:
	db 85H
	dc 'ZEROS'
	dw L3179
ZEROS:
	dw EXECF
	dw ZERO,MAX,DUPNZ,BRANCH0,10H
	dw ZERO,DODO,LIT,30H,EMIT
	dw DOLOOP,0FFF8H
	dw ENDF
;
L328C:
	db 85H
	dc 'UD.ZR'
	dw L3268
UDZR:
	dw EXECF
	dw PUSHRP,ININUM,NUM_S,ENDNUM,POPRP
	dw OVER,SUBTRACT,ZEROS,TYPE
	dw ENDF
;
L32AA:
	db 87H
	dc 'ASCBYTE'
	dw L328C
ASCBYTE:
	dw EXECF
	dw DUP,LIT,20H,LESSER,OVER
	dw LIT,7EH,GREATER,OR,BRANCH0,0EH,DROP,LIT,2EH,EMIT
	dw BRANCH,4,EMIT
	dw ENDF
;
L32DC:
	db 85H
	dc 'ALINE'
	dw L32AA
ALINE:
	dw EXECF
	dw DUP,LIT,8,PLUS,SWAP
	dw DODO,PEEKI,PEEK8,ASCBYTE,DOLOOP
	dw 0FFF8H
	dw ENDF
;
L32FE:
	db 85H
	dc 'BYTES'
	dw L32DC
BYTES:
	dw EXECF
	dw DODO,PEEKI,PEEK8,ZERO,TWO
	dw UDZR,SPACE,DOLOOP,0FFF2H
	dw ENDF
;
L331C:
	db 85H
	dc 'MLINE'
	dw L32FE
MLINE:
	dw EXECF
	dw CR,DUP,ZERO,LIT,4
	dw UDZR,SPACE,DUP,LIT,8
	dw PLUS,SWAP,BYTES
	dw ENDF
;
L3342:
	db 84H
	dc 'DUMP'
	dw L331C
	dw EXECF
	dw HEX,DUP,MLINE,DUP,ALINE
	dw LIT,8,PLUS,INTERMINAL,BRANCH0,0FFEEH,KEY,DROP,KEY
	dw LIT,0DH,SUBTRACT,BRANCH0,0FFDEH,DROP
	dw QUIT
	dw ENDF
;
L3377:
	db 0C9H
	dc 'ASSEMBLER'
	dw L3342
ASSEMBLER:
	dw ATIVATE
	dw VOCABULARY
	dw 0A081H
	dw L56EA
L338B:
	dw PVEDITOR
;
L338D:
	db 0CAH
	dc 'ASSEMBLERV'
	dw L3377
	dw ATIVATE
	dw VOCABULARY
	dw 0A081H
	dw L5604
L33A2:
	dw L338B
;
L33A4:
	db 82H
	dc 'PC'
	dw OUTDIC
REGPC:
	dw VAR
	dw 5B82H
;
L33AD:
	db 82H
	dc 'AP'
	dw L33A4
AP:
	dw VAR
	dw 0000H
;
L33B6:
	db 83H
	dc 'APP'
	dw L33AD
APP:
	dw VAR
	dw 87BAH
;
L33C0:
	db 82H
	dc 'PF'
	dw L33B6
PF:
	dw VAR
	dw 0000H
;
L33C9:
	db 84H
	dc 'PASS'
	dw L33C0
PASS:
	dw VAR
	dw 0001H
;
L33D4:
	db 0C4H
	dc 'REGS'
	dw L33C9
REGS:
	dw ATIVATE
	dw VOCABULARY
	dw 0A081H
	dw L3415
L33E3:
	dw L33A2
;
L33E5:
	db 81H
	dc 'B'
	dw 0000H
	dw CONST
	dw 0000H
;
L33ED:
	db 81H
	dc 'C'
	dw L33E5
	dw CONST
	dw 0001H
;
L33F5:
	db 81H
	dc 'D'
	dw L33ED
	dw CONST
	dw 0002H
;
L33FD:
	db 81H
	dc 'E'
	dw L33F5
	dw CONST
	dw 0003H
;
L3405:
	db 81H
	dc 'H'
	dw L33FD
	dw CONST
	dw 0004H
;
L340D:
	db 81H
	dc 'L'
	dw L3405
	dw CONST
	dw 0005H
;
L3415:
	db 81H
	dc 'A'
	dw L340D
	dw CONST
	dw 0007H
;
L341D:
	db 0C8H
	dc 'REGPAIRS'
	dw L33D4
REGPAIRS:
	dw ATIVATE
	dw VOCABULARY
	dw 0A081H
	dw L3456
L3430:
	dw L33E3
;
L3432:
	db 82H
	dc 'BC'
	dw 0000H
	dw CONST
	dw 0000H
;
L343B:
	db 82H
	dc 'DE'
	dw L3432
	dw CONST
	dw 0010H
;
L3444:
	db 82H
	dc 'HL'
	dw L343B
	dw CONST
	dw 0020H
;
L344D:
	db 82H
	dc 'AF'
	dw L3444
	dw CONST
	dw 0006H
;
L3456:
	db 82H
	dc 'SP'
	dw L344D
	dw CONST
	dw 0030H
;
L345F:
	db 0C5H
	dc 'INDEX'
	dw L341D
REGINDEX:
	dw ATIVATE
	dw VOCABULARY
	dw 0A081H
	dw L347A
L346F:
	dw L3430
;
L3471:
	db 82H
	dc 'IX'
	dw 0000H
	dw CONST
	dw 00DDH
;
L347A:
	db 82H
	dc 'IY'
	dw L3471
	dw CONST
	dw 00FDH
;
L3483:
	db 0C6H
	dc 'REFINT'
	dw L345F
REFINT:
	dw ATIVATE
	dw VOCABULARY
	dw 0A081H
	dw L349E
L3494:
	dw L346F
;
L3496:
	db 81H
	dc 'R'
	dw 0000H
	dw CONST
	dw 0008H
;
L349E:
	db 81H
	dc 'I'
	dw L3496
	dw CONST
	dw 0000H
;
L34A6:
	db 0CCH
	dc 'CONDITIONALS'
	dw L3483
CONDITIONALS:
	dw ATIVATE
	dw VOCABULARY
	dw 0A081H
	dw L34FB
CONDITS1:
	dw L3494
;
L34BF:
	db 82H
	dc 'NZ'
	dw 0000H
	dw CONST
	dw 0000H
;
L34C8:
	db 81H
	dc 'Z'
	dw L34BF
	dw CONST
	dw 0008H
;
L34D0:
	db 82H
	dc 'NC'
	dw L34C8
	dw CONST
	dw 0010H
;
L34D9:
	db 81H
	dc 'C'
	dw L34D0
	dw CONST
	dw 0018H
;
L34E1:
	db 82H
	dc 'PO'
	dw L34D9
	dw CONST
	dw 0020H
;
L34EA:
	db 82H
	dc 'PE'
	dw L34E1
	dw CONST
	dw 0028H
;
L34F3:
	db 81H
	dc 'P'
	dw L34EA
	dw CONST
	dw 0030H
;
L34FB:
	db 81H
	dc 'M'
	dw L34F3
	dw CONST
	dw 0038H
;
L3503:
	db 85H
	dc 'VFIND'
	dw L34A6
VFIND:
	dw EXECF
	dw HERE,CONTEXT,PEEK16,PEEK16,DOFIND
	dw DUP,BRANCH0,6,SWAP,DROP
	dw ENDF
;
L3523:
	db 87H
	dc 'GETCHAR'
	dw L3503
GETCHAR:
	dw EXECF
	dw BLK,PEEK16,BRANCH0,0CH,BLK
	dw PEEK16,BLOCK,BRANCH,6,TIB
	dw PEEK16,CONIN,PEEK16,PLUS,PEEK8
	dw ENDF
;
L354F:
	db 87H
	dc 'ADVCHAR'
	dw L3523
ADVCHAR:
	dw EXECF
	dw ONE,CONIN,ADDMEM
	dw ENDF
;
L3563:
	db 85H
	dc 'ALPHA'
	dw L354F
ALPHA:
	dw EXECF
	dw DUP,LIT,40H,GREATER,SWAP
	dw LIT,5BH,LESSER,AND
	dw ENDF
;
L3581:
	db 0C4H
	dc 'CHR$'
	dw L3563
	dw EXECF
	dw BL,WORD,HERE,PEEK8,ONE
	dw SUBTRACT,ZERO,ISERROR,HERE,PLUS1
	dw PEEK8,LITERAL
	dw ENDF
;
L35A4:
	db 88H
	dc 'ALPHANUM'
	dw L3581
ALPHANUM:
	dw EXECF
	dw PUSHRP,PEEKR,LIT,40H,GREATER
	dw PEEKR,LIT,5BH,LESSER,AND
	dw PEEKR,LIT,2FH,GREATER,POPRP
	dw LIT,3AH,LESSER,AND,OR
	dw ENDF
;
L35DB:
	db 83H
	dc 'NUM'
	dw L35A4
NUM:
	dw EXECF
	dw DUP,LIT,2FH,GREATER,SWAP
	dw LIT,3AH,LESSER,AND
	dw ENDF
;
L35F7:
	db 84H
	dc 'OPDC'
	dw L35DB
OPDC:
	dw VAR
	dw 0002H
;
L3602:
	db 84H
	dc '-REG'
	dw L35F7
MREG:
	dw CONST
	dw 0001H
;
L360D:
	db 83H
	dc '-RP'
	dw L3602
MRP:
	dw CONST
	dw 0002H
;
L3617:
	db 84H
	dc '-NUM'
	dw L360D
MNUM:
	dw CONST
	dw 0004H
;
L3622:
	db 84H
	dc '-SYM'
	dw L3617
MSYM:
	dw CONST
	dw 0008H
;
L362D:
	db 83H
	dc '-CC'
	dw L3622
MCC:
	dw CONST
	dw 0010H
;
L3637:
	db 83H
	dc '-RE'
	dw L362D
MRE:
	dw CONST
	dw 0020H
;
L3641:
	db 83H
	dc '-XY'
	dw L3637
MXY:
	dw CONST
	dw 0040H
;
L364B:
	db 84H
	dc '-IND'
	dw L3641
MIND:
	dw CONST
	dw 8000H
;
L3656:
	db 85H
	dc '-REGI'
	dw L364B
MREGI:
	dw CONST
	dw 8001H
;
L3662:
	db 84H
	dc '-RPI'
	dw L3656
MRPI:
	dw CONST
	dw 8002H
;
L366D:
	db 85H
	dc '-NUMI'
	dw L3662
MNUMI:
	dw CONST
	dw 8004H
;
L3679:
	db 85H
	dc '-SYMI'
	dw L366D
MSYMI:
	dw CONST
	dw 8008H
;
L3685:
	db 84H
	dc '-XYI'
	dw L3679
MXYI:
	dw CONST
	dw 8040H
;
L3690:
	db 88H
	dc '(NUMBER)'
	dw L3685
NUMBER3:
	dw EXECF
	dw ZERO,ZERO,GETCHAR,BASE,PEEK16
	dw DIGIT,BRANCH0,22H,ADVCHAR,SWAP
	dw BASE,PEEK16,UTIMES,DROP,ROT
	dw BASE,PEEK16,UTIMES,DPLUS,DUP
	dw ZERO,ISERROR,BRANCH,0FFD6H
	dw ENDF
;
L36CF:
	db 86H
	dc 'NUMBER'
	dw L3690
NUMBER4:
	dw EXECF
	dw GETCHAR,LIT,2DH,EQUAL,DUP
	dw PUSHRP,BRANCH0,4,ADVCHAR,NUMBER3
	dw DROP,POPRP,BRANCH0,4,MINUS
	dw ENDF
;
L36FA:
	db 88H
	dc 'DESTBUFF'
	dw L36CF
DESTBUFF:
	dw VAR
	dw 5B80H
;
L3709:
	db 8AH
	dc 'RDALPHANUM'
	dw L36FA
RDALPHANUM:
	dw EXECF
	dw HERE,PLUS1,DESTBUFF,POKE16,ZERO
	dw HERE,POKE8,GETCHAR,DUP,ALPHANUM
	dw BRANCH0,1EH,ADVCHAR,DESTBUFF,PEEK16
	dw POKE8,HERE,PEEK8,PLUS1,HERE
	dw POKE8,ONE,DESTBUFF,ADDMEM,BRANCH,0FFDCH,DROP
	dw ENDF
;
L3750:
	db 83H
	dc 'MUL'
	dw L3709
	dw EXECF
MUL:
	dw UTIMES,DROP
	dw ENDF
;
L375E:
	db 83H
	dc 'DIV'
	dw L3750
	dw EXECF
DIV:
	dw PUSHRP,ZERO,POPRP,UDIV,SWAP
	dw DROP
	dw ENDF
;
L3774:
	db 85H
	dc 'INFIX'
	dw L375E
INFIX:
	dw EXECF
	dw PUSHRP,PEEKR,LIT,2BH,EQUAL
	dw BRANCH0,0EH,LIT,PLUS+2,CFA
	dw ONE,BRANCH,7CH,PEEKR
	dw LIT,2DH,EQUAL,BRANCH0,0EH
	dw LIT,SUBTRACT+2,CFA,ONE,BRANCH,0064H
	dw PEEKR,LIT,2AH,EQUAL,BRANCH0,0EH,LIT,MUL,CFA,ONE
	dw BRANCH,4CH,PEEKR,LIT,2FH
	dw EQUAL,BRANCH0,0EH,LIT,DIV
	dw CFA,ONE,BRANCH,34H,PEEKR
	dw LIT,26H,EQUAL,BRANCH0,0EH
	dw LIT,AND+2,CFA,ONE,BRANCH,1CH,PEEKR,LIT,2EH,EQUAL
	dw BRANCH0,0EH,LIT,OR+2,CFA
	dw ONE,BRANCH,4,ZERO,POPRP
	dw DROP
	dw ENDF
;
L3818:
	db 83H
	dc 'OR!'
	dw L3774
ORMEM:
	dw EXECF
	dw DUP,PUSHRP,PEEK16,OR,POPRP
	dw POKE16
	dw ENDF
;
L382E:
	db 89H
	dc 'REGSEARCH'
	dw L3818
REGSEARCH:
	dw EXECF
	dw REGS,VFIND,BRANCH0,10H,PEEK16
	dw MREG,OPDC,ORMEM,ONE,BRANCH,0046H,REGPAIRS,VFIND,BRANCH0,10H
	dw PEEK16,MRP,OPDC,ORMEM,ONE
	dw BRANCH,30H,REGINDEX,VFIND,BRANCH0,10H,PEEK16,MXY,OPDC,ORMEM
	dw ONE,BRANCH,1AH,REFINT,VFIND
	dw BRANCH0,10H,PEEK16,MRE,OPDC
	dw ORMEM,ONE,BRANCH,4,ZERO
	dw ENDF
;
L3898:
	db 84H
	dc 'SYM0'
	dw L382E
SYM0:
	dw VAR
	dw 0B508H
;
L38A3:
	db 84H
	dc 'SYMP'
	dw L3898
SYMP:
	dw VAR
	dw 0B508H
;
L38AE:
	db 87H
	dc 'SYMLINK'
	dw L38A3
SYMLINK:
	dw VAR
	dw L38BC
L38BC:
	dw 0A081H,0000H
;
L38C0:
	db 8BH
	dc 'CLEARSYMTAB'
	dw L38AE
CLEARSYMTAB1:
	dw EXECF
	dw SYMLINK,PLUS2,SYMLINK,POKE16,SYM0
	dw PEEK16,SYMP,POKE16
	dw ENDF
;
L38E2:
	db 89H
	dc 'SYMSEARCH'
	dw L38C0
SYMSEARCH:
	dw EXECF
	dw HERE,SYMLINK,PEEK16,DOFIND,BRANCH0,16H,DROP,TWO,SUBTRACT,PEEK16
	dw MSYM,OPDC,ORMEM,ONE,BRANCH,4,ZERO
	dw ENDF
;
L3914:
	db 86H
	dc 'SYMBOL'
	dw L38E2
SYMBOL1:
	dw EXECF
	dw BL,WORD,SYMP,PEEK16,HERE
	dw LIT,100H,PLUS,ULESSER,BRANCH0,21H,CR,PRINT
	db 12H,'Symbol table full '
	dw POKESP,QUIT,BRANCH,008BH,SYMSEARCH
	dw BRANCH0,19H,CR,PRINT
	db 0EH,'Double symbol '
	dw POKESP,QUIT,HERE,PLUS1,PEEK8
	dw ALPHA,EQUAL0,LIT,9,ISERROR
	dw SYMP,PEEK16,DUP,PUSHRP,HERE
	dw PEEK8,LIT,5,PLUS,SUBTRACT
	dw SYMP,POKE16,HERE,SYMP,PEEK16
	dw HERE,PEEK8,PLUS1,CMOVE,SYMP
	dw PEEK16,LIT,80H,TOGGLE,POPRP
	dw DUP,LIT,5,SUBTRACT
	dw LIT,80H,TOGGLE,SYMLINK,PEEK16,OVER
	dw LIT,4,SUBTRACT,POKE16,SYMP
	dw PEEK16,SYMLINK,POKE16,TWO,SUBTRACT
	dw POKE16
	dw ENDF
;
L39DF:
	db 85H
	dc 'LABEL'
	dw OUTDIC
LABEL:
	dw EXECF
	dw REGPC,PEEK16,SYMBOL1
	dw ENDF
;
L39F1:
	db 86H
	dc 'SYMBOL'
	dw L39DF
	dw EXECF
	dw SYMBOL1
	dw ENDF
;
L3A00:
	db 8BH
	dc 'CLEARSYMTAB'
	dw L39F1
	dw EXECF
	dw CLEARSYMTAB1
	dw ENDF
;
L3A14:
	db 8AH
	dc 'CONDSEARCH'
	dw L3914
CONDSEARCH:
	dw EXECF
	dw CONDITIONALS,VFIND,BRANCH0,10H,PEEK16
	dw MCC,OPDC,ORMEM,ONE,BRANCH,4,ZERO,ASSEMBLER
	dw ENDF
;
L3A3F:
	db 87H
	dc 'CHARLIT'
	dw L3A14
CHARLIT:
	dw EXECF
	dw ADVCHAR,GETCHAR,DUP,LIT,20H
	dw LESSER,OVER,LIT,7EH,GREATER
	dw OR,LIT,9,ISERROR,ADVCHAR
	dw GETCHAR,LIT,27H,EQUAL,BRANCH0,10H,ADVCHAR,MNUM,OPDC,ORMEM
	dw ONE,BRANCH,0EH,DROP,ZERO
	dw LIT,0FFFEH,CONIN,ADDMEM
	dw ENDF
;
L3A91:
	db 8BH
	dc 'ALPHASEARCH'
	dw L3A3F
ALPHASEARCH:
	dw EXECF
	dw REGSEARCH,BRANCH0,8,ONE,BRANCH,38H,SYMSEARCH,BRANCH0,8,ONE
	dw BRANCH,2CH,PASS,PEEK16,EQUAL0
	dw BRANCH0,20H,CONDSEARCH,BRANCH0,0AH
	dw DROP,ZERO,BRANCH,0EH,MSYM
	dw OPDC,ORMEM,REGPC,PEEK16,ONE
	dw BRANCH,4,ZERO,ASSEMBLER
	dw ENDF
;
L3AE7:
	db 84H
	dc 'ITEM'
	dw L3A91
ITEM:
	dw EXECF
	dw ZERO,OPDC,POKE16,GETCHAR
	dw LIT,28H,EQUAL,BRANCH0,0AH,ADVCHAR
	dw MIND,OPDC,ORMEM,GETCHAR,PUSHRP
	dw PEEKR,ALPHA,BRANCH0,0AH,RDALPHANUM
	dw ALPHASEARCH,BRANCH,0054H,PEEKR,NUM
	dw PEEKR,LIT,2DH,EQUAL,OR
	dw BRANCH0,10H,MNUM,OPDC,ORMEM
	dw NUMBER4,ONE,BRANCH,34H,PEEKR
	dw LIT,24H,EQUAL,BRANCH0,14H
	dw ADVCHAR,REGPC,PEEK16,ONE,MSYM
	dw OPDC,ORMEM,BRANCH,16H,PEEKR
	dw LIT,27H,EQUAL,BRANCH0,8
	dw CHARLIT,BRANCH,4,ZERO,POPRP
	dw DROP
	dw ENDF
;
L3B76:
	db 85H
	dc 'CLIND'
	dw L3AE7
CLIND:
	dw EXECF
	dw GETCHAR,LIT,29H,SUBTRACT
	dw LIT,9,ISERROR,ADVCHAR
	dw ENDF
;
L3B92:
	db 85H
	dc 'CLCOM'
	dw L3B76
CLCOM:
	dw EXECF
	dw GETCHAR,LIT,2CH,SUBTRACT
	dw LIT,9,ISERROR,ADVCHAR
	dw ENDF
;
L3BAE:
	db 86H
	dc 'CLPLUS'
	dw L3B92
CLPLUS:
	dw EXECF
	dw GETCHAR,LIT,2BH,SUBTRACT
	dw LIT,9,ISERROR,ADVCHAR
	dw ENDF
;
L3BCB:
	db 86H
	dc 'SYMNUM'
	dw L3BAE
SYMNUM:
	dw EXECF
	dw BRANCH0,34H,OPDC,PEEK16,PUSHRP
	dw PEEKR,MSYM,AND,BRANCH0,8
	dw ONE,BRANCH,16H,PEEKR,MNUM
	dw AND,BRANCH0,8,ONE,BRANCH,6,DROP,ZERO,POPRP,DROP
	dw BRANCH,4,ZERO
	dw ENDF
;
L3C10:
	db 85H
	dc 'EXPRN'
	dw L3BCB
EXPRN:
	dw EXECF
	dw GETCHAR,INFIX,BRANCH0,26H,PUSHRP
	dw ADVCHAR,ZERO,OPDC,POKE16,ITEM
	dw SYMNUM,POPRP,SWAP,BRANCH0,8
	dw EXECUTE,BRANCH,6,ZERO,ERROR
	dw BRANCH,0FFD6H
	dw ENDF
;
L3C48:
	db 87H
	dc 'SYMNUMS'
	dw L3C10
SYMNUMS:
	dw EXECF
	dw ITEM,SYMNUM,BRANCH0,0AH,EXPRN
	dw ONE,BRANCH,4,ZERO
	dw ENDF
;
L3C68:
	db 84H
	dc 'CPUT'
	dw L3C48
CPUT:
	dw EXECF
	dw PASS,PEEK16,BRANCH0,1AH,DUP
	dw LIT,0FF80H,LESSER,OVER
	dw LIT,0FFH,GREATER,OR,LIT,9
	dw ISERROR,LIT,0FFH,AND,PF
	dw PEEK16,BRANCH0,16H,APP,PEEK16
	dw PEEK16,POKE8,ONE,APP,PEEK16
	dw ADDMEM,BRANCH,4,DROP,ONE
	dw REGPC,ADDMEM
	dw ENDF
;
L3CBD:
	db 83H
	dc 'PUT'
	dw L3C68
PUT:
	dw EXECF
	dw PF,PEEK16,BRANCH0,16H,APP
	dw PEEK16,PEEK16,POKE16,TWO,APP
	dw PEEK16,ADDMEM,BRANCH,4,DROP
	dw TWO,REGPC,ADDMEM
	dw ENDF
;
L3CEB:
	db 82H
	dc '8*'
	dw L3CBD
TIMES8:
	dw EXECF
	dw DUP,PLUS,DUP,PLUS,DUP
	dw PLUS
	dw ENDF
;
L3D00:
	db 83H
	dc 'LD1'
	dw L3CEB
LD1:
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MREG
	dw EQUAL,BRANCH0,14H,SWAP,TIMES8
	dw OR,LIT,40H,OR,CPUT
	dw BRANCH,013EH,PEEKR,MNUM,EQUAL
	dw PEEKR,MSYM,EQUAL,OR,BRANCH0,16H,SWAP,TIMES8,LIT,6
	dw OR,CPUT,EXPRN,CPUT,BRANCH,0118H,PEEKR,MRPI,EQUAL,BRANCH0,0076H,PUSHRP,PEEKR,LIT,20H
	dw EQUAL,BRANCH0,12H,CLIND,TIMES8
	dw LIT,46H,OR,CPUT,BRANCH,50H,PEEKR,LIT,0,EQUAL
	dw BRANCH0,1AH,LIT,7,SUBTRACT
	dw LIT,9,ISERROR,CLIND
	dw LIT,0AH,CPUT,BRANCH,2CH,PEEKR
	dw LIT,10H,EQUAL,BRANCH0,1AH
	dw LIT,7,SUBTRACT,LIT,9
	dw ISERROR,CLIND,LIT,1AH,CPUT
	dw BRANCH,8,LIT,9,ERROR
	dw POPRP,DROP,BRANCH,009AH,PEEKR
	dw MXYI,EQUAL,BRANCH0,30H,GETCHAR
	dw LIT,2BH,SUBTRACT,LIT,9
	dw ISERROR,ADVCHAR,CPUT,TIMES8
	dw LIT,46H,OR,CPUT,SYMNUMS,EQUAL0
	dw LIT,9,ISERROR,CPUT,CLIND
	dw BRANCH,0062H,PEEKR,MNUMI,EQUAL
	dw PEEKR,MSYMI,EQUAL,OR,BRANCH0,20H,SWAP,LIT,7,SUBTRACT
	dw LIT,9,ISERROR,EXPRN,CLIND
	dw LIT,3AH,CPUT,PUT,BRANCH,32H,PEEKR,MRE,EQUAL,BRANCH0,22H,SWAP,LIT,7,SUBTRACT
	dw LIT,9,ISERROR,LIT,0EDH
	dw PUT,LIT,57H,OR,PUT
	dw BRANCH,8,LIT,9,ERROR
	dw POPRP,DROP
	dw ENDF
;
L3E76:
	db 83H
	dc 'LD2'
	dw L3D00
LD2:
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MREG
	dw EQUAL,BRANCH0,56H,OVER
	dw LIT,20H,EQUAL,BRANCH0,10H
	dw LIT,70H,OR,CPUT,DROP,BRANCH,38H,LIT,7,EQUAL,BRANCH0,28H,DUP,LIT,10H,EQUAL
	dw BRANCH0,0EH,DROP,LIT,12H
	dw CPUT,BRANCH,0CH,LIT,9
	dw ISERROR,TWO,CPUT,BRANCH,8
	dw LIT,9,ERROR,BRANCH,36H
	dw PEEKR,MNUM,EQUAL,PEEKR,MSYM
	dw EQUAL,OR,BRANCH0,1EH,SWAP
	dw LIT,20H,SUBTRACT,LIT,9
	dw ISERROR,LIT,36H,CPUT,EXPRN
	dw CPUT,BRANCH,8,LIT,9
	dw ERROR,POPRP,DROP
	dw ENDF
;
L3F26:
	db 83H
	dc 'LD3'
	dw L3E76
LD3:
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MREG
	dw EQUAL,BRANCH0,14H,ROT,CPUT
	dw LIT,70H,OR,CPUT,CPUT
	dw BRANCH,30H,PEEKR,MNUM,EQUAL
	dw PEEKR,MSYM,EQUAL,OR,BRANCH0,18H,EXPRN,ROT,CPUT
	dw LIT,36H,CPUT,SWAP,CPUT,CPUT
	dw BRANCH,8,LIT,9,ERROR
	dw POPRP,DROP
	dw ENDF
;
L3F8E:
	db 83H
	dc 'LD4'
	dw L3F26
LD4:
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MNUM
	dw EQUAL,PEEKR,MSYM,EQUAL,OR
	dw BRANCH0,12H,EXPRN,SWAP,ONE
	dw OR,CPUT,PUT,BRANCH,009EH
	dw PEEKR,MNUMI,EQUAL,PEEKR,MSYMI
	dw EQUAL,OR,BRANCH0,36H,EXPRN
	dw CLIND,OVER,LIT,20H,EQUAL
	dw BRANCH0,10H,LIT,2AH,CPUT
	dw PUT,DROP,BRANCH,14H
	dw LIT,0EDH,CPUT,SWAP,LIT,4BH
	dw OR,CPUT,PUT,BRANCH,58H
	dw PEEKR,MRP,EQUAL,BRANCH0,24H
	dw LIT,20H,SUBTRACT,LIT,9
	dw ISERROR,LIT,30H,SUBTRACT
	dw LIT,9,ISERROR,LIT,0F9H,CPUT
	dw BRANCH,2CH,PEEKR,MXY,EQUAL
	dw BRANCH0,1CH,SWAP,LIT,30H
	dw SUBTRACT,LIT,9,ISERROR,CPUT
	dw LIT,0F9H,CPUT,BRANCH,8
	dw LIT,9,ERROR,POPRP,DROP
	dw ENDF
;
L406A:
	db 83H
	dc 'LD5'
	dw L3F8E
LD5:
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MNUM
	dw EQUAL,PEEKR,MSYM,EQUAL,OR
	dw BRANCH0,14H,EXPRN,SWAP,CPUT
	dw LIT,21H,CPUT,PUT,BRANCH,2EH,PEEKR,MNUMI,EQUAL,PEEKR
	dw MSYMI,EQUAL,OR,BRANCH0,16H
	dw EXPRN,CLIND,SWAP,CPUT
	dw LIT,2AH,CPUT,PUT,BRANCH,8
	dw LIT,9,ERROR,POPRP,DROP
	dw ENDF
;
L40D8:
	db 83H
	dc 'LD6'
	dw L406A
LD6:
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MRP
	dw EQUAL,BRANCH0,3EH,DUP
	dw LIT,6,EQUAL,LIT,9,ISERROR
	dw DUP,LIT,20H,EQUAL,BRANCH0,10H,DROP,LIT,22H,CPUT
	dw PUT,BRANCH,12H,LIT,0EDH
	dw CPUT,LIT,43H,OR,CPUT
	dw PUT,BRANCH,42H,PEEKR,MXY
	dw EQUAL,BRANCH0,10H,CPUT
	dw LIT,22H,CPUT,PUT,BRANCH,2AH
	dw PEEKR,MREG,EQUAL,BRANCH0,1AH
	dw LIT,7,SUBTRACT,LIT,9
	dw ISERROR,LIT,32H,CPUT,PUT
	dw BRANCH,8,LIT,9,ERROR
	dw POPRP,DROP
	dw ENDF
;
L417C:
	db 82H
	dc 'LD'
	dw L3A00
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MREG
	dw EQUAL,BRANCH0,0AH,CLCOM,LD1
	dw BRANCH,008CH,PEEKR,MRPI,EQUAL
	dw BRANCH0,0CH,CLIND,CLCOM,LD2
	dw BRANCH,0078H,PEEKR,MXYI,EQUAL
	dw BRANCH0,18H,CLPLUS,SYMNUMS,EQUAL0
	dw LIT,9,ISERROR,CLIND,CLCOM
	dw LD3,BRANCH,58H,PEEKR,MRP
	dw EQUAL,BRANCH0,18H,DUP
	dw LIT,6,EQUAL,LIT,9,ISERROR
	dw CLCOM,LD4,BRANCH,38H,PEEKR
	dw MXY,EQUAL,BRANCH0,0AH,CLCOM
	dw LD5,BRANCH,26H,PEEKR,MNUMI
	dw EQUAL,PEEKR,MSYMI,EQUAL,OR
	dw BRANCH0,0EH,EXPRN,CLIND,CLCOM
	dw LD6,BRANCH,8,LIT,9
	dw ERROR,POPRP,DROP
	dw ENDF
;
L4235:
	db 84H
	dc 'PUSH'
	dw L417C
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MRP
	dw EQUAL,BRANCH0,2EH,DUP
	dw LIT,30H,EQUAL,LIT,9,ISERROR
	dw DUP,LIT,6,EQUAL,BRANCH0,8,DROP,LIT,30H
	dw LIT,0C5H,OR,CPUT,BRANCH,1EH
	dw PEEKR,MXY,EQUAL,BRANCH0,0EH
	dw CPUT,LIT,0E5H,CPUT,BRANCH,8,LIT,9,ERROR,POPRP
	dw DROP
	dw ENDF
;
L42A6:
	db 83H
	dc 'POP'
	dw L4235
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MRP
	dw EQUAL,BRANCH0,2EH,DUP
	dw LIT,30H,EQUAL,LIT,9,ISERROR
	dw DUP,LIT,6,EQUAL,BRANCH0,8,DROP,LIT,30H
	dw LIT,0C1H,OR,CPUT,BRANCH,1EH
	dw PEEKR,MXY,EQUAL,BRANCH0,0EH
	dw CPUT,LIT,0E1H,CPUT,BRANCH,8,LIT,9,ERROR,POPRP
	dw DROP
	dw ENDF
;
L4316:
	db 83H
	dc 'EX1'
	dw L40D8
EX1:
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MRP
	dw EQUAL,BRANCH0,24H,LIT,20H
	dw SUBTRACT,LIT,9,ISERROR
	dw LIT,30H,SUBTRACT,LIT,9,ISERROR
	dw LIT,0E3H,CPUT,BRANCH,2CH
	dw PEEKR,MXY,EQUAL,BRANCH0,1CH
	dw SWAP,LIT,30H,SUBTRACT
	dw LIT,9,ISERROR,CPUT,LIT,0E3H
	dw CPUT,BRANCH,8,LIT,9
	dw ERROR,POPRP,DROP
	dw ENDF
;
L438A:
	db 82H
	dc 'EX'
	dw L42A6
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MRP
	dw EQUAL,BRANCH0,0062H,CLCOM,ITEM
	dw EQUAL0,LIT,9,ISERROR,OPDC
	dw PEEK16,MRP,SUBTRACT,LIT,9
	dw ISERROR,DUP2,LIT,20H,EQUAL
	dw SWAP,LIT,10H,EQUAL,AND
	dw BRANCH0,10H,DROP,DROP
	dw LIT,0EBH,CPUT,BRANCH,20H
	dw LIT,6,SUBTRACT,LIT,9,ISERROR
	dw LIT,6,SUBTRACT,LIT,9
	dw ISERROR,LIT,8,CPUT,BRANCH,1CH,PEEKR,MRPI,EQUAL,BRANCH0,0CH,CLIND,CLCOM,EX1,BRANCH,8,LIT,9,ERROR,POPRP
	dw DROP
	dw ENDF
;
L442B:
	db 84H
	dc 'Z801'
	dw L4316
	dw EXECF
	dw BUILDS,POKED8,DOES
Z801:
	dw PEEK8,CPUT
	dw ENDF
;
L4440:
	db 84H
	dc 'Z802'
	dw L442B
	dw EXECF
	dw BUILDS,POKED8,DOES
Z802:
	dw LIT,0EDH
	dw CPUT,PEEK8,CPUT
	dw ENDF
;
L445B:
	db 83H
	dc 'LDI'
	dw L438A
	dw ATIVATE
	dw Z802
	db 0A0H
;
L4466:
	db 84H
	dc 'LDIR'
	dw L445B
	dw ATIVATE
	dw Z802
	db 0B0H
;
L4472:
	db 83H
	dc 'LDD'
	dw L4466
	dw ATIVATE
	dw Z802
	db 0A8H
;
L447D:
	db 84H
	dc 'LDDR'
	dw L4472
	dw ATIVATE
	dw Z802
	db 0B8H
;
L4489:
	db 83H
	dc 'CPI'
	dw L447D
	dw ATIVATE
	dw Z802
	db 0A1H
;
L4494:
	db 84H
	dc 'CPIR'
	dw L4489
	dw ATIVATE
	dw Z802
	db 0B1H
;
L44A0:
	db 83H
	dc 'CPD'
	dw L4494
	dw ATIVATE
	dw Z802
	db 0A9H
;
L44AB:
	db 84H
	dc 'CPDR'
	dw L44A0
	dw ATIVATE
	dw Z802
	db 0B9H
;
L44B7:
	db 83H
	dc 'INI'
	dw L44AB
	dw ATIVATE
	dw Z802
	db 0A2H
;
L44C2:
	db 84H
	dc 'INIR'
	dw L44B7
	dw ATIVATE
	dw Z802
	db 0B2H
;
L44CE:
	db 83H
	dc 'IND'
	dw L44C2
	dw ATIVATE
	dw Z802
	db 0AAH
;
L44D9:
	db 84H
	dc 'INDR'
	dw L44CE
	dw ATIVATE
	dw Z802
	db 0BAH
;
L44E5:
	db 84H
	dc 'OUTI'
	dw L44D9
	dw ATIVATE
	dw Z802
	db 0A3H
;
L44F1:
	db 84H
	dc 'OTIR'
	dw L44E5
	dw ATIVATE
	dw Z802
	db 0B3H
;
L44FD:
	db 84H
	dc 'OUTD'
	dw L44F1
	dw ATIVATE
	dw Z802
	db 0ABH
;
L4509:
	db 84H
	dc 'OTDR'
	dw L44FD
	dw ATIVATE
	dw Z802
	db 0BBH
;
L4515:
	db 86H
	dc 'Z80INC'
	dw L4440
	dw EXECF
	dw BUILDS,POKED8,DOES
Z80INC:
	dw PEEK8,ITEM
	dw EQUAL0,LIT,9,ISERROR,OPDC
	dw PEEK16,PUSHRP,PEEKR,MREG,EQUAL
	dw BRANCH0,0CH,TIMES8,OR,CPUT
	dw BRANCH,00B4H,PEEKR,MRPI,EQUAL
	dw BRANCH0,1CH,CLIND,LIT,20H
	dw SUBTRACT,LIT,9,ISERROR
	dw LIT,30H,OR,CPUT,BRANCH,0090H
	dw PEEKR,MXYI,EQUAL,BRANCH0,24H
	dw CLPLUS,SYMNUMS,EQUAL0,LIT,9
	dw ISERROR,CLIND,SWAP,CPUT,SWAP
	dw LIT,30H,OR,CPUT,CPUT
	dw BRANCH,0064H,PEEKR,MRP,EQUAL
	dw BRANCH0,2CH,DUP,LIT,6
	dw EQUAL,LIT,9,ISERROR,THREE
	dw OR,SWAP,LIT,5,EQUAL
	dw BRANCH0,8,LIT,8,OR
	dw CPUT,BRANCH,30H,PEEKR,MXY
	dw EQUAL,BRANCH0,20H,CPUT
	dw LIT,23H,SWAP,LIT,5,EQUAL
	dw BRANCH0,8,LIT,8,OR
	dw CPUT,BRANCH,8,LIT,9
	dw ERROR,POPRP,DROP
	dw ENDF
;
L4604:
	db 83H
	dc 'INC'
	dw L4509
	dw ATIVATE
	dw Z80INC
	db 04H
;
L460F:
	db 83H
	dc 'DEC'
	dw L4604
	dw ATIVATE
	dw Z80INC
	db 05H
;
L461A:
	db 83H
	dc 'DAA'
	dw L460F
	dw ATIVATE
	dw Z801
	db 27H
;
L4625:
	db 83H
	dc 'CPL'
	dw L461A
	dw ATIVATE
	dw Z801
	db 2FH
;
L4630:
	db 83H
	dc 'CCF'
	dw L4625
	dw ATIVATE
	dw Z801
	db 3FH
;
L463B:
	db 83H
	dc 'SCF'
	dw L4630
	dw ATIVATE
	dw Z801
	db 37H
;
L4646:
	db 83H
	dc 'NOP'
	dw L463B
	dw ATIVATE
	dw Z801
	db 00H
;
L4651:
	db 84H
	dc 'HALT'
	dw L4646
	dw ATIVATE
	dw Z801
	db 76H
;
L465D:
	db 82H
	dc 'DI'
	dw L4651
	dw ATIVATE
	dw Z801
	db 0F3H
;
L4667:
	db 82H
	dc 'EI'
	dw L465D
	dw ATIVATE
	dw Z801
	db 0FBH
;
L4671:
	db 83H
	dc 'EXX'
	dw L4667
	dw ATIVATE
	dw Z801
	db 0D9H
;
L467C:
	db 84H
	dc 'RLCA'
	dw L4671
	dw ATIVATE
	dw Z801
	db 07H
;
L4688:
	db 83H
	dc 'RLA'
	dw L467C
	dw ATIVATE
	dw Z801
	db 17H
;
L4693:
	db 84H
	dc 'RRCA'
	dw L4688
	dw ATIVATE
	dw Z801
	db 0FH
;
L469F:
	db 83H
	dc 'RRA'
	dw L4693
	dw ATIVATE
	dw Z801
	db 1FH
;
L46AA:
	db 83H
	dc 'NEG'
	dw L469F
	dw ATIVATE
	dw Z802
	db 44H
;
L46B5:
	db 83H
	dc 'IM0'
	dw L46AA
	dw ATIVATE
	dw Z802
	db 46H
;
L46C0:
	db 83H
	dc 'IM1'
	dw L46B5
	dw ATIVATE
	dw Z802
	db 56H
;
L46CB:
	db 83H
	dc 'IM2'
	dw L46C0
	dw ATIVATE
	dw Z802
	db 5EH
;
L46D6:
	db 83H
	dc 'RLD'
	dw L46CB
	dw ATIVATE
	dw Z802
	db 6FH
;
L46E1:
	db 83H
	dc 'RRD'
	dw L46D6
	dw ATIVATE
	dw Z802
	db 67H
;
L46EC:
	db 84H
	dc 'RETI'
	dw L46E1
	dw ATIVATE
	dw Z802
	db 4DH
;
L46F8:
	db 84H
	dc 'RETN'
	dw L46EC
	dw ATIVATE
	dw Z802
	db 45H
;
L4704:
	db 86H
	dc 'Z80ROT'
	dw L4515
	dw EXECF
	dw BUILDS,POKED8,DOES
Z80ROT:
	dw PEEK8,ITEM
	dw EQUAL0,LIT,9,ISERROR,OPDC
	dw PEEK16,PUSHRP,PEEKR,MREG,EQUAL
	dw BRANCH0,10H,LIT,0CBH,CPUT
	dw OR,CPUT,BRANCH,0062H,PEEKR
	dw MRPI,EQUAL,BRANCH0,22H,CLIND
	dw LIT,20H,SUBTRACT,LIT,9
	dw ISERROR,LIT,0CBH,CPUT
	dw LIT,6,OR,CPUT,BRANCH,38H
	dw PEEKR,MXYI,EQUAL,BRANCH0,28H
	dw CLPLUS,SYMNUMS,EQUAL0,LIT,9
	dw ISERROR,CLIND,SWAP,CPUT
	dw LIT,0CBH,CPUT,CPUT,LIT,6
	dw OR,CPUT,BRANCH,8
	dw LIT,9,ERROR,POPRP,DROP
	dw ENDF
;
L47A5:
	db 83H
	dc 'RLC'
	dw L46F8
	dw ATIVATE
	dw Z80ROT
	db 00H
;
L47B0:
	db 82H
	dc 'RL'
	dw L47A5
	dw ATIVATE
	dw Z80ROT
	db 10H
;
L47BA:
	db 83H
	dc 'RRC'
	dw L47B0
	dw ATIVATE
	dw Z80ROT
	db 08H
;
L47C5:
	db 82H
	dc 'RR'
	dw L47BA
	dw ATIVATE
	dw Z80ROT
	db 18H
;
L47CF:
	db 83H
	dc 'SLA'
	dw L47C5
	dw ATIVATE
	dw Z80ROT
	db 20H
;
L47DA:
	db 83H
	dc 'SRA'
	dw L47CF
	dw ATIVATE
	dw Z80ROT
	db 28H
;
L47E5:
	db 83H
	dc 'SRL'
	dw L47DA
	dw ATIVATE
	dw Z80ROT
	db 38H
;
L47F0:
	db 86H
	dc 'Z80BIT'
	dw L4704
	dw EXECF
	dw BUILDS,POKED8,DOES
Z80BIT:
	dw PEEK8,ITEM
	dw EQUAL0,LIT,9,ISERROR,OPDC
	dw PEEK16,DUP,MNUM,EQUAL,SWAP
	dw MSYM,EQUAL,OR,EQUAL0
	dw LIT,9,ISERROR,EXPRN,DUP,LESS0
	dw LIT,9,ISERROR,DUP
	dw LIT,7,GREATER,LIT,9,ISERROR
	dw CLCOM,ITEM,EQUAL0,LIT,9
	dw ISERROR,OPDC,PEEK16,PUSHRP,PEEKR
	dw MREG,EQUAL,BRANCH0,16H,SWAP
	dw TIMES8,OR,OR,LIT,0CBH
	dw CPUT,CPUT,BRANCH,6AH,PEEKR
	dw MRPI,EQUAL,BRANCH0,26H,CLIND
	dw LIT,20H,SUBTRACT,LIT,9
	dw ISERROR,TIMES8,LIT,6,OR
	dw OR,LIT,0CBH,CPUT,CPUT
	dw BRANCH,3CH,PEEKR,MXYI,EQUAL
	dw BRANCH0,2CH,CLPLUS,SYMNUMS,EQUAL0
	dw LIT,9,ISERROR,CLIND,SWAP
	dw CPUT,LIT,0CBH,CPUT,CPUT
	dw TIMES8,LIT,6,OR,OR
	dw CPUT,BRANCH,8,LIT,9
	dw ERROR,POPRP,DROP
	dw ENDF
;
L48DF:
	db 83H
	dc 'BIT'
	dw L47E5
	dw ATIVATE
	dw Z80BIT
	db 40H
;
L48EA:
	db 83H
	dc 'SET'
	dw L48DF
	dw ATIVATE
	dw Z80BIT
	db 0C0H
;
L48F5:
	db 83H
	dc 'RES'
	dw L48EA
	dw ATIVATE
	dw Z80BIT
	db 80H
;
L4900:
	db 82H
	dc 'JP'
	dw L48F5
	dw EXECF
	dw ITEM,OPDC,PEEK16,MREG,EQUAL
	dw BRANCH0,0AH,DROP,ZERO,BRANCH,4,ONE,AND,BRANCH0,70H
	dw OPDC,PEEK16,PUSHRP,PEEKR,MNUM
	dw EQUAL,PEEKR,MSYM,EQUAL,OR
	dw BRANCH0,10H,EXPRN,LIT,0C3H
	dw CPUT,PUT,BRANCH,42H,PEEKR
	dw MRPI,EQUAL,BRANCH0,1AH,CLIND
	dw LIT,20H,SUBTRACT,LIT,9
	dw ISERROR,LIT,0E9H,CPUT,BRANCH,20H,PEEKR,MXYI,EQUAL,BRANCH0,10H,CLIND,CPUT,LIT,0E9H
	dw CPUT,BRANCH,8,LIT,9
	dw ERROR,POPRP,DROP,BRANCH,40H
	dw CONDSEARCH,EQUAL0,LIT,9,ISERROR
	dw CLCOM,ITEM,EQUAL0,LIT,9
	dw ISERROR,OPDC,PEEK16,DUP,MNUM
	dw EQUAL,SWAP,MSYM,EQUAL,OR
	dw EQUAL0,LIT,9,ISERROR,EXPRN
	dw SWAP,LIT,0C2H,OR,CPUT
	dw PUT
	dw ENDF
;
L49D3:
	db 82H
	dc 'JR'
	dw L4900
	dw EXECF
	dw ITEM,OPDC,PEEK16,MREG,EQUAL
	dw BRANCH0,0AH,DROP,ZERO,BRANCH,4,ONE,AND,BRANCH0,0AH
	dw ZERO,SWAP,BRANCH,1CH,CONDSEARCH
	dw EQUAL0,LIT,9,ISERROR,CLCOM
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw ONE,SWAP,OPDC,PEEK16,PUSHRP
	dw PEEKR,MNUM,EQUAL,BRANCH0,0CH
	dw EXPRN,TWO,SUBTRACT,BRANCH,22H
	dw PEEKR,MSYM,EQUAL,BRANCH0,12H
	dw EXPRN,REGPC,PEEK16,SUBTRACT,TWO
	dw SUBTRACT,BRANCH,8,LIT,9
	dw ERROR,POPRP,DROP,PUSHRP,BRANCH0,2EH,DUP,LIT,20H,AND
	dw LIT,9,ISERROR,LIT,20H
	dw OR,CPUT,POPRP,DUP
	dw LIT,7FH,GREATER,LIT,9,ISERROR
	dw CPUT,BRANCH,1AH,LIT,18H
	dw CPUT,POPRP,DUP,LIT,7FH
	dw GREATER,LIT,9,ISERROR,CPUT
	dw ENDF
;
L4AA4:
	db 84H
	dc 'CALL'
	dw L49D3
	dw EXECF
	dw ITEM,OPDC,PEEK16,MREG,EQUAL
	dw BRANCH0,0AH,DROP,ZERO,BRANCH,4,ONE,AND,BRANCH0,0AH
	dw ZERO,SWAP,BRANCH,1CH,CONDSEARCH
	dw EQUAL0,LIT,9,ISERROR,CLCOM
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw ONE,SWAP,OPDC,PEEK16,PUSHRP
	dw PEEKR,MNUM,EQUAL,BRANCH0,8
	dw EXPRN,BRANCH,18H,PEEKR,MSYM
	dw EQUAL,BRANCH0,8,EXPRN,BRANCH,8,LIT,9,ERROR,POPRP
	dw DROP,PUSHRP,BRANCH0,12H
	dw LIT,0C4H,OR,CPUT,POPRP,PUT
	dw BRANCH,0CH,LIT,0CDH,CPUT
	dw POPRP,PUT
	dw ENDF
;
L4B3F:
	db 83H
	dc 'RET'
	dw L4AA4
	dw EXECF
	dw GETCHAR,ALPHA,BRANCH0,20H,ITEM
	dw BRANCH0,4,DROP,CONDSEARCH,EQUAL0
	dw LIT,9,ISERROR,LIT,0C0H
	dw OR,CPUT,BRANCH,8
	dw LIT,0C9H,CPUT
	dw ENDF
;
L4B75:
	db 84H
	dc 'DJNZ'
	dw L4B3F
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MNUM
	dw EQUAL,BRANCH0,0CH,EXPRN,TWO
	dw SUBTRACT,BRANCH,22H,PEEKR,MSYM
	dw EQUAL,BRANCH0,12H,EXPRN,REGPC
	dw PEEK16,SUBTRACT,TWO,SUBTRACT,BRANCH,8,LIT,9,ERROR,POPRP
	dw DROP,LIT,10H,CPUT,CPUT
	dw ENDF
;
L4BD0:
	db 83H
	dc 'ORG'
	dw L4B75
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,DUP,MNUM,EQUAL
	dw SWAP,MSYM,EQUAL,OR,BRANCH0,12H,EXPRN,REGPC,POKE16,ZERO
	dw PF,POKE16,BRANCH,8
	dw LIT,9,ERROR
	dw ENDF
;
L4C10:
	db 85H
	dc 'STORE'
	dw L4BD0
	dw EXECF
	dw AP,APP,POKE16,ITEM,EQUAL0
	dw LIT,9,ISERROR,OPDC,PEEK16
	dw DUP,MNUM,EQUAL,SWAP,MSYM
	dw EQUAL,OR,BRANCH0,12H,EXPRN
	dw AP,POKE16,ONE,PF,POKE16
	dw BRANCH,8,LIT,9,ERROR
	dw ENDF
;
L4C58:
	db 87H
	dc 'ORGHERE'
	dw L4C10
ORGHERE:
	dw EXECF
	dw HERE,REGPC,POKE16,ZERO,PF
	dw POKE16
	dw ENDF
;
L4C72:
	db 89H
	dc 'STOREHERE'
	dw L4C58
STOREHERE:
	dw EXECF
	dw DP,APP,POKE16,ONE,PF
	dw POKE16
	dw ENDF
;
L4C8E:
	db 82H
	dc 'DW'
	dw L4C72
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,DUP,MNUM,EQUAL
	dw SWAP,MSYM,EQUAL,OR,BRANCH0,0AH,EXPRN,PUT,BRANCH,8
	dw LIT,9,ERROR
	dw ENDF
;
L4CC5:
	db 82H
	dc 'DS'
	dw L4C8E
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,DUP,MNUM,EQUAL
	dw SWAP,MSYM,EQUAL,OR,BRANCH0,1CH,EXPRN,PF,PEEK16,BRANCH0,0AH,DUP,APP,PEEK16,ADDMEM
	dw REGPC,ADDMEM,BRANCH,8
	dw LIT,9,ERROR
	dw ENDF
;
L4D0E:
	db 82H
	dc 'DB'
	dw L4CC5
DB_:
	dw EXECF
	dw ITEM,BRANCH0,2AH,OPDC,PEEK16
	dw DUP,MNUM,EQUAL,SWAP,MSYM
	dw EQUAL,OR,BRANCH0,0AH,EXPRN
	dw CPUT,BRANCH,8,LIT,9
	dw ERROR,BRANCH,4CH,GETCHAR
	dw LIT,27H,EQUAL,BRANCH0,3AH,ADVCHAR
	dw GETCHAR,DUP,LIT,27H,SUBTRACT
	dw BRANCH0,22H,DUP,LIT,20H
	dw LESSER,OVER,LIT,7EH,GREATER
	dw OR,LIT,9,ISERROR,CPUT
	dw ADVCHAR,BRANCH,0FFD4H,DROP,ADVCHAR
	dw BRANCH,8,LIT,9,ERROR
	dw ENDF
;
L4D8F:
	db 83H
	dc 'EQU'
	dw L4D0E
	dw EXECF
	dw SYM0,PEEK16,SYMP,PEEK16,EQUAL
	dw LIT,9,ISERROR,ITEM,EQUAL0
	dw LIT,9,ISERROR,OPDC,PEEK16
	dw DUP,MNUM,EQUAL,SWAP,MSYM
	dw EQUAL,OR,EQUAL0,LIT,9
	dw ISERROR,EXPRN,PASS,PEEK16,BRANCH0,8,DROP,BRANCH,0CH,SYMP
	dw PEEK16,PFA,CFA,POKE16
	dw ENDF
;
L4DE7:
	db 83H
	dc 'END'
	dw L4D8F
ASMEND:
	dw EXECF
	dw ZERO,PF,POKE16
	dw ENDF
;
L4DF7:
	db 85H
	dc 'PASS1'
	dw L47F0
PASS1:
	dw EXECF
	dw CLEARSYMTAB1,ZERO,PASS,POKE16,ZERO
	dw PF,POKE16,ASSEMBLER,EXISTS,BRANCH0,1EH,STATE,PEEK16,LESSER,BRANCH0,0CH,LIT,12H,ERROR,BRANCH,6,CFA,EXECUTE,BRANCH,20H
	dw SYMSEARCH,BRANCH0,0CH,LIT,9
	dw ERROR,BRANCH,10H,HERE,PEEK8
	dw PLUS1,MINUS,CONIN,ADDMEM,LABEL
	dw BRANCH,0FFB6H
	dw ENDF
;
L4E57:
	db 85H
	dc 'PASS2'
	dw L4DF7
PASS2:
	dw EXECF
	dw ONE,PASS,POKE16,ASSEMBLER,EXISTS
	dw BRANCH0,1EH,STATE,PEEK16,LESSER
	dw BRANCH0,0CH,LIT,12H,ERROR
	dw BRANCH,6,CFA,EXECUTE,BRANCH,12H,SYMSEARCH,BRANCH0,8,DROP
	dw BRANCH,6,ZERO,ERROR,BRANCH,0FFCAH
	dw ENDF
;
L4EA1:
	db 85H
	dc 'ASSEM'
	dw L338D
	dw EXECF
	dw INDECIMAL,BLK,PEEK16,PUSHRP,CONIN
	dw PEEK16,PUSHRP,BSCR,MULTIPLIC,DUP
	dw PUSHRP,BLK,POKE16,ZERO,CONIN
	dw POKE16,REGPC,PEEK16,PUSHRP,PASS1
	dw POPRP,REGPC,POKE16,POPRP,BLK
	dw POKE16,ZERO,CONIN,POKE16,PASS2
	dw POPRP,CONIN,POKE16,POPRP,BLK
	dw POKE16
	dw ENDF
;
L4EF5:
	db 0C4H
	dc 'CODE'
	dw L4EA1
	dw EXECF
	dw INEXEC,CREATE,ASSEMBLER,ORGHERE,STOREHERE
	dw POKECSP
	dw ENDF
;
L4F0C:
	db 0C2H
	dc ';C'
	dw L4EF5
	dw EXECF
	dw ASMEND,CURRENT,PEEK16,CONTEXT,POKE16
	dw INEXEC,INCSP,SMUDGE
	dw ENDF
;
L4F25:
	db 84H
	dc 'NEXT'
	dw L4DE7
	dw EXECF
	dw LIT,0C3H,CPUT,LIT,ENDLM
	dw PUT
	dw ENDF
;
L4F3C:
	db 85H
	dc '?PAIR'
	dw L4E57
ISPAIR:
	dw EXECF
	dw SUBTRACT,LIT,9,ISERROR
	dw ENDF
;
L4F50:
	db 85H
	dc 'BEGIN'
	dw L4F25
	dw EXECF
	dw REGPC,PEEK16,LIT,7
	dw ENDF
;
L4F64:
	db 85H
	dc 'UNTIL'
	dw L4F50
	dw EXECF
	dw LIT,7,ISPAIR,ITEM,OPDC
	dw PEEK16,MREG,EQUAL,BRANCH0,0AH
	dw DROP,ZERO,BRANCH,4,ONE
	dw AND,BRANCH0,0CH,LIT,9
	dw ERROR,BRANCH,0CH,CONDSEARCH,EQUAL0
	dw LIT,9,ISERROR,LIT,8
	dw XOR,DUP2,LIT,20H,AND
	dw PUSHRP,REGPC,PEEK16,SUBTRACT,TWO
	dw SUBTRACT,DUP,LIT,7FH,GREATER
	dw SWAP,LIT,0FF80H,LESSER,OR
	dw POPRP,OR,BRANCH0,10H
	dw LIT,0C2H,OR,CPUT,PUT,BRANCH,36H,PUSHRP,REGPC,PEEK16,SUBTRACT
	dw TWO,SUBTRACT,POPRP,DUP
	dw LIT,20H,AND,LIT,9,ISERROR
	dw LIT,20H,OR,CPUT,DUP
	dw LIT,7FH,GREATER,LIT,9
	dw ISERROR,CPUT
	dw ENDF
;
L501E:
	db 85H
	dc 'AGAIN'
	dw L4F64
ASM_AGAIN:
	dw EXECF
	dw LIT,7,ISPAIR,DUP,REGPC
	dw PEEK16,SUBTRACT,TWO,SUBTRACT,DUP
	dw LIT,7FH,GREATER,SWAP
	dw LIT,0FF80H,LESSER,OR,BRANCH0,0EH
	dw LIT,0C3H,CPUT,PUT,BRANCH,22H,REGPC,PEEK16,SUBTRACT,TWO
	dw SUBTRACT,LIT,18H,CPUT,DUP
	dw LIT,7FH,GREATER,LIT,9
	dw ISERROR,CPUT
	dw ENDF
;
L507E:
	db 82H
	dc 'IF'
	dw L501E
ASM_IF:
	dw EXECF
	dw REGPC,PEEK16,ITEM,OPDC,PEEK16
	dw MREG,EQUAL,BRANCH0,0AH,DROP
	dw ZERO,BRANCH,4,ONE,AND
	dw BRANCH0,0CH,LIT,9,ERROR
	dw BRANCH,0CH,CONDSEARCH,EQUAL0
	dw LIT,9,ISERROR,LIT,8,XOR
	dw DUP,LIT,20H,AND,BRANCH0,1AH,LIT,0C2H,OR,CPUT
	dw APP,PEEK16,PEEK16,ZERO,PUT
	dw ONE,BRANCH,16H,LIT,20H
	dw OR,CPUT,APP,PEEK16,PEEK16
	dw ZERO,CPUT,ZERO,LIT,8
	dw ENDF
;
L50FF:
	db 85H
	dc 'ENDIF'
	dw L507E
ASM_ENDIF:
	dw EXECF
	dw LIT,8,ISPAIR,SWAP,PUSHRP
	dw BRANCH0,20H,DROP,REGPC,PEEK16
	dw POPRP,PF,PEEK16,BRANCH0,8
	dw POKE16,BRANCH,6,DROP,DROP
	dw BRANCH,3AH,REGPC,PEEK16,SWAP
	dw SUBTRACT,TWO,SUBTRACT,DUP
	dw LIT,7FH,GREATER,OVER,LIT,0FF80H
	dw LESSER,OR,LIT,9,ISERROR
	dw POPRP,PF,PEEK16,BRANCH0,8
	dw POKE8,BRANCH,6,DROP,DROP
	dw ENDF
;
L516F:
	db 84H
	dc 'ELSE'
	dw L50FF
	dw EXECF
	dw LIT,8,ISPAIR,REGPC,PEEK16
	dw LIT,18H,CPUT,APP,PEEK16
	dw PEEK16,ZERO,CPUT,ZERO,PUSHRP
	dw PUSHRP,PUSHRP,LIT,8,ASM_ENDIF
	dw POPRP,POPRP,POPRP,LIT,8
	dw ENDF
;
L51AC:
	db 85H
	dc 'WHILE'
	dw L516F
	dw EXECF
	dw ASM_IF,TWO,PLUS
	dw ENDF
;
L51BE:
	db 86H
	dc 'REPEAT'
	dw L51AC
	dw EXECF
	dw PUSHRP,PUSHRP,PUSHRP,PUSHRP,ASM_AGAIN
	dw POPRP,POPRP,POPRP,POPRP,TWO
	dw SUBTRACT,ASM_ENDIF
	dw ENDF
;
L51E3:
	db 83H
	dc 'RST'
	dw L51BE
	dw EXECF
	dw GETCHAR,DUP,NUM,EQUAL0
	dw LIT,9,ISERROR,LIT,30H,SUBTRACT
	dw ADVCHAR,GETCHAR,DUP,NUM,EQUAL0
	dw LIT,9,ISERROR,LIT,30H
	dw SUBTRACT,ADVCHAR,SWAP,LIT,10H
	dw MULTIPLIC,PLUS,GETCHAR,LIT,48H
	dw SUBTRACT,LIT,9,ISERROR,ADVCHAR
	dw DUP,LIT,0FFC7H,AND
	dw LIT,9,ISERROR,LIT,0C7H,OR
	dw CPUT
	dw ENDF
;
L5249:
	db 82H
	dc 'IN'
	dw L51E3
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,MREG,SUBTRACT
	dw LIT,9,ISERROR,DUP,LIT,7
	dw EQUAL,BRANCH0,72H,DROP,CLCOM
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MNUMI
	dw EQUAL,PEEKR,MSYMI,EQUAL,OR
	dw BRANCH0,10H,EXPRN,CLIND,DB_
	dw CPUT,CPUT,BRANCH,36H,PEEKR
	dw MREGI,EQUAL,BRANCH0,26H,CLIND
	dw ONE,SUBTRACT,LIT,9,ISERROR
	dw LIT,0EDH,CPUT,LIT,7
	dw TIMES8,LIT,40H,OR,CPUT
	dw BRANCH,8,LIT,9,ERROR
	dw POPRP,DROP,BRANCH,38H,CLCOM
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,MREGI,SUBTRACT
	dw LIT,9,ISERROR,CLIND,ONE,SUBTRACT
	dw LIT,9,ISERROR,LIT,0EDH
	dw CPUT,TIMES8,LIT,40H,OR
	dw CPUT
	dw ENDF
;
L531C:
	db 83H
	dc 'OUT'
	dw L5249
	dw EXECF
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MNUMI
	dw EQUAL,PEEKR,MSYMI,EQUAL,OR
	dw BRANCH0,38H,EXPRN,CLIND,CLCOM
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,MREG,SUBTRACT
	dw LIT,9,ISERROR,LIT,7,SUBTRACT
	dw LIT,9,ISERROR,LIT,0D3H
	dw CPUT,CPUT,BRANCH,4CH,PEEKR
	dw MREGI,EQUAL,BRANCH0,3CH,CLIND
	dw ONE,SUBTRACT,LIT,9,ISERROR
	dw CLCOM,ITEM,EQUAL0,LIT,9
	dw ISERROR,OPDC,PEEK16,MREG,SUBTRACT
	dw LIT,9,ISERROR,LIT,0EDH
	dw CPUT,TIMES8,LIT,41H,OR
	dw CPUT,BRANCH,8,LIT,9
	dw ERROR,POPRP,DROP
	dw ENDF
;
L53CC:
	db 86H
	dc 'Z80ADD'
	dw L4F3C
	dw EXECF
	dw BUILDS,POKED8,DOES
Z80ADD:
	dw PEEK8,ITEM
	dw EQUAL0,LIT,9,ISERROR,OPDC
	dw PEEK16,MREG,EQUAL,BRANCH0,0BAH
	dw LIT,7,SUBTRACT,LIT,9
	dw ISERROR,CLCOM,ITEM,EQUAL0
	dw LIT,9,ISERROR,OPDC,PEEK16,PUSHRP
	dw PEEKR,MREG,EQUAL,BRANCH0,10H
	dw LIT,80H,OR,OR,CPUT
	dw BRANCH,7CH,PEEKR,MNUM,EQUAL
	dw PEEKR,MSYM,EQUAL,OR,BRANCH0,14H,EXPRN,SWAP,LIT,0C6H
	dw OR,CPUT,CPUT,BRANCH,58H
	dw PEEKR,MRPI,EQUAL,BRANCH0,1CH
	dw CLIND,LIT,20H,SUBTRACT
	dw LIT,9,ISERROR,LIT,86H,OR
	dw CPUT,BRANCH,34H,PEEKR,MXYI
	dw EQUAL,BRANCH0,24H,CLPLUS,SYMNUMS
	dw EQUAL0,LIT,9,ISERROR,CLIND
	dw SWAP,CPUT,SWAP,LIT,86H
	dw OR,CPUT,CPUT,BRANCH,8
	dw LIT,9,ERROR,POPRP,DROP
	dw BRANCH,136H,OPDC,PEEK16,MRP
	dw EQUAL,BRANCH0,0A2H,LIT,20H
	dw SUBTRACT,LIT,9,ISERROR,CLCOM
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MRP
	dw EQUAL,BRANCH0,6CH,DUP
	dw LIT,6,EQUAL,LIT,9,ISERROR
	dw SWAP,PUSHRP,PEEKR,EQUAL0,BRANCH0,0EH,LIT,9,OR,CPUT
	dw BRANCH,3EH,PEEKR,LIT,8
	dw EQUAL,BRANCH0,14H,LIT,0EDH
	dw CPUT,LIT,4AH,OR,CPUT
	dw BRANCH,20H,PEEKR,LIT,18H
	dw EQUAL,BRANCH0,14H,LIT,0EDH
	dw CPUT,LIT,42H,OR,CPUT
	dw BRANCH,2,POPRP,DROP,BRANCH,8,LIT,9,ERROR,POPRP
	dw DROP,BRANCH,8AH,OPDC,PEEK16
	dw MXY,SUBTRACT,LIT,9,ISERROR
	dw SWAP,LIT,9,ISERROR,CLCOM
	dw ITEM,EQUAL0,LIT,9,ISERROR
	dw OPDC,PEEK16,PUSHRP,PEEKR,MRP
	dw EQUAL,BRANCH0,2EH,DUP
	dw LIT,6,EQUAL,LIT,9,ISERROR
	dw DUP,LIT,20H,EQUAL
	dw LIT,9,ISERROR,SWAP,CPUT
	dw LIT,9,OR,CPUT,BRANCH,28H
	dw PEEKR,MXY,EQUAL,BRANCH0,18H
	dw OVER,SUBTRACT,LIT,9,ISERROR
	dw CPUT,LIT,29H,CPUT,BRANCH,8,LIT,9,ERROR,POPRP
	dw DROP
	dw ENDF
;
L55E3:
	db 83H
	dc 'ADD'
	dw L531C
	dw ATIVATE
	dw Z80ADD
	db 00H
;
L55EE:
	db 83H
	dc 'ADC'
	dw L55E3
	dw ATIVATE
	dw Z80ADD
	db 08H
;
L55F9:
	db 83H
	dc 'SBC'
	dw L55EE
	dw ATIVATE
	dw Z80ADD
	db 18H
;
L5604:
	db 86H
	dc 'Z80ALG'
	dw L53CC
	dw EXECF
	dw BUILDS,POKED8,DOES
Z80ALG:
	dw PEEK8,ITEM
	dw EQUAL0,LIT,9,ISERROR,OPDC
	dw PEEK16,PUSHRP,PEEKR,MREG,EQUAL
	dw BRANCH0,10H,LIT,80H,OR
	dw OR,CPUT,BRANCH,7CH,PEEKR
	dw MNUM,EQUAL,PEEKR,MSYM,EQUAL
	dw OR,BRANCH0,14H,EXPRN,SWAP
	dw LIT,0C6H,OR,CPUT,CPUT
	dw BRANCH,58H,PEEKR,MRPI,EQUAL
	dw BRANCH0,1CH,CLIND,LIT,20H
	dw SUBTRACT,LIT,9,ISERROR
	dw LIT,86H,OR,CPUT,BRANCH,34H
	dw PEEKR,MXYI,EQUAL,BRANCH0,24H
	dw CLPLUS,SYMNUMS,EQUAL0,LIT,9
	dw ISERROR,CLIND,SWAP,CPUT,SWAP
	dw LIT,86H,OR,CPUT,CPUT
	dw BRANCH,8,LIT,9,ERROR
	dw POPRP,DROP
	dw ENDF
;
L56BF:
	db 83H
	dc 'SUB'
	dw L55F9
	dw ATIVATE
	dw Z80ALG
	db 10H
;
L56CA:
	db 83H
	dc 'AND'
	dw L56BF
	dw ATIVATE
	dw Z80ALG
	db 20H
;
L56D5:
	db 82H
	dc 'OR'
	dw L56CA
	dw ATIVATE
	dw Z80ALG
	db 30H
;
L56DF:
	db 83H
	dc 'XOR'
	dw L56D5
	dw ATIVATE
	dw Z80ALG
	db 28H
;
L56EA:
	db 82H
	dc 'CP'
	dw L56DF
	dw ATIVATE
	dw Z80ALG
	db 38H
;
L56F4:
	db 0C8H
	dc 'FLOATING'
	dw L4F0C
	dw ATIVATE
	dw VOCABULARY
	dw 0A081H
	dw L5F83
FLOATING:
	dw CONDITS1
;
L5709:	EX DE,HL
	PUSH HL
	LD HL,0000H
	AND A
	SBC HL,DE
	POP DE
	EXX
	EX DE,HL
	PUSH HL
	LD HL,0000H
	SBC HL,DE
	POP DE
	EXX
	RET
L571D:	PUSH AF
	EXX
	LD A,H
	OR L
	EXX
	OR H
	OR L
	JR Z,L575C
	LD A,H
	OR L
	EXX
	OR L
	EXX
	JR NZ,L573B
	EXX
	LD A,H
	EXX
	CP 80H
	JR NZ,L573B
	EXX
	SRA	H
	EXX
	INC B
	POP AF
	RET
L573B:	EXX
	LD A,H
	EXX
	AND A
	PUSH AF
	CALL M,L5709
L5743:	EXX
	BIT 6,H
	EXX
	JR NZ,L5756
	SLA	L
	RL	H
	EXX
	RL	L
	RL	H
	EXX
	DEC B
	JR L5743
L5756:	POP AF
	CALL M,L5709
	POP AF
	RET
L575C:	LD B,00H
	POP AF
	RET
L5760:	PUSH AF
	LD A,0C0H
	EXX
	OR H
	AND L
	EXX
	AND H
	AND L
	INC A
	JR Z,L5774
	INC HL
	LD A,H
	OR L
	JR NZ,L5774
	EXX
	INC HL
	EXX
L5774:	POP AF
	RET
L5776:	DEC A
	JR Z,L5785
	EXX
	SRA	H
	RR L
	EXX
	RR H
	RR L
	JR L5776
L5785:	EXX
	SRA	H
	RR L
	EXX
	RR H
	RR L
	CALL C,L5760
	RET
L5793:	EXX
	LD A,D
	OR E
	EXX
	OR D
	OR E
	RET Z
	EXX
	LD A,H
	OR L
	EXX
	OR H
	OR L
	JR NZ,L57A8
	EXX
	EX DE,HL
	EXX
	EX DE,HL
	LD B,C
	RET
L57A8:	LD A,B
	CP C
	JR Z,L57E4
	NEG
	ADD A,C
	JP P,L57B4
	NEG
L57B4:	CP 1FH
	JR C,L57CA
	LD A,B
	XOR C
	JP M,L57C1
	LD A,B
	SUB C
	JR L57C2
L57C1:	LD A,B
L57C2:	AND A
	RET P
	EXX
	EX DE,HL
	EXX
	EX DE,HL
	LD B,C
	RET
L57CA:	PUSH AF
	LD A,B
	XOR C
	JP M,L57D4
	LD A,B
	SUB C
	JR L57D5
L57D4:	LD A,B
L57D5:	AND A
	JP M,L57DF
	EXX
	EX DE,HL
	EXX
	EX DE,HL
	JR L57E0
L57DF:	LD B,C
L57E0:	POP AF
	CALL L5776
L57E4:	CALL L57E8
	RET
L57E8:	ADD HL,DE
	EXX
	ADC HL,DE
	EXX
	JP PO,L57FE
	EXX
	RR H
	RR L
	EXX
	RR H
	RR L
	INC B
	CALL C,L5760
L57FE:	CALL L571D
	RET
L5802:	LD E,B
	LD D,00H
	BIT 7,E
	JR Z,L580A
	DEC D
L580A:	POP BC
	PUSH HL
	EXX
	PUSH HL
	EXX
	PUSH DE
	JP ENDLM
L5813:	PUSH AF
	LD A,B
	LD B,C
	LD C,A
	POP AF
	EXX
	EX DE,HL
	EXX
	EX DE,HL
	RET
L581D:	EXX
	LD A,H
	EXX
	AND A
	CALL M,L5709
	RET
L5825:	EXX
	LD A,D
	EXX
	AND A
	RET P
	CALL L5813
	CALL L581D
	CALL L5813
	RET
L5834:	EXX
	LD A,D
	XOR H
	EXX
	PUSH AF
	CALL L581D
	CALL L5825
	CALL L5847
	POP AF
	CALL M,L5709
	RET
L5847:	LD A,B
	ADD A,C
	PUSH AF
	EXX
	LD B,H
	LD C,L
	LD HL,0000H
	EXX
	LD B,H
	LD C,L
	LD HL,0000H
	LD A,20H
L5858:	ADD HL,HL
	EXX
	ADC HL,HL
	EXX
	EX DE,HL
	ADC HL,HL
	EX DE,HL
	EXX
	EX DE,HL
	ADC HL,HL
	EX DE,HL
	EXX
	JR NC,L587A
	ADD HL,BC
	EXX
	ADC HL,BC
	EXX
	JR NC,L587A
	INC DE
	PUSH AF
	LD A,D
	OR E
	JR NZ,L5879
	EXX
	INC DE
	EXX
L5879:	POP AF
L587A:	DEC A
	JR NZ,L5858
	POP AF
	LD B,A
	EXX
	RL	H
	EXX
	RL	E
	RL	D
	EXX
	RL	E
	RL	D
	BIT 7,H
	EX DE,HL
	EXX
	EX DE,HL
	CALL NZ,L5760
	CALL L571D
	RET
L5898:	PUSH AF
	EXX
	LD A,H
	EXX
	AND A
	PUSH AF
	CALL M,L5709
L58A1:	LD A,B
	CP 1FH
	JR Z,L58C2
	JR C,L58B5
	DEC B
	SLA	L
	RL	H
	EXX
	RL	L
	RL	H
	EXX
	JR L58A1
L58B5:	INC B
	EXX
	SRA	H
	RR L
	EXX
	RR H
	RR L
	JR L58A1
L58C2:	POP AF
	CALL M,L5709
	POP AF
	RET
L58C8:	POP DE
	EXX
	POP HL
	EXX
	POP HL
	PUSH BC
	LD A,E
	LD B,1FH
	CALL L571D
	AND A
	JR Z,L5902
	JP M,L58EE
L58DA:	LD DE,0000H
	EXX
	LD DE,5000H
	EXX
	LD C,04H
	PUSH AF
	CALL L5834
	POP AF
	DEC A
	JR NZ,L58DA
	JR L5902
L58EE:	NEG
L58F0:	LD DE,0000H
	EXX
	LD DE,5000H
	EXX
	LD C,04H
	PUSH AF
	CALL L5977
	POP AF
	DEC A
	JR NZ,L58F0
L5902:	JP L5802
L5905:	EXX
	LD A,H
	OR L
	EXX
	OR H
	OR L
	JR NZ,L5918
	LD B,00H
	EXX
	LD HL,0000H
	EXX
	LD HL,0000H
	RET
L5918:	EXX
	LD A,D
	OR E
	EXX
	OR D
	OR E
	JR NZ,L592B
	LD B,07FH
	EXX
	LD HL,7FFFH
	EXX
	LD HL,0FFFFH
	RET
L592B:	LD A,B
	SUB C
	INC A
	PUSH AF
	XOR A
	LD C,A
	LD A,1FH
L5933:	AND A
	SBC HL,DE
	EXX
	SBC HL,DE
	EXX
	JR NC,L5942
	ADD HL,DE
	EXX
	ADC HL,DE
	EXX
	SCF
L5942:	CCF
	RL	C
	RL	B
	EXX
	RL	C
	RL	B
	EXX
	SLA	L
	RL	H
	EXX
	RL	L
	RL	H
	EXX
	DEC A
	JR NZ,L5933
	AND A
	SBC HL,DE
	EXX
	SBC HL,DE
	EXX
	RLA
	LD H,B
	LD L,C
	EXX
	LD H,B
	LD L,C
	EXX
	LD C,A
	POP AF
	LD B,A
	RR C
	CALL NC,L5760
	CALL L571D
	RET
L5974:	CALL L5813
L5977:	EXX
	LD A,D
	XOR H
	EXX
	PUSH AF
	CALL L581D
	CALL L5825
	CALL L5905
	POP AF
	CALL M,L5709
	RET
L598A:	LD C,04H
	EXX
	LD DE,5000H
	EXX
	LD DE,0000H
	RET
L5995:	PUSH AF
L5996:	LD A,B
	AND A
	JP P,L59AE
	LD C,0AH
	EXX
	LD DE,7D00H
	EXX
	LD DE,0000H
	CALL L5847
	POP AF
	ADD A,0FDH
	PUSH AF
	JR L5996
L59AE:	LD A,B
	CP 1BH
	JR NC,L59BE
	CALL L598A
	CALL L5847
	POP AF
	DEC A
	PUSH AF
	JR L59AE
L59BE:	LD C,1BH
	EXX
	LD DE,0A0A1H
	EXX
	LD DE,0F000H
	PUSH HL
	EXX
	PUSH HL
	EXX
	PUSH BC
	CALL L5793
	EXX
	LD A,H
	EXX
	AND A
	POP BC
	EXX
	POP HL
	EXX
	POP HL
	JP P,L59E7
	CALL L598A
	CALL L5847
	POP AF
	DEC A
	PUSH AF
	JR L59BE
L59E7:	POP AF
	RET
L59E9:	PUSH AF
L59EA:	LD A,B
	CP '1'
	JR C,L5A02
	LD C,0AH
	EXX
	LD DE,7D00H
	EXX
	LD DE,0000H
	CALL L5905
	POP AF
	ADD A,03H
	PUSH AF
	JR L59EA
L5A02:	LD A,B
	CP 1FH
	JR C,L5A12
	CALL L598A
	CALL L5905
	POP AF
	INC A
	PUSH AF
	JR L5A02
L5A12:	LD C,1EH
	EXX
	LD DE,88CAH
	EXX
	LD DE,6C00H
	PUSH HL
	EXX
	PUSH HL
	EXX
	PUSH BC
	CALL L5793
	EXX
	LD A,H
	EXX
	AND A
	POP BC
	EXX
	POP HL
	EXX
	POP HL
	JP M,L5A3B
	CALL L598A
	CALL L5905
	POP AF
	INC A
	PUSH AF
	JR L5A12
L5A3B:	POP AF
	RET
L5A3D:	EXX
	LD A,H
	OR L
	EXX
	OR H
	OR L
	JR Z,L5A72
	EXX
	LD A,H
	EXX
	AND A
	PUSH AF
	CALL L581D
	LD A,08H
	CALL L5995
	CALL L59E9
	PUSH AF
	LD C,03H
	EXX
	LD DE,5000H
	EXX
	LD DE,0000H
	CALL L5793
	POP AF
	CALL L59E9
	CALL L5898
	LD B,A
	POP AF
	CALL M,L5709
	JP L5802
L5A72:	LD B,00H
	JP L5802
;
L5A77:
	db 82H
	dc 'F+'
	dw OUTDIC
	dw $+2
	EXX
	POP BC
	LD A,C
	POP HL
	EXX
	POP HL
	EXX
	POP BC
	LD B,A
	POP DE
	EXX
	POP DE
	PUSH BC
	EXX
	PUSH BC
	EXX
	POP BC
	CALL L5793
	JP L5802
;
L5A95:
	db 82H
	dc 'F*'
	dw L5A77
	dw L5A9C
L5A9C:	EXX
	POP BC
	LD A,C
	POP HL
	EXX
	POP HL
	EXX
	POP BC
	LD B,A
	POP DE
	EXX
	POP DE
	PUSH BC
	EXX
	PUSH BC
	EXX
	POP BC
	CALL L5834
	JP L5802
;
L5AB3:
	db 87H
	dc 'INTEGER'
	dw L5A95
	dw $+2
	POP DE
	EXX
	POP HL
	EXX
	POP HL
	PUSH BC
	LD B,E
	CALL L5898
	POP BC
	PUSH HL
	EXX
	PUSH HL
	EXX
	JP ENDLM
;
L5AD1:
	db 85H
	dc 'FLOAT'
	dw L5AB3
FLOAT:
	dw $+2
	JP L58C8
;
L5ADE:
	db 82H
	dc 'F/'
	dw L5AD1
	dw $+2
	EXX
	POP BC
	LD A,C
	POP HL
	EXX
	POP HL
	EXX
	POP BC
	LD B,A
	POP DE
	EXX
	POP DE
	PUSH BC
	EXX
	PUSH BC
	EXX
	POP BC
	CALL L5974
	JP L5802
;
L5AFC:
	db 84H
	dc '(F.)'
	dw L5ADE
FLT_IMP1:
	dw $+2
	POP DE
	EXX
	POP HL
	EXX
	POP HL
	PUSH BC
	LD B,E
	JP L5A3D
;
L5B0F:
	db 82H
	dc 'F-'
	dw L5AFC
FLT_SUB:
	dw $+2
	EXX
	POP BC
	LD A,C
	POP HL
	EXX
	POP HL
	EXX
	POP BC
	LD B,A
	POP DE
	EXX
	POP DE
	PUSH BC
	EXX
	PUSH BC
	EXX
	POP BC
	CALL L5709
	CALL L5793
	JP L5802
;
L5B30:
	db 82H
	dc 'F!'
	dw L5B0F
	dw $+2
	POP HL
	POP DE
	LD (HL),E
	INC HL
	LD (HL),D
	INC HL
	POP DE
	LD (HL),E
	INC HL
	LD (HL),D
	INC HL
	POP DE
	LD (HL),E
	INC HL
	LD (HL),D
	JP ENDLM
;
L5B49:
	db 82H
	dc 'F@'
	dw L5B30
FPEEK:
	dw $+2
	POP HL
	LD DE,0005H
	ADD HL,DE
	LD D,(HL)
	DEC HL
	LD E,(HL)
	DEC HL
	PUSH DE
	LD D,(HL)
	DEC HL
	LD E,(HL)
	DEC HL
	PUSH DE
	LD D,(HL)
	DEC HL
	LD E,(HL)
	PUSH DE
	JP ENDLM
;
L5B66:
	db 85H
	dc 'FSWAP'
	dw L5B49
FSWAP:
	dw $+2
	POP DE
	POP HL
	EXX
	POP HL
	POP DE
	POP BC
	EX (SP),HL
	EXX
	PUSH HL
	PUSH DE
	EXX
	PUSH HL
	PUSH BC
	PUSH DE
	EXX
	JP ENDLM
;
L5B82:
	db 83H
	dc 'FPL'
	dw L5B66
FPL:
	dw VAR
	dw 0FFFFH
;
L5B8C:
	db 88H
	dc '(NUMBER)'
	dw L5B82
FNUMBER1:
	dw EXECF
	dw PLUS1,DUP,PUSHRP,PEEK8,BASE
	dw PEEK16,DIGIT,BRANCH0,3CH,SWAP
	dw BASE,PEEK16,UTIMES,DROP,ROT
	dw BASE,PEEK16,UTIMES,DPLUS,DPL
	dw PEEK16,PLUS1,BRANCH0,8,ONE
	dw DPL,ADDMEM,FPL,PEEK16,PLUS1
	dw BRANCH0,8,ONE,FPL,ADDMEM
	dw POPRP,BRANCH,0FFB6H,POPRP
	dw ENDF
;
L5BE9:
	db 85H
	dc 'PUNCT'
	dw L5B8C
PUNCT:
	dw EXECF
	dw DUP,PEEK8,DUP,LIT,2EH
	dw EQUAL,BRANCH0,16H,DROP,ZERO
	dw DPL,POKE16,LIT,-1,FPL
	dw POKE16,BRANCH,2EH,LIT,2CH
	dw EQUAL,BASE,PEEK16,LIT,0AH
	dw EQUAL,AND,BRANCH0,14H
	dw LIT,-1,DPL,POKE16,ZERO,FPL
	dw POKE16,BRANCH,6,ZERO,ERROR
	dw ENDF
;
L5C45:
	db 85H
	dc 'EXPON'
	dw L5BE9
EXPON:
	dw EXECF
	dw FPL,PEEK16,LIT,-1,SUBTRACT
	dw BRANCH0,60H,LIT,40H,FPL
	dw ADDMEM,ZERO,ZERO,ROT,DUP
	dw PLUS1,PEEK8,LIT,2DH,EQUAL
	dw DUP,PUSHRP,PLUS,DPL,PEEK16
	dw PUSHRP,FPL,PEEK16,PUSHRP,FNUMBER1
	dw POPRP,FPL,POKE16,POPRP,DPL
	dw POKE16,PEEK8,BL,SUBTRACT,ZERO
	dw ISERROR,DROP,POPRP,BRANCH0,4
	dw MINUS,FPL,PEEK16,LIT,40H
	dw SUBTRACT,SUBTRACT,BRANCH,6,DROP
	dw ZERO
	dw ENDF
;
L5CC1:
	db 86H
	dc 'NUMBER'
	dw L5C45
FNUMBER2:
	dw EXECF
	dw ZERO,ZERO,ROT,DUP,PLUS1
	dw PEEK8,LIT,2DH,EQUAL,DUP
	dw PUSHRP,PLUS,LIT,-1,DPL
	dw POKE16,LIT,-1,FPL,POKE16
	dw FNUMBER1,DUP,PEEK8,LIT,45H
	dw EQUAL,BASE,PEEK16,LIT,0AH
	dw EQUAL,AND,DUP,PUSHRP,BRANCH0,16H,FPL,PEEK16,LIT,-1
	dw EQUAL,BRANCH0,8,ZERO,FPL
	dw POKE16,DUP,PEEK8,BL,EQUAL
	dw POPRP,OR,EQUAL0,BRANCH0,8
	dw PUNCT,BRANCH,0FFB6H,POPRP,SWAP
	dw PUSHRP,BRANCH0,4,DMINUS,POPRP
	dw EXPON
	dw ENDF
;
L5D52:
	db 0C8H
	dc 'FLITERAL'
	dw L5CC1
FLITERAL:
	dw EXECF
	dw STATE,PEEK16,BRANCH0,0CH,SWAP
	dw ROT,LITERAL,LITERAL,LITERAL
	dw ENDF
;
L5D73:
	db 89H
	dc 'INTERPRET'
	dw L5D52
FINTERPRET:
	dw EXECF
	dw EXISTS,BRANCH0,1EH,STATE,PEEK16
	dw LESSER,BRANCH0,0AH,CFA,POKED16
	dw BRANCH,6,CFA,EXECUTE,INSTACK
	dw BRANCH,32H,HERE,FNUMBER2,FPL
	dw PEEK16,PLUS1,BRANCH0,0AH,FLOAT
	dw FLITERAL,BRANCH,1AH,DPL,PEEK16
	dw PLUS1,BRANCH0,0AH,DROP,DLITERAL
	dw BRANCH,8,DROP,DROP,LITERAL
	dw INSTACK,BRANCH,0FFACH
	dw ENDF
;
L5DD9:
	db 86H
	dc '-ZEROS'
	dw L5D73
MZEROS:
	dw EXECF
	dw DUP2,PLUS,ONE,SUBTRACT,PEEK8
	dw LIT,30H,EQUAL,BRANCH0,2CH
	dw DUP,ZERO,DODO,DUP2,PLUS
	dw ONE,SUBTRACT,PEEK8,LIT,30H
	dw SUBTRACT,BRANCH0,0AH,LEAVE,PLUS1
	dw BRANCH,6,ONE,SUBTRACT,DOLOOP
	dw 0FFDEH
	dw ENDF
;
L5E24:
	db 86H
	dc 'OUTPUT'
	dw L5DD9
OUTPUT:
	dw EXECF
	dw SWAP,OVER,DABS,ININUM,BASE
	dw PEEK16,MEMDIVMOD,ROT,DROP
	dw LIT,7,ZERO,DODO,GENNUM,DOLOOP
	dw 0FFFCH,LIT,2CH,HOLD,NUM_S
	dw SIGN,ENDNUM,MZEROS,TYPE
	dw ENDF
;
L5E61:
	db 82H
	dc 'F.'
	dw L5E24
	dw EXECF
	dw FLT_IMP1,PUSHRP,OUTPUT,POPRP,PRINT
	db 01H,'E'
	dw IMPNUM
	dw ENDF
;
L5E78:
	db 84H
	dc 'FABS'
	dw L5E61
	dw EXECF
	dw PUSHRP,DABS,POPRP
	dw ENDF
;
L5E89:
	db 83H
	dc 'F0='
	dw L5E78
	dw EXECF
	dw DROP,OR,EQUAL0
	dw ENDF
;
L5E99:
	db 83H
	dc 'F0<'
	dw L5E89
FLESS0:
	dw EXECF
	dw DROP,SWAP,DROP,LESS0
	dw ENDF
;
L5EAB:
	db 84H
	dc 'PICK'
	dw L5E99
PICK:
	dw EXECF
	dw TWO,MULTIPLIC,PEEKSP,PLUS,PEEK16
	dw ENDF
;
L5EC0:
	db 84H
	dc 'FDUP'
	dw L5EAB
	dw EXECF
	dw THREE,PICK,THREE,PICK,THREE
	dw PICK
	dw ENDF
;
L5ED7:
	db 85H
	dc 'FDROP'
	dw L5EC0
FDROP:
	dw EXECF
	dw DROP,DROP,DROP
	dw ENDF
;
L5EE9:
	db 85H
	dc 'FOVER'
	dw L5ED7
FOVER:
	dw EXECF
	dw LIT,6,PICK,LIT,6
	dw PICK,LIT,6,PICK
	dw ENDF
;
L5F07:
	db 85H
	dc 'F2DUP'
	dw L5EE9
	dw EXECF
	dw FOVER,FOVER
	dw ENDF
;
L5F17:
	db 82H
	dc 'F<'
	dw L5F07
FMENOR:
	dw EXECF
	dw TWO,PICK,LIT,6,PICK
	dw XOR,LESS0,BRANCH0,0AH,FDROP
	dw FLESS0,BRANCH,6,FLT_SUB,FLESS0
	dw ENDF
;
L5F3E:
	db 82H
	dc 'F>'
	dw L5F17
FMAIOR:
	dw EXECF
	dw FSWAP,FMENOR
	dw ENDF
;
L5F4B:
	db 83H
	dc 'F>='
	dw L5F3E
	dw EXECF
	dw FMENOR,EQUAL0
	dw ENDF
;
L5F59:
	db 83H
	dc 'F<='
	dw L5F4B
	dw EXECF
	dw FMAIOR,EQUAL0
	dw ENDF
;
L5F67:
	db 89H
	dc 'FCONSTANT'
	dw L5F59
	dw EXECF
	dw BUILDS,POKED16,POKED16,POKED16,DOES
	dw FPEEK
	dw ENDF
;
L5F83:
	db 89H
	dc 'FVARIABLE'
	dw L5F67
	dw EXECF
	dw BUILDS,POKED16,POKED16,POKED16,DOES
	dw ENDF
;
L5F9D:
	db 84H
	dc 'DFCB'
	dw L56F4
DFCB:
	dw CONST
	dw 005CH
;
L5FA8:
	db 85H
	dc 'DBUFF'
	dw L5F9D
	dw CONST
	dw 0080H
;
L5FB4:
	db 83H
	dc 'DMA'
	dw L5FA8
DMA:
	dw VAR
	dw 5F80H
;
L5FBE:
	db 87H
	dc 'RECNUMB'
	dw L5FB4
RECNUMB:
	dw VAR
	dw 00BDH
;
L5FCC:
	db 85H
	dc 'READS'
	dw L5FBE
	dw EXECF
	dw DMA,PEEK16,SENDDMA,FCB,PEEK16
	dw XDOSPARAM,POKE16,READSEQ,XDOSFUNC,POKE16
	dw XDOSCALL,LIT,80H,DMA,ADDMEM
	dw ENDF
;
L5FF6:
	db 85H
	dc 'READR'
	dw L5FCC
	dw EXECF
	dw RECNUMB,PEEK16,RANREC,POKE16,ZERO
	dw RANOVF,POKE8,DMA,PEEK16,SENDDMA
	dw FCB,PEEK16,XDOSPARAM,POKE16,READRAN
	dw XDOSFUNC,POKE16,XDOSCALL,LIT,80H
	dw DMA,ADDMEM,ONE,RECNUMB,ADDMEM
	dw ENDF
;
L6034:
	db 86H
	dc 'WRITES'
	dw L5FF6
	dw EXECF
	dw DMA,PEEK16,SENDDMA,FCB,PEEK16
	dw XDOSPARAM,POKE16,WRITESEQ,XDOSFUNC,POKE16
	dw XDOSCALL,LIT,80H,DMA,ADDMEM
	dw ENDF
;
L605F:
	db 86H
	dc 'WRITER'
	dw L6034
WRITER:
	dw EXECF
	dw RECNUMB,PEEK16,RANREC,POKE16,ZERO
	dw RANOVF,POKE8,DMA,PEEK16,SENDDMA
	dw FCB,PEEK16,XDOSPARAM,POKE16,WRITERAN
	dw XDOSFUNC,POKE16,XDOSCALL,LIT,80H
	dw DMA,ADDMEM,ONE,RECNUMB,ADDMEM
	dw ENDF
;
L609E:
	db 86H
	dc 'RANERR'
	dw L605F
RANERR:
	dw EXECF
	dw XDOSPARAM,PEEK8,PUSHRP,PEEKR,ONE
	dw EQUAL,BRANCH0,20H,PRINT
	db 17H,'Reading unwritten data '
	dw POKESP,QUIT,PEEKR,THREE,EQUAL
	dw BRANCH0,25H,PRINT
	db 1CH,'Cannot close current extent '
	dw POKESP,QUIT,PEEKR,LIT,4
	dw EQUAL,BRANCH0,22H,PRINT
	db 19H,'Seeking unwritten extent '
	dw POKESP,QUIT,PEEKR,LIT,5
	dw EQUAL,BRANCH0,18H,PRINT
	db 0FH,'Directory full '
	dw POKESP,QUIT,PEEKR,LIT,6
	dw EQUAL,BRANCH0,1FH,PRINT
	db 16H,'Seek past end of disc '
	dw POKESP,QUIT,POPRP,DROP
	dw ENDF
;
L6181:
	db 87H
	dc 'SETCOLD'
	dw L609E
SETCOLD:
	dw EXECF
	dw FORTH,DEFINITIONS,LATEST,LIT,0CH
	dw ADORIGIN,POKE16,HERE,LIT,1CH
	dw ADORIGIN,POKE16,HERE,LIT,1EH
	dw ADORIGIN,POKE16,VOCLINK,PEEK16
	dw LIT,20H,ADORIGIN,POKE16,HERE,FENCE
	dw POKE16
	dw ENDF
;
L61C3:
	db 87H
	dc 'COMFILE'
	dw L6181
COMFILE:
	dw EXECF
	dw LIT,ENTRY,DMA,POKE16,ZERO
	dw RECNUMB,POKE16,WRITER,RANERR,HERE
	dw DMA,PEEK16,ULESSER,BRANCH0,0FFF2H
	dw ENDF
;
L61EF:
	db 8AH
	dc 'CREATEFILE'
	dw L61C3
CREATEFILE:
	dw EXECF
	dw DFCB,FCB,POKE16,CR,PRINT
	db 0FH,'Enter filename '
	dw QUERY,SETFCB,FILENAME,PEEK8,BL
	dw EQUAL,BRANCH0,6,POKESP,QUIT
	dw OPENF,XDOSPARAM,PEEK8,LIT,0FFH
	dw SUBTRACT,BRANCH0,1BH,CR,PRINT
	db 0CH,'File exists '
	dw POKESP,QUIT,BRANCH,31H,MAKEF
	dw XDOSPARAM,PEEK8,LIT,0FFH,EQUAL
	dw BRANCH0,21H,PRINT
	db 18H,'No more directory space '
	dw POKESP,QUIT
	dw ENDF
;
L6286:
	db 87H
	dc 'SAVESYS'
	dw L61EF
	dw EXECF
	dw VMF1,FCB,POKE16,OPENFLAG,PEEK16
	dw BRANCH0,2BH,PRINT
	db 22H,'Cannot save while block file open '
	dw POKESP,QUIT,SETCOLD,CREATEFILE,COMFILE
	dw CLOSEF,XDOSPARAM,PEEK8,LIT,0FFH
	dw EQUAL,BRANCH0,1CH,CR,PRINT
	db 15H,'Unable to close file '
	dw ENDF
;
L62FB:
	db 85H
	dc '(STC)'
	dw L2D7A
STC2:
	dw EXECF
	dw DUP,PLUS,OVER,LIT,1FH
	dw GREATER,BRANCH0,0EH,LIT,4
	dw LIT,23H,BRANCH,0AH
	dw LIT,24H,LIT,22H,DPLUS
	dw LIT,1BH,EMIT,LIT,59H,EMIT
	dw EMIT,EMIT
	dw ENDF
;
L633D:
	db 86H
	dc '(SHOW)'
	dw L62FB
SHOWSCR:
	dw EXECF
	dw CLS,DECIMAL,PRINT
	db 06H,'SCR # '
	dw SCR,PEEK16,IMPNUM,SCRHALF,PEEK16
	dw BRANCH0,16H,PRINT
	db 05H,'UPPER'
	dw LIT,10H,LIT,5,BRANCH,10H,PRINT
	db 05H,'LOWER'
	dw LIT,0BH,ZERO,CR,DODO
	dw CR,PEEKI,THREE,IMPR,SPACE
	dw PEEKI,SCR,PEEK16,LINE1,DROP
	dw DUP,LIT,20H,TYPE,CR
	dw LIT,4,SPACES,LIT,20H
	dw PLUS,LIT,20H,TYPE,DOLOOP
	dw 0FFCEH
	dw ENDF
;
L63BF:
	db 86H
	dc '(TYPE)'
	dw L633D
TYPE2:
	dw EXECF
	dw DUP,LIT,20H,GREATER,BRANCH0,1AH,LIT,20H,SUBTRACT,DUP2
	dw TYPE,CR,LIT,4,SPACES
	dw PLUS,LIT,20H,TYPE
	dw ENDF
;
L63F2:
	db 88H
	dc '+PRINTER'
	dw L6286
	dw EXECF
	dw ONE,LIT,TOPRN,POKE8
	dw ENDF
;
L6409:
	db 88H
	dc '-PRINTER'
	dw L63F2
	dw EXECF
	dw ZERO,LIT,TOPRN,POKE8
	dw ENDF
;
L6420:
	db 87H
	dc '+SCREEN'
	dw L6409
	dw EXECF
	dw ZERO,LIT,TOSCR,POKE8
	dw ENDF
;
L6436:
	db 87H
	dc '-SCREEN'
	dw L6420
	dw EXECF
	dw ONE,LIT,TOSCR,POKE8
	dw ENDF
;
CPAGE:
	db 84H
	dc 'PAGE'
	dw L6436
	dw EXECF
	dw LIT,000CH,EMIT
	dw ENDF

;
KBO:
	db 06,'KFORTH'
;
	.DEPHASE
;
	END
;
